%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 27.1)
%%For: SANGPENA
%%CreationDate: 21/12/22
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 27.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 27.1.1 x196 R agm 6.0 ct 8.256%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.0-c000 79.f845eb1, 2022/11/03-19:28:45        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator 27.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-21T13:29:55+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-21T13:29:55+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-21T13:29:55+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>36</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAJAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9Ppq2mPqculJdxNqcESXE1kHUzLDIxVJCleXEshFcVQl75p0Wy8wad5fnmYa&#xA;tqiSyWcCxyMCkClpGZ1UogFP2iMVTC1u7W7h9e1mjuISzIJYmDryjYo68lJFVdSp8CKYqq4q7FXE&#xA;0BJ7eG/6sVSfQPM9prGnNf8A1a502ITG3WPUY/q0jHmERlRifhkc8U8TiqcYq7FVG9vbSxtJry8m&#xA;S3tbdDJPPIQqIiipZidgAMVeZXX5y6xqDsfKnluW+sQSi6heP9XLP6XrpxtKev6ckXxrI/EU6064&#xA;qo2n54Xlnd3MPmLQzHa2V1JZXd/p0v1kxywxiaZntCqziKGM8pJNwOm5xV6jp+o2OpWMF/YTpdWd&#xA;ygkguImDI6N0IIxVEYqlXmTzToHlrTTqWuXqWVny4LI9SWcgsERVDMzUUmgGKvkO7/5yE/NG9lEc&#xA;OszGe4dhZJbQWsahAyqFkqo/efF0ZvDpUYqzryB+dnmi0806SvmzW3byvqXrwma5tFiZLyOJX9Bm&#xA;VPU+Eyoa1ZaGvLjir6VhmimiSaF1kikUPHIhDKysKhlI2IIxVdiqD1PWtG0pIn1S/t7BJ3EUDXMq&#xA;Qh5DuEQuV5N7DFXg/wCbv/OTOl6ZqFrpfk66e+ktZUuNU1GzWOaERIeUluplHCQtCGJ4HbxBBoq9&#xA;i0D8wvJWvafZX+m6xavFqHprbRSSrFMZJRySMxOVcOw6LSp7YqyLFXYqx7V/zC8j6LqjaXrWuWel&#xA;XyxJOIr6VbYNHISFMbzcEepUiik9MVfK+pfnd+Yj+ataNtq8F/baDFcQx6zZJxN3AlJ4mMcNI2+G&#xA;3L/Z+AvJv6bEBV9L+S/zP8na7o+j18xaZLrV9BEs1kl1CJjdcF9aNYSwfkHb7PHwxVmWKuxV4Hrv&#xA;5o/mh5u88eYfKv5cXeiWOkeXlj+veZLuQyAepHVuJpInwOHU/uyKr9oYqkXl/wDKf8+bz0PNug/m&#xA;pBqUl6kbxzetcTWcqRkkLxKyRlVaoK+n1rUVrirNfy0/MT8y1/Mm8/Lz8xU01NQi0/6/p19ZB0N2&#xA;Oar8HIhXHHmTRFI4nbY4qxD82/zA/Kfzv5es9Qs9RmHmH0I7aygjjeJT9elt3YTzSQleEQRxWoG0&#xA;g2OKpF5uk/LPy1c6raT6pqd1rrMIL3Toj6UcUeko19buJfqsiOZvqUUQBrw5muytir2j8qvPHli6&#xA;nm8l6TcpOmiW8S2UgNw1xNDGiJPNc+rBAqubhnGxPI1NBir0jFXYq8Jjv/zj1/V2aKe3s0iP1a8g&#xA;uruKKFJJZY54oDBA0sgcAcKsokK1GKorzBbahpmkXVl5z8xifzLqUll6Is0YGdLZZWhgh4BDG6zV&#xA;laX0+KkqafFTFWW/lX5j0ua1Xy3Y3cmrzadaxXWoawGRoDc3jGV4UPwuac+QPGlOp5Yqz/FXhv8A&#xA;zkb5p1qG+0fQNJsIdWit45dd1rS7h+EdxZ2YZwjCo5j90/7ujcm4/CaYqi/L9rodj+XVh581iK8l&#xA;Bt7e90LSnuXkuGmlQLaepNEI2uLmb1AOTDiikDiOLMyreuJpmr/lvL540ITmO1t5p9X0N5nl4m3D&#xA;fWooTPza3mhdS1ECrLx4utGDKqgP+cdfNWrS6xrfl6/0yPR7S6hi8waJpUDiSO1s70KwX4dk5+op&#xA;9MKgDBqIK4q91xV4Z/zlZ5n0zT/LWi6c0sX6RbVLa9EE0TTRC3hDq0kiAUZVdlPCtWptirwnyRA+&#xA;s67JE+pwaZpLILjWqKs6RtY8YYZeCvA0kNWQVU8kNeNGxVR1sSf4cvdLv44JJ7J7o293pfGa0Zrl&#xA;45OZe1NxFUiQIYyEoqrU7shVfZn5c6npepeRdCudLnW4s1soYUkUEDlAgidaEAjiyEYqyPFXx9+b&#xA;/m38x9a/NhfLf1q3OnW+qixtEgkZYI0uSYIZZQJWf1ESVvUkCji/Je3EKsel/Kjy1p3mO68tXHmS&#xA;FpEfjeatPwtltXtGIf0y63ErgS/ByHAM5pSi1xV35g+R778p/NmlGy1OJ9UMEd4l1a2zrMqFpUmn&#xA;4XDzBWVFIDciQTsq7UVfZHku91y+8q6bd67bLaarNCGuYVkWUdSFcugVaulHIA2Jp2xVNbuSeO1m&#xA;kt4vXuEjZoYOQTm4BKpyOw5HapxV8UeYb/W/N2v+t5xuHi1BIQLuW3DQyW9kIbW7eO2ZpVglZvr7&#xA;LJF2HF24DfFV2mz+VdG8uwxRr5gul9We5tZJdKiWdvrhEfqV+u/G1LJGQ8Dxp/KTyVa0D9DeSrh9&#xA;T0Oy8wXWueWZJ5ppLiKBtMt09KdOZ5R1HqIeQoV+KtDspxV9meXtYg1vQNN1m3Vkt9TtYLyFJBxc&#xA;JcRrIoZatQ0bcVxVH4q+A9W1Py95auvMenLHa6rcweZ7iCLT3iiuBLp7SBneKR0ljRj9WWMMq8hy&#xA;+YKrOfyR8/8AnzyvKiafbwp+WgvTbzR6vPb2ssU88nEiJi5k9VTQFApUgciFLFsVZxffmB5f1f8A&#xA;PTyt5kkktzp2mabeLDcWzvMJecc3rSxu8UIZLeNTzC/F8Q4B64qzD8yfzIsfL3nKLRNZ1C7sNIvY&#xA;IrhLy0smluFuYriFo7WJ/TlWSGdEl9T4DQmnIdMVeW2vm7y3o+s6hea35wufPdpFEx07QdRS6W2m&#xA;nuOKx+k8v1iOiQo/71Y6fEw2BIKr3P8AK/zJomrx6lb6XqEepxWMxCzJGIzDHI7+nagLDCGjhVAq&#xA;PVi+9aEYqzrFWPed7nzEmlxWnl+3eTU7+eOCO66Q26g+o8k7A81QohWqgmpGKsBh0TUtE1ttS8w+&#xA;bxqEloj37aegWGOBZVSy9WSavFpE9RvT5Q1dl2ANRiqSWtz+QvlxpL+zln1e9RZYZhLzUyRtxgnX&#xA;0ykEb0EpKhV+It8Ow+FVkf5Y61ouraylnpHlu48t22nxvdukAe2hlEgEMP1tBHGkzlVYrVm3U0rQ&#xA;0Ver4q8A/wCckdJ8w2Pmby55t0O7i0+WSKfRrvUrlxHb28UySHlK3xEAiRm2H7GKp5pek6FfeU9C&#xA;8reZNeuNMl8vWsEGn6hA8Frb3QREFtdQvMtwnrRpCycee45mjxOrMq640vQLLQ9Z8oeU/MMuqal5&#xA;khkgvrqeW1mitFm9T6zeSPEtvGZ/SlPGLnyZUQKqxoSqqWfkH5Y84Qee/Nus+Zr6PULu0SHRPrlu&#xA;/qW831dUoFNFYNEE+IEVq+9Tir3bFXy3/wA5jaxfR6poGkPNbDT54J7tAbcmeOWAjd51LSenJ9mi&#xA;BadTXsq8r8sT6rZaVDd6fM8n15ZYKSrb/V1+ucpp0lhaKSR+bWkZUsCAGSn2qYqt1hLfVY2t9TN/&#xA;FM8jXM9y2mwov1yIu3pljKvwyh5C7DgBSIcOKoEVfX35HXuoXv5aaXcXlvYWoJnjtrbS4pIbdIoZ&#xA;niG0kkrM7sjOzV3r47lVnmKvi/z76en/APOQ19NbSzXL/Xo5TCtsGkYCRZWiAT1ZCPWqqsE5HYDi&#xA;DyKqefmFrNm3mnUdQ0mKE6LBHcrW1jWU+pcu1sbmSorJLIGkYNJvVgOdQmKvPvzU85S+a7/QC0Uk&#xA;zaTpq2eoqQ1xIzrezcI2cAh/3aJ8XdvHuq+4fKlrLZ+V9HtJSjS29jbRSNGrqhZIVU8VkLuBUbBi&#xA;T4nFU0xV8Sfnv5O1fy3+Y88MJkk0q8uLGXSFnniJKG3WJ25uycP38JSh47KB0IxVjEXmDUprEq4v&#xA;raGyllOrXstxJcwIl7Fb/VEkk4sq/vEloAlAW8Oiql+VPkseedTttDjuYbGe8vRFMz8QfqKxl7lI&#xA;WJdml41ZBxpUbnfFX6B21tBa28VtboI4IEWOKNeiog4qo+QGKsQ/OZ9Sj/KzzO+n28FzOthK0kd0&#xA;SIhABWeQ0+0Y4uThe5FMVfIvkzTvNmrT3NvpExj1S608xzyR2dxcyzxTxxG5iWT0ZBbM5dC8vJAt&#xA;abVAKqDn8z+UdO0a21vRtOgu7izvvTudKv7tKqOSSjlYmIvJDI8I5SR3DfysFqpxVOfys86ea/MH&#xA;nG50/RvLthIl/pl3FHpttHLbW8UFyIophAjzNEirIn2mB3LE9Tir7R1LQdH1KaGe+tI557YMIJWF&#xA;HQSUDhWFCA1N8VSKT8tNCkjuIpbi9nt73UP0lfW1xP8AWYp/hZPqskdwsq/VuLU9MAdBvsMVTTQv&#xA;K2m6Lfave2rSPcazci6u3lKmhSJYY404qtI0RAFBqR44qnGKpD5z8o2/mrSo9NuL25sYUnS4Z7Qo&#xA;Hf0w3FG9RZFK8mDfZ6gYqluhflN5J0bTr/TYbNriy1Ix/WoLlzIhWFzJGgXYBVJ6d6CtcVTHQPJ1&#xA;hpNmsXGE3KyiQ3Vpbx2TFI2PoxMId2VI6J8RPIdeuKoq18s6Xa+YbvXrcSRXt9CkF3GrkQyem1Vl&#xA;aIfCZKfDz602xVNcVQGvaFpWvaRc6Rq1ut1p92nCeFqiorUEMKFWVgCrA1B3GKvLLr8qPPmnatcX&#xA;GmaxFrelzWk1qtnqLvbzIDFDHbFmhRkn9A24b46KeUnw8nLYqjIPIX5pazbLpvmHW7XTtGQRALp6&#xA;tPesqQei6NLOvBGckyGQcjy6AfFVV6PoWhaVoWlW+laVbrbWNsvGKJfc1ZmJ3ZmJJYncnFUfirEf&#xA;N/5U+SfN+r22qeYbN72a0h+rwx+tLFGF9VZqkRMhJ5oD1xV87/mb/wA4waxpMizeUbSLUbCa+rHH&#xA;weS9jWfgAjyFlURgqByIJX4n5LyK4q9B8h/84w6Tapc3/nS4bUdVuVVYIrCe5tILRQedIjHIj7OT&#xA;T9keG5xV7B5V8s6Z5Y0C00LTPU+oWKstuJW5uFZ2ehbatC2Kprirxv8AM78kPr17deavLb3U+uSM&#xA;z3OltdiFZ42RwyW80iv6MnqSeovIlQagcaghV5DpvkrUrC3i0+fS9UjluiRfgNcxlzV3XnDDcWsf&#xA;7qnHeJwarRQN8VZd5J/5xzOqWUdxfW0/lkQTetasHZrnkjR8aRPx9ExFJeEi0b46nlTkVX0bYWiW&#xA;Vjb2aO8iW0SQrJKxeRhGoUF3apZjTcnriqviryz8/fyjl8/eX4p9M4jXdM5NbRtRRcRNQvBzNOL1&#xA;UNExNA3XYkhV8cjRPMNr9Z0rVIJDIZjYS2zROZ/rT8GiVoSvrNIeLBSI+2zUbFX1R/zjv+RcXlKF&#xA;vNOvWir5kvVpawOqhrWFq1YoCyxzSg/GFY8R8IO7Yq9xxVp0R0ZHUMjAhlIqCDsQQcVeD+Z/ye89&#xA;eXPMPmXWfy+jsNW0Xzejpr/la/d7Yt6oYSfV54ni48vUf9tePLv2VebjQdO8y28fkfy/+TRs/MOi&#xA;zNNqxvr64jtbd5QADJcrJHNcJKoqimWoX+7qKnFXrX5L/kr5j8r+Y5/NXmq7sm1H6iNM0zS9LRkt&#xA;LS15iQgFlQlqr4HcsxZi1cVez4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYqk9z/g/wDxLa/Wf0f/AIn9JvqXqeh9f9Hfl6XL99w6147YqnGKuxV2KuxVTT6v60nD&#xA;h63w+txpy6fDypv06VxVUxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2023d3f6-13f7-4776-b1e0-2cd42a45e7fb</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2023d3f6-13f7-4776-b1e0-2cd42a45e7fb</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:197454ea-62cf-3f4e-9663-25b0d0bb4c44</stRef:instanceID>
            <stRef:documentID>xmp.did:dff01704-2cde-454b-a4d4-4c7b937657e1</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2023d3f6-13f7-4776-b1e0-2cd42a45e7fb</stEvt:instanceID>
                  <stEvt:when>2022-12-21T13:29:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 27.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
818.729 402.344 mo
818.986 400.793 822 399.638 821.461 402.053 cv
821.087 410.273 816.627 411.083 818.729 402.344 cv
cp
816.066 399.982 mo
812.662 386.811 788.163 389.049 793.458 403.14 cv
801.264 400.872 813.094 390.645 813.949 407.024 cv
808.156 444.716 740.809 451.473 726.712 420.998 cv
706.215 400.335 746.461 425.727 745.282 432.023 cv
754.201 433.983 774.009 429.079 777.691 424.154 cv
760.801 419.639 794.018 417.902 798.549 414.104 cv
801.239 414.566 809.271 407.175 804.413 407.363 cv
798.566 409.916 790.207 416.875 784.352 410.831 cv
770.95 387.399 812.426 370.189 818.26 397.307 cv
819.831 399.232 818.135 402.088 816.066 399.982 cv
cp
750.786 451.712 mo
772.134 459 776.271 482.584 777.518 502.415 cv
776.533 514.901 779.43 529.803 768.673 510.412 cv
744.969 501.377 757.333 492.833 758.557 474.873 cv
756.977 451.564 732.561 456.246 735.065 478.002 cv
734.676 487.174 727.447 494.731 727.204 504.293 cv
726.353 512.435 725.955 521.726 717.465 525.983 cv
709.497 532.65 694.596 531.986 691.843 520.161 cv
691.613 516.842 695.021 513.103 692.344 509.916 cv
679.513 504.466 670.881 510.288 673.96 524.839 cv
657.37 522.093 668.674 487.166 684.559 486.934 cv
693.394 483.706 694.883 489.961 697.368 495.937 cv
707.825 491.785 713.07 502.936 705.013 509.922 cv
702.17 512.595 695.967 509.424 696.861 516.335 cv
715.191 529.542 725.925 493.749 727.006 479.922 cv
730.729 469.92 733.807 461.418 728.307 450.679 cv
731.638 443.294 734.775 455.09 739.821 454.722 cv
743.976 455.69 745.606 449.88 750.786 451.712 cv
cp
781.584 488.955 mo
801.285 507.419 785.742 543.363 758.572 543.392 cv
740.432 553.711 764.955 532.804 760.39 510.894 cv
775.663 508.99 769.012 549.614 778.112 523.448 cv
783.765 512.751 778.87 498.584 781.584 488.955 cv
cp
745.98 473.82 mo
747.906 465.367 755.382 467.119 755.49 475.308 cv
755.284 491.956 748.793 485.156 745.98 473.82 cv
cp
755.49 509.271 mo
755.454 514.383 749.282 507.177 746.468 507.555 cv
743.34 505.486 747.979 499.723 747.699 496.328 cv
747.125 478.311 748.009 504.62 755.49 509.271 cv
cp
733.514 526.803 mo
737.55 531.281 712.897 552.6 711.27 543.611 cv
715.168 535.903 727.716 534.109 733.514 526.803 cv
cp
740.19 480.484 mo
741.29 467.433 742.681 478.633 744.563 484.76 cv
741.738 485.316 739.682 483.572 740.19 480.484 cv
cp
742.05 492.762 mo
741.292 500.152 736.895 511.497 732.106 515.706 cv
728.471 510.549 732.66 479.477 742.05 492.762 cv
cp
752.341 558.46 mo
741.032 571.927 725.527 578.161 710.166 585.683 cv
697.633 595.012 688.794 592.496 685.831 576.174 cv
681.88 563.117 710.744 539.56 697.085 565.011 cv
702.175 592.246 745.175 545.212 740.674 535.714 cv
735.501 542.553 711.192 579.185 708.798 558.368 cv
714.117 544.941 736.86 542.904 737.889 527.204 cv
731.11 522.089 735.37 523.287 739.083 518.571 cv
740.693 507.647 754.22 514.297 752.632 522.258 cv
751.002 529.351 750.907 536.249 746.812 542.743 cv
746.802 545.783 738.869 549.03 743.325 551.309 cv
746.322 553.183 756.082 553.817 752.341 558.46 cv
cp
741.884 579.15 mo
730.45 592.87 743.279 590.44 741.592 598.307 cv
734.809 600.759 728.653 605.112 727.012 612.601 cv
716.15 638.154 762.81 626.948 735.111 646.384 cv
701.147 635.228 698.774 653.421 721.149 617.792 cv
728.101 610.017 723.264 605.827 721.419 599.689 cv
724.989 593.843 743.848 568.253 741.884 579.15 cv
cp
734.437 682.155 mo
729.099 673.626 735.016 657.255 719.409 654.124 cv
701.381 660.427 751.889 673.758 709.085 691.13 cv
704.115 692.147 692.317 688.801 695.78 682.642 cv
705.579 687.149 719.226 669.245 709.735 664.728 cv
702.754 677.537 684.518 667.651 694.185 654.675 cv
702.986 641.979 727.879 645.466 733.784 659.638 cv
738.75 665.252 738.048 676.622 734.437 682.155 cv
cp
728.474 686.187 mo
728.388 685.066 730.683 683.377 731.091 685.071 cv
731.469 685.73 728.852 688.009 728.474 686.187 cv
cp
745.504 664.131 mo
744.122 666.366 749.809 668.624 750.467 665.287 cv
764.721 657.519 748.953 674.276 744.149 676.967 cv
728.368 715.54 705.903 686.212 686.04 712.138 cv
683.649 700.818 681.722 666.643 699.62 676.82 cv
673.209 684.73 709.168 707.489 722.085 691.884 cv
725.464 689.581 723.004 694.256 724.832 694.913 cv
729.965 691.086 735.429 685.152 740.088 679.515 cv
743.112 676.669 741.498 657.948 745.504 664.131 cv
cp
720.206 609.697 mo
717.354 615.22 712.116 619.559 709.787 624.969 cv
706.797 624.417 699.995 624.248 699.562 620.879 cv
705.434 618.057 714.051 597.35 720.206 609.697 cv
cp
717.625 594.687 mo
706.672 602.836 696.066 636.076 694.117 607.455 cv
692.38 594.503 749.986 565.399 717.625 594.687 cv
cp
686.799 645.93 mo
682.505 638.741 678.42 628.157 681.33 620.337 cv
688.403 624.925 685.483 617.93 690.26 614.332 cv
693 616.055 690.921 619.452 692.993 621.701 cv
697.887 624.988 702.635 628.208 708.498 628.714 cv
708.552 636.653 691.316 635.175 692.124 641.546 cv
707.797 644.586 688.396 655.173 686.799 645.93 cv
cp
676.083 635.405 mo
678.719 641.388 677.958 644.473 673.165 649.035 cv
662.871 667.496 668.365 634.157 669.375 626.181 cv
669.459 616.564 673.7 611.713 678.584 605.382 cv
680.054 596.946 677.18 586.486 680.002 578.942 cv
706.944 618.87 669.511 604.403 676.083 635.405 cv
cp
661.892 661.43 mo
662.483 669.266 666.754 675.624 662.326 683.029 cv
659.966 718.662 655.543 690.153 651.422 674.395 cv
651.957 654.664 649.083 633.509 658.267 615.096 cv
660.138 611.637 666.286 596.3 666.904 607.729 cv
663.759 625.062 659.731 643.655 661.892 661.43 cv
cp
658.677 724.804 mo
656.574 733.651 650.258 722.081 649.418 727.852 cv
644.691 730.551 644.782 722.737 640.022 723.997 cv
634.845 720.738 632.785 709.664 628.835 703.453 cv
621.731 693.324 634.8 682.733 637.649 673.471 cv
643.926 658.798 647.008 655.659 646.454 674.198 cv
644.553 692.648 665.327 707.272 658.677 724.804 cv
cp
617.778 762.253 mo
612.399 764.181 603.354 774.437 598.43 771.434 cv
595.757 759.968 588.794 764.371 589.677 758.984 cv
594.444 754.295 602.264 754.177 607.929 750.68 cv
615.375 745.859 637.726 719.465 641.472 732.488 cv
628.005 735.157 614.748 748.383 617.778 762.253 cv
cp
625.986 750.817 mo
626.581 746.758 637.031 736.592 638.232 741.292 cv
635.547 744.284 628.868 752.448 625.986 750.817 cv
cp
593.91 776.845 mo
568.103 790.47 541.043 799.214 513.175 804.274 cv
473.234 807.548 562.663 761.201 568.653 751.647 cv
576.95 740.576 581.207 755.432 586.551 762.589 cv
587.397 767.203 600.043 773.455 593.91 776.845 cv
cp
501.118 795.518 mo
506.021 794.985 499.517 799.639 499.796 801.886 cv
494.282 806.084 495.055 795.391 501.118 795.518 cv
cp
491.637 805.278 mo
462.029 804.289 414.556 801.584 395.177 781.851 cv
412.578 752.293 407.456 765.704 403.769 739.46 cv
407.73 742.612 408.636 747.485 410.256 751.766 cv
422.111 748.455 438.342 771.941 453.207 777.058 cv
461.313 785.968 500.329 794.46 491.637 805.278 cv
cp
346.403 729.157 mo
338.103 728.197 335.456 709.802 330.132 701.903 cv
317.72 696.902 339.435 725.033 338.776 729.885 cv
330.25 738.065 263.987 793.397 292.883 756.874 cv
306.799 743.16 309.883 723.244 317.942 707.016 cv
320.021 706.39 327.217 690.345 321.614 695.29 cv
320.023 695.934 317.53 701.922 316.619 698.665 cv
318.471 689.325 311.828 677.155 315.423 669.385 cv
323.97 651.175 319.438 629.07 312.201 610.85 cv
335.108 587.313 320.618 723.091 330.301 663.462 cv
332.659 640.47 329.493 614.99 318.657 594.753 cv
332.399 574.753 324.533 543.417 302.763 533.493 cv
316.277 523.707 326.381 501.573 315.028 486.176 cv
313.171 482.096 324.166 469.911 325.145 472.404 cv
324.978 514.085 326.711 555.614 332.225 596.15 cv
337.078 633.438 351.663 639.126 333.704 675.78 cv
349.233 662.465 340.788 640.697 356.31 676.58 cv
377.118 707.602 368.099 704.512 354.756 732.652 cv
356.653 743.098 371.703 735.936 370.259 729.617 cv
366.11 730.945 376.765 712.658 378.632 713.116 cv
381.593 718.043 394.942 728.146 392.249 732.212 cv
386.011 735.552 376.95 743.149 376.495 750.636 cv
375.905 768.641 411.521 750.536 401.411 762.977 cv
398.698 769.086 393.1 774.001 393.01 780.837 cv
378.811 782 324.067 744.823 346.403 729.157 cv
cp
300.031 537.708 mo
328.26 541.691 319.411 605.729 317.518 572.129 cv
317.79 558.37 304.276 544.859 300.031 537.708 cv
cp
309.71 666.059 mo
309.617 656.771 301.266 649.438 300.908 641.111 cv
305.484 634.945 304.327 610.877 297.622 611.322 cv
299.707 623.773 288.524 658.209 274.065 637.975 cv
273.443 634.342 289.018 629.975 281.05 627.647 cv
279.096 630.146 276.628 630.439 274.414 627.865 cv
296.103 608.346 287.148 604.687 278.049 582.689 cv
283.086 583.081 286.923 588.134 290.509 590.354 cv
293.146 582.076 292.757 568.861 290.355 560.079 cv
292.809 546.361 300.48 569.281 297.718 575.268 cv
306.601 583.607 301.564 551.905 287.33 547.922 cv
283.269 533.136 307.073 550.66 307.76 558.13 cv
309.17 564.679 312.241 571.26 312.404 578.117 cv
311.63 583.128 308.259 590.452 312.689 594.223 cv
317.981 598.621 309.997 610.379 307.375 599.659 cv
303.846 595.064 297.274 591.061 297.68 584.623 cv
297.744 583.362 298.297 578.107 296.146 580.384 cv
290.802 596.97 310.819 610.584 311.288 627.405 cv
315.401 630.814 315.124 673.429 309.71 666.059 cv
cp
286.058 660.966 mo
295.25 661.034 287.156 681.504 279.039 680.673 cv
268.869 684.99 252.354 666.128 267.419 662.036 cv
271.429 674.379 283.556 673.56 286.058 660.966 cv
cp
258.046 696.055 mo
267.255 684.098 236.019 676.235 239.607 661.442 cv
238.923 632.705 292.96 634.043 281.045 663.904 cv
270.487 676.675 275.191 655.085 268.804 656.853 cv
262.92 659.895 253.198 669.058 259.824 655.714 cv
262.691 650.665 276.075 655.794 273.405 648.724 cv
263.01 637.92 244.308 649.599 247.521 663.595 cv
247.74 675.255 263.727 679.83 266.242 690.133 cv
269.842 697.731 251.836 705.678 258.046 696.055 cv
cp
244.128 681.671 mo
247.631 683.602 252.436 687.15 253.099 690.895 cv
248.578 691.797 246.798 684.424 244.128 681.671 cv
cp
220.777 639.241 mo
204.051 641.658 199.459 622.983 206.287 611.18 cv
214.598 595.946 249.145 583.469 251.588 608.229 cv
251.848 624.243 224.223 615.848 230.907 635.249 cv
232.58 647.212 246.12 640.067 237.627 653.716 cv
231.362 659.513 221.141 645.791 220.777 639.241 cv
cp
235.299 669.714 mo
230.954 669.156 233.573 664.106 231.286 661.327 cv
232.968 654.433 236.249 667.325 235.299 669.714 cv
cp
252.134 584.563 mo
259.52 590.054 265.045 606.227 272.81 614.681 cv
275.807 618.825 268.104 625.121 267.735 627.61 cv
274.38 641.584 261.169 631.289 257.024 634.914 cv
247.378 642.439 227.881 638.068 239.904 626.166 cv
248.423 626.038 246.584 622.111 252.375 619.491 cv
262.59 609.767 254.369 594.594 252.134 584.563 cv
cp
282.769 605.934 mo
283.634 631.355 259.623 581.215 255.716 574.708 cv
263.189 566.771 283.404 595.574 282.769 605.934 cv
cp
239.761 482.522 mo
242.877 480.292 243.51 485.71 241.778 487.407 cv
235.537 516.159 242.607 547.019 270.71 560.82 cv
274.445 564.046 282.796 552.688 280.553 562.901 cv
277.888 572.436 292.209 588.667 273.353 576.71 cv
231.263 565.421 227.267 516.167 239.761 482.522 cv
cp
226.242 552.124 mo
230.497 538.816 245.983 572.199 249.494 578.165 cv
237.404 590.726 232.506 559.158 226.242 552.124 cv
cp
214.99 548.846 mo
205.231 540.06 185.294 504.621 196.625 483.505 cv
206.63 464.074 205.989 475.241 203.059 490.14 cv
201.177 515.331 213.756 522.205 228.547 501.638 cv
226.476 514.783 232.592 533.869 228.928 544.09 cv
223.74 543.521 216.012 541.923 214.99 548.846 cv
cp
224.26 558.432 mo
222.137 555.037 212.737 545.093 222.126 546.987 cv
224.197 550.254 224.928 554.694 224.26 558.432 cv
cp
215.367 557.904 mo
214.906 556.073 214.906 556.073 215.273 554.577 cv
216.938 556.345 216.946 556.454 215.367 557.904 cv
cp
241.825 476.298 mo
249.113 462.978 250.059 475.865 247.278 483.781 cv
246.468 480.636 239.464 479.45 241.825 476.298 cv
cp
247.438 495.671 mo
250.702 514.189 263.992 530.019 280.717 539.411 cv
284.693 541.465 279.372 548.507 283.676 551.834 cv
287.476 557.416 281.669 554.168 278.395 554.13 cv
252.203 555.901 238.81 508.051 247.438 495.671 cv
cp
209.133 486.031 mo
213.77 449.998 238.153 434.406 268.151 456.235 cv
271.761 470.988 265.259 485.535 265.277 500.311 cv
268.919 503.147 267.351 495.484 269.274 494.414 cv
272.27 493.27 273.819 501.711 271.704 502.946 cv
265.434 510.902 282.172 521.989 288.784 516.753 cv
299.225 506.881 261.261 500.783 279.635 484.942 cv
286.729 478.959 303.938 505.33 298.053 488.948 cv
294.119 486.083 299.882 484.51 302.515 485.116 cv
317.271 482.029 317.705 507.013 311.584 516.428 cv
299.321 545.561 261.573 534.683 263.224 504.826 cv
261.817 501.9 261.963 483.024 256.41 489.868 cv
257.097 496.015 260.403 502.129 259.287 508.777 cv
254.508 516.823 253.038 493.697 252.31 490.377 cv
249.987 485.839 258.042 484.536 254.594 480.452 cv
251.104 475.374 256.545 469.894 253.209 464.798 cv
248.367 449.697 227.241 456.264 234.427 463.517 cv
244.805 452.505 243.499 468.61 236.533 474.012 cv
233.083 475.102 235.831 468.401 233.482 466.81 cv
233.289 465.052 228.224 464.978 230.159 467.328 cv
232.813 479.038 239.015 490.007 224.486 496.104 cv
218.603 499.362 216.858 505.741 214.359 510.694 cv
206.359 506.483 209.492 493.795 209.133 486.031 cv
cp
231.85 434.556 mo
247.74 443.798 264.359 431.212 280.957 431.323 cv
283.115 430.417 284.746 432.176 282.934 434.019 cv
273.396 448.318 281.142 467.83 284.122 479.243 cv
255.402 490.089 301.56 442.5 240.347 441.329 cv
231.398 438.355 221.663 451.016 216.767 442.405 cv
218.412 439.201 227.322 432.988 231.85 434.556 cv
cp
296.089 448.035 mo
292.584 436.08 312.35 403.88 303.941 435.348 cv
305.392 445.486 299.641 473.327 296.089 448.035 cv
cp
332.614 380.281 mo
315.769 401.345 288.768 426.03 293.762 455.024 cv
300.824 486.161 298.18 437.462 319.104 460.84 cv
326.768 495.926 266.634 482.069 285.502 439.132 cv
298.601 422.404 313.141 379.385 332.614 380.281 cv
cp
296.376 408.644 mo
300.666 407.292 295.154 417.484 292.193 416.501 cv
277.822 416.349 290.83 413.26 296.376 408.644 cv
cp
299.277 394.641 mo
302.334 404.236 286.673 407.356 280.647 412.069 cv
269.042 412.252 293.362 385.863 299.277 394.641 cv
cp
275.322 416.793 mo
267.284 409.511 242.935 423.86 261.64 410.802 cv
264.46 409.847 272.246 402.882 273.248 407.423 cv
270.519 414.578 286.434 418.461 275.322 416.793 cv
cp
234.554 403.168 mo
244.474 395.903 258.267 399.106 269.45 394.555 cv
285.994 373.627 257.295 388.298 286.741 371.415 cv
293.275 367.893 293.152 352.434 297.549 352.956 cv
321.43 373.017 267.054 403.475 248.782 412.322 cv
237.67 418.302 214.566 414.412 234.554 403.168 cv
cp
230.41 396.545 mo
216.223 396.565 214.692 387.75 217.157 376.877 cv
230.311 386.412 245.76 393.295 260.792 385.192 cv
235.51 379.986 220.715 381.61 227.685 345.96 cv
239.237 328.847 215.726 349.256 211.334 341.023 cv
218.604 310.717 280.715 315.065 279.887 348.514 cv
281.216 365.853 253.354 374.284 254.799 353.2 cv
255.633 344.616 266.9 344.331 269.205 338.311 cv
261.632 332.72 247.629 338.301 243.512 346.835 cv
214.398 389.792 286.328 370.258 266.124 390.691 cv
253.445 392.259 242.462 395.483 230.41 396.545 cv
cp
248.942 368.807 mo
250.229 381.19 233.55 357.593 248.908 347.537 cv
257.23 342.577 243.808 363.74 248.942 368.807 cv
cp
291.602 344.796 mo
299.027 365.859 259.096 390.495 250.53 363.262 cv
249.86 350.679 265.563 391.281 283.764 353.329 cv
285.798 346.584 282.302 336.339 291.602 344.796 cv
cp
320.195 380.533 mo
298.228 402.688 314.839 397.03 293.951 388.444 cv
293.253 383.295 305.058 374.528 309.762 370.718 cv
312.809 372.382 323.102 376.6 320.195 380.533 cv
cp
340.437 321.296 mo
340.828 321.255 341.047 321.861 340.663 322.104 cv
340.208 322.297 340.111 321.469 340.437 321.296 cv
cp
352.536 343.94 mo
351.104 345.245 348.778 343.858 347.212 342.594 cv
349.118 342.244 352.177 341.854 352.536 343.94 cv
cp
295.876 314.597 mo
296.085 283.227 323.724 258.674 355.954 263.539 cv
362.605 262.907 386.784 278.182 385.171 268.533 cv
380.053 268.409 379.62 262.46 382.92 259.604 cv
393.382 247.391 402.46 272.276 391.061 279.018 cv
374.285 286.709 357.402 273.059 340.167 277.018 cv
324.305 278.535 318.563 295.556 312.633 308.329 cv
310.625 312.425 317.365 335.078 317.627 322.224 cv
308.447 289.634 359.742 266.351 368.639 304.408 cv
376.561 323.292 346.86 350.965 334.197 328.212 cv
335.508 321.356 340.683 332 344.735 330.537 cv
353.175 335.201 370.761 314.9 358.771 315.668 cv
357.969 323.967 340.542 323.987 347.495 314.679 cv
351.855 313.828 354.813 311.009 348.989 309.402 cv
290.123 335.835 373.022 376.057 418.121 330.938 cv
427.172 323.998 436.012 314.236 438.605 303.356 cv
458.119 291.57 440.003 327.972 431.457 333.293 cv
404.442 361.001 352.382 385.406 320.084 355.09 cv
314.615 350.069 314.438 341.724 311.406 336.376 cv
305.011 347.153 321.834 365.302 331.661 371.096 cv
353.724 388.265 284.684 364.48 295.876 314.597 cv
cp
372.066 322.657 mo
381.38 328.368 360.587 341.019 355.308 340.572 cv
356.196 335.897 364.553 334.159 367.053 329.509 cv
369.623 327.793 368.713 323.04 372.066 322.657 cv
cp
390.854 341.236 mo
381.408 344.477 369.495 347.038 359.947 345.398 cv
365.382 340.522 396.915 324.879 390.854 341.236 cv
cp
440.701 275.294 mo
441.166 272.434 442.98 270.854 444.281 268.979 cv
443.333 271.075 443.874 273.948 440.701 275.294 cv
cp
435.954 301.217 mo
428.242 315.975 412.683 336.166 395.017 335.742 cv
402.634 328.225 415.138 323.425 422.431 313.779 cv
426.949 311.406 431.396 292.533 435.954 301.217 cv
cp
435.703 292.287 mo
440.299 273.824 435.662 283.214 443.75 293.707 cv
444.714 296.494 434.472 295.335 435.703 292.287 cv
cp
395.412 315.421 mo
408.104 313.759 406.346 303.587 402.98 295.925 cv
415.022 292.156 422.144 280.708 429.616 271.067 cv
452.785 237.669 448.626 251.446 432.784 277.175 cv
429.388 292.537 424.749 302.887 413.674 314.55 cv
404.795 326.192 381.108 325.406 386.795 307.09 cv
387.16 302.327 382.024 307.103 381.234 309.391 cv
375.03 318.892 385.525 324.192 389.206 330.114 cv
380.849 332.422 373.438 321.388 373.792 313.767 cv
371.563 286.337 416.662 290.165 395.412 315.421 cv
cp
412.218 265.991 mo
422.141 258.825 430.036 244.663 442.473 248.132 cv
434.124 255.812 413.345 294.05 406.483 288.249 cv
411.63 281.629 409.749 272.628 412.218 265.991 cv
cp
409.083 250.972 mo
405.276 239.226 423.914 226.171 428.783 239.8 cv
431.934 235.904 436.888 226.632 443.425 229.689 cv
440.009 236.439 430.157 244.993 423.175 248.901 cv
418.418 251.984 421.253 240.795 416.23 243.097 cv
412.492 247.04 415.068 265.6 409.083 250.972 cv
cp
447.575 233.351 mo
465.035 218.118 455.743 249.522 448.856 247.564 cv
438.495 241.35 443.561 241.868 447.575 233.351 cv
cp
461.498 239.78 mo
464.683 233.977 463.546 224.017 472.551 228.064 cv
485.447 227.031 468.081 245.18 468.957 252.663 cv
456.834 260.454 455.469 249.903 461.498 239.78 cv
cp
487.204 228.234 mo
482.439 237.218 479.984 246.937 475.99 256.049 cv
484.698 264.104 483.798 243.358 486.977 238.32 cv
489.396 228.498 504.74 225.91 508.364 236.321 cv
508.232 241.118 510.087 253.356 504.063 253.516 cv
500.182 252.699 483.549 252.307 485.877 257.525 cv
494.719 257.174 503.364 256.095 511.761 254.003 cv
524.815 257.773 507.225 265.223 500.472 262.586 cv
491.236 264.038 482.158 265.854 472.467 266.557 cv
467.639 265.451 445.969 260.655 454.66 254.729 cv
458.438 255.321 461.823 257.681 466.028 259.055 cv
474.369 257.788 475.056 239.046 480.011 231.788 cv
478.436 225.935 488.892 218.566 487.204 228.234 cv
cp
486.246 206.735 mo
461.935 184.663 521.656 196.885 509.057 202.302 cv
506.948 200.234 505.4 202.195 503.782 202.935 cv
501.205 203.656 498.485 201.801 495.516 202.434 cv
490.374 200.567 489.798 211.697 486.246 206.735 cv
cp
535.549 196.153 mo
527.409 180.583 559.508 194.001 563.61 200.196 cv
559.761 206.368 550.692 199.573 545.423 200.716 cv
542.743 207.848 540.462 202.292 537.35 199.538 cv
532.862 204.67 529.334 203.894 523.847 199.689 cv
517.505 202.601 511.269 200.426 510.232 193.403 cv
518.665 186.133 528.53 193.11 535.549 196.153 cv
cp
568.224 208.992 mo
578.751 225.511 541.204 216.97 556.452 210.541 cv
561.759 216.123 564.116 203.227 568.224 208.992 cv
cp
563.738 241.866 mo
569.048 252.537 569.277 265.853 574.014 276.382 cv
583.461 289.901 595.53 318.032 615.986 311.285 cv
623.483 311.298 611.503 323.191 607.507 322.64 cv
590.012 327.243 575.862 305.262 569.589 291.294 cv
568.271 283.192 543.616 206.542 563.738 241.866 cv
cp
575.213 250.083 mo
582.548 249.492 588.005 247.831 582.748 256.617 cv
580.673 260.114 584.084 268.464 579.293 269.361 cv
576.194 266.506 571.404 252.436 575.213 250.083 cv
cp
596.345 295.43 mo
598.579 273.388 637.432 292.047 622.178 294.649 cv
619.083 292.324 610.481 290.186 609.93 295.208 cv
612.635 299.029 621.258 301.967 615.913 307.401 cv
609.091 312.691 595.753 303.058 596.345 295.43 cv
cp
623.399 299.367 mo
627.06 297.97 623.833 304.24 622.399 301.94 cv
621.715 300.914 622.214 299.626 623.399 299.367 cv
cp
606.523 333.123 mo
611.461 323.373 627.56 335.982 614.305 336.299 cv
612.243 334.309 605.658 337.517 606.523 333.123 cv
cp
564.278 294.551 mo
564.98 295.56 567.076 299.164 564.714 298.958 cv
562.377 298.639 562.033 295.55 564.278 294.551 cv
cp
556.707 222.059 mo
561.405 221.373 558.13 229.548 555.658 225.697 cv
554.737 224.256 553.898 221.599 556.707 222.059 cv
cp
628.791 305.575 mo
641.728 291.713 674.466 296.691 676.626 317.467 cv
666.849 313.202 653.511 304.585 642.01 312.818 cv
637.461 314.199 628.596 326.485 637.638 324.99 cv
641.48 321.318 645.14 316.867 650.534 315.626 cv
662.398 312.199 675.305 327.815 672.603 339.421 cv
662.705 385.315 604.874 364.484 578.936 345.377 cv
571.073 342.086 528.726 289.955 555.226 313.736 cv
552.263 296.287 544.847 306.543 536.134 299.875 cv
518.664 280.043 552.795 294.391 547.915 272.39 cv
545.476 266.302 548.467 257.968 542.064 256.592 cv
543.706 245.634 535.219 237.108 531.581 226.65 cv
539.143 225.515 540.596 239.412 544.441 243.72 cv
549.603 240.143 542.753 229.223 544.205 223.554 cv
552.411 218.471 553.924 242.351 549.988 247.253 cv
544.86 252.357 552.494 258.16 551.899 264.194 cv
553.411 278.981 556.173 277.805 558.828 264.274 cv
568.843 269.951 555.754 293.124 554.364 302.976 cv
581.002 335.136 604.58 351.154 559.386 304.706 cv
560.085 296.935 588.506 334.226 600.022 334.435 cv
604.827 338.292 610.504 340.264 617.011 339.375 cv
628.002 350.466 652.611 367.492 662.19 344.305 cv
669.625 324.578 630.577 320.824 656.275 334.661 cv
666.95 369.949 601.047 349.074 628.791 305.575 cv
cp
630.379 286.382 mo
665.747 279.297 700.832 313.101 678.052 334.142 cv
673.869 318.659 676.099 326.818 681.072 315.605 cv
678.103 274.77 619.526 307.2 630.379 286.382 cv
cp
606.955 378.544 mo
601.171 378.553 606.015 369.561 601.148 366.702 cv
597.75 357.567 616.541 378.626 606.955 378.544 cv
cp
449.532 317.603 mo
452.439 317.056 457.669 334.454 453.044 336.556 cv
444.67 342.917 436.124 362.76 427.133 362.567 cv
428.584 358.596 430.409 353.289 426.253 350.484 cv
427.553 340.433 446.938 330.95 449.532 317.603 cv
cp
536.664 329.381 mo
535.493 329.767 532.033 329.588 531.315 328.261 cv
528.28 322.438 519.73 329.039 517.438 322.495 cv
513.346 312.464 525.966 322.185 529.433 320.204 cv
532.424 310.928 508.384 316.639 515.692 306.097 cv
518.677 305.528 530.757 314.258 528.851 306.961 cv
524.765 301.979 515.585 304.407 512.502 298.235 cv
513.253 293.431 519.709 295.798 522.332 297.58 cv
524.268 299.139 529.001 299.94 526.917 296.132 cv
524.264 291.39 508.569 293.539 516.14 286.977 cv
518.538 284.048 522.882 290.379 524.226 286.225 cv
528.812 272.52 528.897 301.31 532.661 304.895 cv
534.222 312.708 537.156 321.417 536.664 329.381 cv
cp
578.495 365.538 mo
572.543 359.066 543.828 338.775 553.093 332.899 cv
566.684 347.645 581.801 360.753 598.501 372.139 cv
599.998 384.659 581.603 370.761 578.495 365.538 cv
cp
493.721 406.216 mo
510.251 390.892 541.054 381.257 522.206 355.583 cv
524.973 335.538 511.175 334.437 509.79 317.551 cv
512.787 310.09 510.243 331.577 518.382 330.439 cv
551.456 334.321 503.441 347.121 545.317 361.225 cv
555.763 361.198 562.394 386.745 574.762 373.355 cv
576.526 370.55 579.144 375.607 580.679 376.792 cv
552.561 385.269 510.941 392.236 485.54 415.057 cv
477.349 418.641 491.361 408.068 493.721 406.216 cv
cp
458.385 340.916 mo
453.977 347.262 429.912 385.88 426.654 370.755 cv
439.773 367.17 449.683 336.759 458.385 340.916 cv
cp
461.207 335.008 mo
459.931 321.659 453.503 308.498 451.718 295.234 cv
461.797 298.413 466.048 306.458 464.173 316.979 cv
463.859 323.403 467.381 354.803 461.207 335.008 cv
cp
392.268 488.461 mo
392.396 492.984 386.501 490.939 386.447 487.562 cv
386.55 484.146 392.902 484.226 392.268 488.461 cv
cp
468.719 469.332 mo
447.133 473.452 468.952 470.153 473.523 460.701 cv
474.753 459.154 474.178 452.735 477.105 455.61 cv
481.512 461.054 483.899 476.695 475.786 479.09 cv
474.217 475.375 474.88 469.086 468.719 469.332 cv
cp
452.245 743.145 mo
443.022 740.427 428.464 734.692 424.407 726.515 cv
433.06 726.2 442.193 740.39 452.245 743.145 cv
cp
527.463 745.164 mo
526.864 746.248 525.856 745.986 524.503 745.971 cv
525.612 745.139 526.557 745.201 527.463 745.164 cv
cp
523.253 746.464 mo
500.704 753.616 473.864 752.115 452.371 743.21 cv
476.144 746.963 499.102 750.353 523.253 746.464 cv
cp
520.584 741.166 mo
515.019 740.423 484.321 746.605 485.693 742.04 cv
488.622 734.298 497.255 738.852 503.001 735.649 cv
505.823 735.91 508.015 740.573 510.515 736.776 cv
513.761 732.321 516.688 739.567 519.685 736.439 cv
527.081 729.604 530.441 740.992 520.584 741.166 cv
cp
530.302 734.577 mo
530.858 731.233 537.603 730.255 537.867 733.643 cv
537.416 737.66 531.491 738.472 530.302 734.577 cv
cp
535.094 741.25 mo
539.576 741.661 541.541 737.655 541.71 733.839 cv
546.131 723.983 559.706 719.697 567.226 711.676 cv
579.544 705.334 580.893 683.158 595.481 683.068 cv
595.81 700.532 570.523 722.8 554.456 733.632 cv
548.589 739.915 516.829 748.492 535.094 741.25 cv
cp
596.692 607.36 mo
600.556 590.801 603.061 588.297 608.027 606.284 cv
611.896 611.291 595.816 609.306 596.692 607.36 cv
cp
548.669 601.891 mo
540.836 610.831 515.717 622.79 506.477 612.25 cv
506.755 594.328 538.14 595.021 548.669 601.891 cv
cp
533.356 593.26 mo
523.277 592.633 512.972 594.737 505.022 600.945 cv
504.116 592.665 512.509 586.736 520.353 587.323 cv
538.25 581.432 577.322 603.799 533.356 593.26 cv
cp
562.823 632.141 mo
567.01 628.513 574.164 624.62 575.524 617.873 cv
577.773 609.494 586.862 603.826 587.724 594.523 cv
591.022 589.251 583.063 583.683 583.411 592.217 cv
584.675 597.847 577.277 598.086 577.542 602.905 cv
576.017 609.216 567.39 610.331 570.05 618.225 cv
558.601 624.729 554.021 639.489 539.986 641.887 cv
530.601 650.953 522.772 648.503 512.005 650.427 cv
509.981 651.639 508.499 648.72 506.969 647.651 cv
502.665 644.651 496.484 645.682 492.233 642.886 cv
486.411 640.05 482.634 634.505 479.146 643.092 cv
464.901 660.162 455.867 601.419 474.827 588.504 cv
493.965 563.309 528.319 559.567 557.598 564.971 cv
566.616 564.251 566.004 590.305 558.832 589.312 cv
546.639 585.574 534.668 574.667 521.897 582.424 cv
516.093 578.419 516.054 580.451 510.427 583.839 cv
498.842 585.531 497.113 602.538 496.709 612.083 cv
505.11 634.022 540.361 618.499 552.596 605.912 cv
601.97 563.03 508.1 508.406 543.217 460.76 cv
546.065 455.545 564.783 443.722 562.644 456.193 cv
555.829 461.877 544.449 472.488 547.579 482.336 cv
558.834 519.4 600.708 546.049 595.205 589.351 cv
589.75 633.501 541.484 670.558 498.662 659.524 cv
492.363 656.622 482.728 657.518 478.917 651.199 cv
475.876 648.753 482.333 642.171 485.011 644.484 cv
490.57 643.639 488.878 650.224 493.745 650.589 cv
497.951 648.929 498.154 657.012 501.577 655.147 cv
507.03 651.566 510.494 662.329 516.733 653.839 cv
531.389 656.418 543.828 647.76 555.117 639.977 cv
558.251 638.14 563.632 637.438 562.823 632.141 cv
cp
456.178 685.574 mo
447.767 683.249 437.966 672.844 440.969 662.842 cv
444.827 671.245 449.995 678.734 456.178 685.574 cv
cp
494.824 529.611 mo
489.758 538.416 483.17 548.872 475.552 554.839 cv
480.729 546.125 487.47 536.52 494.824 529.611 cv
cp
494.899 529.5 mo
494.821 528.951 494.827 528.412 495.352 527.795 cv
495.776 528.695 495.537 529.162 494.899 529.5 cv
cp
505.637 509.643 mo
505.764 511.11 504.821 512.143 503.928 513.682 cv
503.926 511.75 504.529 510.581 505.637 509.643 cv
cp
511.265 494.563 mo
510.724 499.592 508.786 505.416 505.684 509.49 cv
506.558 504.412 508.426 498.822 511.265 494.563 cv
cp
441.762 604.938 mo
433.149 627.356 432.395 652.258 435.239 675.41 cv
454.835 702.385 493.606 714.354 523.575 699.541 cv
555.116 686.852 558.368 648.766 586.615 634.183 cv
593.49 629.624 591.85 618.494 599.499 626.93 cv
598.316 593.501 610.024 626.135 605.032 639.11 cv
604.364 645.488 597.705 684.44 590.327 677.432 cv
589.414 675.179 594.233 660.624 588.525 665.877 cv
579.24 698.572 549.168 729.117 514.542 730.464 cv
498.542 732.501 483.76 735.692 469.094 726.745 cv
463.806 725.7 461.682 734.579 465.586 737.485 cv
469.928 730.967 475.537 738.441 480.929 735.691 cv
491.218 740.352 473.884 742.028 469.508 740.313 cv
451.521 739.833 434.474 726.607 423.767 711.169 cv
418.025 709.436 422.817 718.154 422.876 720.7 cv
416.477 725.17 406.651 708.021 403.209 702.146 cv
387.045 673.433 391.03 639.811 399.376 609.353 cv
414.727 563.881 460.607 534.85 472.094 489.081 cv
473.429 483.54 484.059 486.711 485.024 478.908 cv
489.367 467.093 487.17 450.242 473.384 446.512 cv
470.169 445.861 465.918 442.244 463.235 444.589 cv
463.073 448.79 471.1 449.266 469.161 454.772 cv
469.983 463.594 458.428 462.873 454.29 464.957 cv
447.942 482.612 424.9 503.458 405.941 500.253 cv
401.65 494.625 409.54 496.903 411.981 495.409 cv
410.778 493.199 409.027 488.771 413.66 489.173 cv
422.609 502.533 434.818 476.485 444.531 471.419 cv
456.162 465.753 437.406 468.404 434.687 473.728 cv
426.552 480.006 416.094 478.837 407.071 481.731 cv
357.85 490.758 412.635 431.035 430.513 424.957 cv
438.638 419.022 455.276 425.588 459.917 420.286 cv
451.728 407.815 439.872 393.775 435.375 380.594 cv
444.104 368.78 452.678 355.459 461.358 344.327 cv
465.313 346.599 464.457 354.095 469.991 354.916 cv
466.315 340.877 468.806 320.145 468.209 303.309 cv
475.505 298.821 487.539 296.643 496.105 294.396 cv
511.434 287.802 500.8 312.934 504.624 322.226 cv
516.453 346.93 485.401 340.66 473.142 356.614 cv
532.841 336.248 506.843 322.679 519.754 365.922 cv
519.669 369.903 527.55 372.322 523.846 375.674 cv
503.299 389.973 483.105 406.165 464.218 421.5 cv
490.057 417.421 511.227 437.047 509.509 464.349 cv
511.873 519.527 455.395 553.244 441.762 604.938 cv
cp
540.972 308.264 mo
542.656 311.611 553.553 326.582 549.016 328.441 cv
541.965 326.56 538.252 313.757 540.972 308.264 cv
cp
539.829 335.825 mo
539.122 334.249 536.418 331.054 539.401 330.443 cv
546.078 329.768 546.079 343.157 552.182 346.179 cv
555.364 350.207 581.152 374.144 565.377 371.094 cv
559.752 365.88 554.824 354.322 548.193 352.473 cv
546.388 355.293 543.112 359.477 540.345 354.833 cv
537.9 350.256 548.802 349.827 546.777 345.669 cv
541.781 339.395 537.059 353.821 533.227 348.781 cv
527.264 342.723 542.591 341.144 539.829 335.825 cv
cp
543.039 279.352 mo
538.755 279.343 534.403 285.285 530.784 282.211 cv
527.048 278.812 518.548 280.411 518.426 273.732 cv
521.457 267.547 516.067 256.675 520.657 252.791 cv
531.507 255.339 537.961 244.166 538.828 256.867 cv
537.759 264.537 547.863 273.21 543.039 279.352 cv
cp
542.974 223.067 mo
542.975 225.452 540.247 230.533 538.04 226.818 cv
534.529 223.058 541.051 217.102 542.974 223.067 cv
cp
540.353 216.252 mo
533.118 219.725 516.358 207.457 527.965 206.946 cv
532.747 211.061 539.053 209.247 544.449 208.096 cv
555.894 208.524 550.27 219.354 540.353 216.252 cv
cp
492.88 208.877 mo
502.035 205.418 506.225 216.361 514.356 203.504 cv
517.706 204.148 515.605 209.154 519.864 208.379 cv
521.394 208.348 522.192 210.333 521.631 211.678 cv
517.185 218.463 492.016 220.318 492.88 208.877 cv
cp
531.068 220.162 mo
522.918 229.76 532.52 236.176 532.972 245.683 cv
515.812 248.067 513.792 252.855 513.041 233.489 cv
511.642 220.793 493.763 228.597 491.783 221.249 cv
504.047 223.687 518.939 218.258 531.068 220.162 cv
cp
510.133 269.025 mo
510.182 267.427 512.821 267.275 512.991 268.912 cv
512.938 270.239 509.761 271.052 510.133 269.025 cv
cp
467.14 291.636 mo
482.588 288.06 499.827 278.29 514.876 276.318 cv
529.525 287.334 483.821 290.73 477.474 295.934 cv
473.316 295.849 469.324 299.189 465.69 299.893 cv
459.588 293.768 445.54 292.802 444.56 283.078 cv
444.742 270.098 460.48 294.897 467.14 291.636 cv
cp
451.403 268.256 mo
453.53 258.533 462.439 269.576 468.563 270.156 cv
479.092 275.137 507.55 255.906 504.619 274.058 cv
496.045 281.091 480.826 281.713 470.105 286.977 cv
462.226 288.812 457.711 279.121 450.207 278.237 cv
445.48 276.417 451.763 271.5 451.403 268.256 cv
cp
340.961 375.522 mo
339.708 374.025 340.599 372.454 342.549 372.974 cv
358.326 377.87 373.903 372.903 389.188 369.122 cv
378.603 386.498 420.73 354.672 426.725 351.228 cv
424.795 367.11 407.802 382.324 392.314 377.955 cv
391.984 375.637 389.366 375.215 390.327 377.954 cv
386.005 383.99 372.481 384.295 365.813 384.248 cv
357.551 391.568 344.964 388.613 335.546 394.393 cv
327.339 395.284 338.952 385.734 339.952 382.584 cv
348.625 376.961 363.125 384.446 371.947 377.331 cv
362.439 374.059 349.828 377.71 340.961 375.522 cv
cp
325.132 409.659 mo
326.206 426.097 325.916 446.972 324.504 463.366 cv
309.538 447.782 319.039 428.873 323.295 409.795 cv
310.149 415.136 316.28 446.079 308.577 448.608 cv
306.842 426.832 312.849 408.695 326.833 391.856 cv
336.106 386.828 319.746 404.856 325.132 409.659 cv
cp
363.459 734.411 mo
350.686 738.302 370.112 714.252 371.4 708.379 cv
382.561 695.896 366.208 729.58 363.459 734.411 cv
cp
389.59 740.615 mo
392.725 734.346 397.915 736.288 399.374 742.527 cv
406.022 754.122 385.482 758.321 380.716 750.36 cv
378.984 746.142 386.893 746.996 389.135 744.906 cv
391.563 744.105 389.454 741.747 389.59 740.615 cv
cp
651.231 392.945 mo
673.853 391.624 654.822 494.562 657.352 516.123 cv
657.13 635.223 610.542 749.725 491.366 792.814 cv
375.712 742.25 330.22 644.595 330.267 524.316 cv
335.719 499.106 315.174 391.542 343.511 396.396 cv
368.479 390.659 393.465 383.549 418.533 378.746 cv
423.588 378.821 433.242 376.951 431.886 385.009 cv
434.662 393.842 444.091 400.957 447.78 409.979 cv
460.729 423.284 426.096 403.569 398.396 446.031 cv
384.103 458.024 379.842 477.759 385.902 493.319 cv
391.386 496.911 393.363 490.295 395.635 487.407 cv
399.221 485.793 402.342 490.874 403.998 485.815 cv
407.199 481.545 411.26 487.362 408.287 490.352 cv
401.334 490.821 395.609 495.674 389.737 501.012 cv
385.751 516.615 368.658 516.166 368.595 528.803 cv
370.555 534.659 373.977 528.47 373.491 525.403 cv
377.045 522.125 381.923 518.935 385.833 516.686 cv
379.962 534.336 395.582 537.757 388.444 525.346 cv
397.476 465.673 398.838 541.599 452.785 483.274 cv
489.385 450.074 459.698 512.641 447.79 525.869 cv
426.33 556.772 398.093 586.877 390.345 624.282 cv
357.065 788.48 592.824 800.441 613.91 648.093 cv
615.596 626.138 617.501 601.21 602.384 583.498 cv
601.403 572.195 601.905 558.071 596.106 546.507 cv
587.317 522.015 557.74 510.384 555.044 482.884 cv
551.732 469.51 569.613 461.753 568.501 449.681 cv
548.871 436.15 527.008 470.008 531.203 488.98 cv
533.725 514.011 548.765 536.209 559.444 559.206 cv
427.357 540.488 428.959 693.178 535.763 662.148 cv
544.654 661.181 553.127 651.89 560.42 650.384 cv
554.147 671.977 535.217 692.899 512.811 697.869 cv
447.518 709.159 422.637 631.152 458.691 585.515 cv
604.123 420.709 437.817 433.673 514.402 402.995 cv
556.5 381.816 606.93 376.114 651.231 392.945 cv
cp
650.287 385.22 mo
678.117 384.18 689.017 440.789 665.812 453.308 cv
659.745 435.136 677.147 400.948 657.961 391.364 cv
654.018 391.207 641.816 382.954 650.287 385.22 cv
cp
677.984 447.197 mo
683.231 441.696 682.277 420.861 686.688 438.089 cv
691.402 452.255 686.033 455.163 677.984 447.197 cv
cp
664.665 480.897 mo
666.811 481.208 666.691 484.86 664.495 485.73 cv
664.017 484.329 663.232 481.488 664.665 480.897 cv
cp
668.191 485.196 mo
681.375 482.597 664.707 496.147 664.181 501.807 cv
659.575 503.887 665.62 488.147 668.191 485.196 cv
cp
629.685 713.853 mo
630.823 717.702 640.904 727.629 631.355 726.484 cv
626.284 720.85 623.396 704.336 617.722 703.014 cv
611.543 716.027 601.381 733.888 619.379 712.957 cv
630.693 727.436 628.781 728.923 613.792 736.6 cv
585.132 769.111 564.577 742.52 601.544 723.747 cv
605.412 726.921 612.814 733.048 608.03 724.593 cv
596.999 718.103 616.001 704.822 617.319 696.006 cv
629.624 674.282 643.44 650.913 647.228 626.737 cv
651.617 612.602 652.337 597.836 655.848 583.506 cv
664.971 601.323 651.429 615.475 649.36 633.359 cv
650.303 662.118 609.091 687.662 629.685 713.853 cv
cp
683.742 554.556 mo
664.388 570.896 682.104 633.516 664.139 592.283 cv
655.421 578.556 670.226 557.129 683.742 554.556 cv
cp
682.42 536.682 mo
713.388 545.946 663.403 543.797 656.028 579.35 cv
658.702 560.227 660.933 539.015 661.924 519.674 cv
666.344 527.078 673.692 533.294 682.42 536.682 cv
cp
678.271 527.726 mo
682.228 501.558 685.392 517.67 691.301 530.647 cv
702.85 540.446 710.39 528.531 706.628 548.923 cv
704.729 552.126 699.262 547.336 695.79 549.222 cv
692.764 548.154 687.481 557.041 687.225 552.416 cv
706.752 540.655 685.433 535.516 678.271 527.726 cv
cp
688.657 479.817 mo
682.558 484.551 674.063 477.791 679.118 471.899 cv
683.581 471.967 684.382 478.283 688.657 479.817 cv
cp
720.285 449.231 mo
728.314 448.146 726.528 462.296 728.303 467.552 cv
725.717 479.851 707.995 452.452 720.285 449.231 cv
cp
704.938 462.54 mo
706.979 444.605 709.346 445.057 712.804 462.367 cv
723.058 474.129 722.648 488.376 714.895 501.733 cv
714.411 490.719 704.709 491.542 699.258 485.908 cv
690.451 480.833 707.378 470.988 704.938 462.54 cv
cp
673.332 379.159 mo
678.992 398.688 690.622 418.849 707.727 431.746 cv
719.591 438.849 735.615 432.246 745.499 443.738 cv
748.478 451.473 739.218 442.089 737.302 445.928 cv
734.905 450.455 731.258 442.744 727.655 446.581 cv
723.639 448.719 717.614 440.273 715.386 448.778 cv
710.735 450.05 709.336 436.726 703.496 434.387 cv
697.231 433.626 707.27 467.936 693.444 476.023 cv
687.231 478.055 686.98 466.384 680.432 465.67 cv
671.949 463.788 669.728 478.075 676.26 482.044 cv
678.586 488.924 666.397 480.418 666.925 476.714 cv
661.846 460.6 678.925 444.916 690.295 461.394 cv
701.426 436.205 674.541 393.314 662.118 380.97 cv
664.98 380.741 672.735 375.304 673.332 379.159 cv
cp
702.289 407.322 mo
699.371 401.86 705.89 396.148 710.027 401.55 cv
710.681 405.118 706.075 411.967 702.289 407.322 cv
cp
714.268 411.143 mo
711.971 411.695 709.934 407.275 712.484 406.71 cv
713.5 407.245 716.358 410.484 714.268 411.143 cv
cp
734.614 398.232 mo
733.908 400.483 727.671 399.358 728.514 396.762 cv
729.254 395.114 734.536 396.589 734.614 398.232 cv
cp
771.56 412.613 mo
773.577 412.475 775.714 412.062 778.136 412.213 cv
785.995 416.379 762.966 418.71 771.56 412.613 cv
cp
766.589 408.363 mo
754.489 402.619 773.262 401.463 777.548 397.921 cv
784.811 403.268 775.161 411.358 766.589 408.363 cv
cp
708.684 377.125 mo
732.98 406.958 788.733 374.347 754.116 345.532 cv
746.968 341.165 740.286 341.411 737.158 349.895 cv
739.062 354.318 747.041 345.453 746.803 359.487 cv
735.436 381.977 712.154 363.187 725.533 343.438 cv
737.113 325.144 764.513 325.188 780.516 337.256 cv
811.286 369.538 769.444 421.652 733.033 393.541 cv
724.647 389.014 715.472 399.818 726.626 403.54 cv
741.284 404.431 758.708 400.734 766.335 417.783 cv
774.774 427.954 761.265 422.969 755.903 424.766 cv
735.634 423.942 722.747 399.951 703.779 395.588 cv
692.688 394.65 701.005 409.084 706.21 411.728 cv
710.829 413.832 716.948 413.153 718.751 419.184 cv
723.025 423.234 735.267 432.787 721.629 429.938 cv
698.452 425.965 688.763 396.138 676.634 380.446 cv
697.67 370.109 690.572 354.886 708.684 377.125 cv
cp
751.172 349.48 mo
769.183 358.125 757.013 386.925 738.3 384.507 cv
725.384 384.92 701.056 370.509 701.798 357.645 cv
717.213 379.817 754.696 379.71 751.172 349.48 cv
cp
743.311 756.613 mo
744.922 751.503 751.504 753.263 747.716 757.228 cv
746.577 757.765 741.933 759.123 743.311 756.613 cv
cp
716.224 722.463 mo
713.252 723.052 713.29 719.203 715.865 718.532 cv
726.186 717.445 726.791 722.317 716.224 722.463 cv
cp
269.638 738.945 mo
271.05 738.241 272.196 737.267 273.676 736.84 cv
273.707 739.146 272.394 739.844 269.638 738.945 cv
cp
259.08 739.245 mo
256.689 742.029 239.013 739.879 245.484 733.985 cv
250.557 731.602 255.009 737.597 259.08 739.245 cv
cp
269.828 746.08 mo
243.818 775.967 202.844 716.254 246.991 720.564 cv
255.737 722.383 262.446 727.622 269.61 719.658 cv
275.579 724.481 271.696 734.043 264.067 734.278 cv
256.094 732.194 246.362 721.215 238.394 731.343 cv
229.239 755.073 271.385 740.539 269.828 746.08 cv
cp
236.699 756.946 mo
228.757 756.798 220.697 751.729 214.032 747.761 cv
217.597 743.834 222.934 743.186 222.168 736.75 cv
226.867 740.952 227.814 748.562 232.484 753.34 cv
234.463 753.587 240.831 753.831 236.699 756.946 cv
cp
255.975 713.746 mo
260.566 713.932 259.148 717.867 255.765 719.31 cv
252.268 721.076 252.241 712.82 255.975 713.746 cv
cp
261.692 716.04 mo
264.437 716.298 260.755 719.603 260.311 717.332 cv
260.284 716.428 261.121 716.241 261.692 716.04 cv
cp
188.513 390.171 mo
184.025 386.287 194.319 375.18 195.848 381.594 cv
192.974 383.664 191.243 389.87 188.513 390.171 cv
cp
694.231 284.198 mo
695.424 272.232 705.801 258.484 719.908 260.527 cv
737.116 263.936 736.541 301.458 715.491 292.615 cv
707.743 288.359 716.088 280.447 714.778 275.324 cv
711.562 268.035 704.265 277.546 702.761 281.697 cv
704.093 298.918 704.834 295.88 694.231 284.198 cv
cp
791.943 370.068 mo
794.842 358.908 791.682 343.308 782.4 336.023 cv
768.325 306.517 703.593 331.716 720.979 366.108 cv
724.463 374.327 699.195 357.063 709.107 352.078 cv
713.661 346.708 698.942 342.663 706.467 341.986 cv
722.53 337.976 698.2 289.786 712.452 297.356 cv
716.45 299.432 711.839 300.53 711.491 303.204 cv
709.066 307.418 720.705 337.651 719.44 324.688 cv
719.56 319.981 721.025 315.707 719.163 311.117 cv
718.672 308.618 713.053 306.073 716.796 304.083 cv
727.976 298.273 723.848 321.589 727.643 303.265 cv
725.302 292.989 739.172 296.972 737.895 278.788 cv
739.558 270.201 725.987 259.416 734.764 258.336 cv
726.915 249.526 708.941 253.871 700.49 261.219 cv
689.969 268.911 696.832 277.974 686.807 277.181 cv
693.787 293.2 708.998 307.51 706.226 328.318 cv
707.717 336.862 686.457 379.477 680.788 371.649 cv
698.082 351.838 663.214 378.276 654.682 377.354 cv
642.085 379.299 617.939 381.861 611.403 369.905 cv
664.413 388.047 729.217 310.713 662.377 283.194 cv
656.959 279.611 610.626 283.749 633.732 276.387 cv
642.675 274.467 649.497 263.109 658.985 266.686 cv
718.02 285.122 635.94 243.767 623.55 279.231 cv
622.612 284.096 614.98 277.6 611.082 279.246 cv
606.576 279.294 606.576 279.258 605.537 274.57 cv
611.884 274.922 619.037 274.765 622.486 268.382 cv
624.998 264.062 630.99 268.253 633.214 263.05 cv
630.729 261.833 629.1 264.065 626.678 263.542 cv
622.028 261.95 619.813 250.501 618.204 263.818 cv
615.876 274.837 593.053 266.568 603.463 258.685 cv
599.462 244.769 588.602 266.824 601.977 281.728 cv
588.873 286.302 596.452 308.06 584.323 286.063 cv
583.677 282.418 574.943 272.103 582.555 273.904 cv
584.926 277.314 596.016 290.934 592.942 279.531 cv
589.867 275.6 586.891 270.921 587.333 265.696 cv
584.83 234.12 627.372 256.459 608.939 242.925 cv
603.33 241.475 597.317 242.16 591.762 244.754 cv
601.604 237.117 593.282 210.304 581.443 224.663 cv
597.054 221.226 592.257 245.534 579.255 244.819 cv
571.75 246.415 566.741 242.304 566.621 234.691 cv
562.126 230.738 560.458 228.106 567.562 225.667 cv
576.699 224.178 566.509 241.711 578.515 240.778 cv
590.147 237.392 572.795 229.73 580.241 225.465 cv
578.372 219.742 572.38 226.412 570.725 220.186 cv
572.917 209.73 564.328 199.199 557.838 191.751 cv
551.543 179.854 528.389 190.435 527.459 183.683 cv
532.771 173.916 518.433 173.265 518.625 166.475 cv
522.277 162.925 538.591 154.573 539.719 162.829 cv
533.044 173.58 559.948 178.037 543.769 168.942 cv
538.358 166.399 544.205 162.153 547.09 161.296 cv
543.7 156.879 545.824 158.321 549.895 156.43 cv
542.311 151.782 547.66 144.181 553.388 139.501 cv
522.37 150.874 549.94 152.06 540.862 156.969 cv
536.439 154.664 525.58 152.657 524.286 159.129 cv
519.584 167.967 515.937 157.022 523.575 153.234 cv
531.481 145.538 541.999 137.699 534.657 126.815 cv
524.559 150.446 529.804 134.811 520.886 123.709 cv
515.894 118.184 502.523 117.61 499.876 124.587 cv
500.272 130.408 500.329 136.564 492.447 135.617 cv
489.35 138.005 485.99 131.102 484.91 134.379 cv
485.094 136.055 482.907 137.62 484.959 138.941 cv
487.173 138.9 491.738 135.713 491.86 140.536 cv
497.603 144.118 507.615 131.219 500.922 125.679 cv
501.028 118.787 514.163 120.739 514.657 125.954 cv
522.556 132.072 520.956 132.518 519.684 141.4 cv
533.121 135.166 517.462 153.008 512.394 155.013 cv
501.816 161.376 522.328 170.953 509.793 170.996 cv
507.446 170.925 504.026 172.338 504.661 175.142 cv
507.114 178.899 513.542 176.197 516.994 175.847 cv
523.594 174.913 526.346 184.479 518.418 182.381 cv
505.52 178.146 510.669 189.286 503.671 192.618 cv
474.903 184.356 488.051 199.256 466.732 193.63 cv
457.798 195.121 457.679 195.191 456.088 188.605 cv
452.446 189.754 454.42 194.129 451.547 195.85 cv
449.889 197.021 450.02 199.428 452.176 198.225 cv
459.987 198.35 478.708 194.773 479.911 205.92 cv
478.159 206.841 468.4 205.235 472.022 209.785 cv
475.539 214.904 480.709 213.848 485.22 210.906 cv
499.746 212.789 477.946 222.649 471.855 217.533 cv
467.568 212.673 467.879 202.699 460.581 201.535 cv
450.645 199.135 431.667 205.008 435.467 217.711 cv
438.272 220.378 438.434 207.593 446.12 207.553 cv
454.783 203.047 468.206 204.913 465.471 217.428 cv
458.836 224.089 446.614 228.642 438.01 224.191 cv
436.369 238.873 423.724 227.816 415.765 230.438 cv
406.255 233.417 410.241 240.835 406.481 247.101 cv
401.167 251.975 407.601 257.067 410.25 260.919 cv
398.498 270.97 412.004 294.212 388.196 289.175 cv
377.551 291.273 372.038 300.028 366.108 286.555 cv
383.203 289.281 405.081 285.395 402.347 263.146 cv
406.269 257.28 394.173 252.491 388.46 249.98 cv
383.796 252.445 383.255 253.022 380.551 247.791 cv
377.053 249.656 376.006 265.725 370.467 255.509 cv
375.945 251.859 380.691 233.977 371.957 248.201 cv
369.062 260.25 363.624 252.176 368.35 259.928 cv
351.379 257.091 331.071 254.776 315.552 264.005 cv
306.388 269.629 315.179 256.693 314.492 254.296 cv
311.767 254.714 311.876 260.976 308.546 255.933 cv
298.407 244.684 271.984 252.557 276.005 267.538 cv
276.042 269.581 273.167 268.51 273.011 267.064 cv
270.37 265.217 274.067 270.657 274.563 271.271 cv
276.761 274.19 275.396 278.076 276.718 281.086 cv
276.319 291.143 278.88 286.803 283.857 282.256 cv
291.446 282.461 299.806 266.572 289.935 277.444 cv
275.991 283.48 276.1 262.228 285.759 257.434 cv
298.719 249.363 311.105 264.644 306.426 277.101 cv
299.324 289.565 307.235 251.398 287.12 262.666 cv
279.058 278.389 296.158 263.264 298.417 271.749 cv
266.21 310.195 304.353 351.512 284.01 336.062 cv
276.271 326.9 273.832 315.785 273.415 304.453 cv
265.874 306.745 272.351 317.388 266.985 318.434 cv
245.234 316.928 216.845 314.66 206.857 339.582 cv
200.949 352.473 223.179 342.187 221.978 350.675 cv
219.385 358.365 226.23 370.835 223.145 375.745 cv
211.793 376.23 213.912 361.971 207.414 357.735 cv
211.241 380.891 185.341 342.817 174.112 378.015 cv
172.634 381.233 174.454 393.246 177.256 392.775 cv
172.028 377.479 188.405 360.1 203.841 367.309 cv
225.213 380.819 195.821 397.501 231.458 401.012 cv
228.404 403.082 224.152 408.393 221.948 409.074 cv
216.527 405.07 205.371 407.391 204.595 399.4 cv
211.094 391.98 203.132 395.253 198.56 397.18 cv
196.771 404.941 210.064 405.791 214.309 410.437 cv
222.765 420.232 232.383 422.979 245.288 423.099 cv
252.604 423.204 260.365 422.084 266.585 418.309 cv
277.035 422.034 275.172 424.291 290.349 419.45 cv
298.73 426.739 272.578 428.107 266.885 428.199 cv
241.498 438.615 205.085 427.259 192.993 401.624 cv
187.081 391.05 207.847 384.966 200.434 375.646 cv
161.563 370.005 196.788 429.674 220.338 429.014 cv
230.143 434.241 213.834 433.783 213.907 436.735 cv
202.229 452.162 180.059 463.206 178.406 486.074 cv
172.179 506.255 186.575 471.008 191.495 464.275 cv
209.195 442.213 229.416 440.002 201.505 467.294 cv
172.076 495.935 199.559 529.138 210.264 558.111 cv
208.146 561.586 193.42 561.757 192.306 557.819 cv
192.746 552.889 190.197 548.722 189.362 544.105 cv
186.489 535.675 184.602 520.857 180.492 515.429 cv
174.888 528.905 199.806 560.345 185.051 565.054 cv
180.523 571.686 210.336 556.265 212.026 566.059 cv
214.346 574.967 201.869 578.168 197.395 571.587 cv
179.757 588.083 225.358 590.244 218.779 560.313 cv
224.607 552.671 235.249 588.902 205.47 589.6 cv
197.526 590.321 189.472 589.379 182.64 585.964 cv
185.748 595.979 206.772 596.273 215.485 591.643 cv
224.139 588.841 230.866 582.6 231.386 573.779 cv
233.029 578.063 258.048 595.625 250.352 597.005 cv
232.933 576.763 205.256 600.999 200.224 618.38 cv
196.583 627.544 204.796 629.365 202.754 633.332 cv
198.168 637.137 210.319 643.649 213.761 643.837 cv
216.298 642.336 227.084 653.776 222.151 653.362 cv
210.901 648.876 200.208 644.286 191.015 635.748 cv
170.617 638.924 227.798 655.291 229.442 664.767 cv
231.809 670.126 220.985 669.757 221.445 664.715 cv
220.13 666.156 222.033 669.071 218.762 669.696 cv
233.094 670.155 239.729 683.013 248.318 695.3 cv
270.528 709.843 226.436 699.413 220.907 692.084 cv
208.132 683.897 196.08 671.884 191.41 657.083 cv
161.768 599.783 209.699 745.314 270.223 698.551 cv
273.943 695.231 269.306 688.366 273.056 686.463 cv
304.859 675.454 287.191 717.897 277.077 733.157 cv
283.138 715.603 263.107 711.001 250.44 711.936 cv
244.784 715.248 231.507 712.373 223.433 718.813 cv
225.82 720.31 226.488 722.699 223.999 724.596 cv
218.813 713.881 205.355 702.645 191.163 708.636 cv
174.271 709.378 169.366 756.422 181.563 747.619 cv
178.971 739.226 178.522 729.706 184.669 722.619 cv
200.454 690.808 241.343 743.689 204.788 744.219 cv
196.674 743.566 197.678 734.123 194.918 730.385 cv
190.729 731.809 191.498 737.602 192.503 740.903 cv
203.503 769.719 209.58 745.698 220.823 757.549 cv
266.382 779.974 307.711 716.905 293.678 676.248 cv
294.959 650.751 273.351 651.89 295.785 642.839 cv
320.134 684.228 314.294 736.544 276.776 767.528 cv
272.292 772.73 253.649 773.32 262.009 778.021 cv
264.653 780.341 268.222 775.628 271.006 777.094 cv
274.66 806.717 310.243 828.997 333.032 847.004 cv
351.336 860.491 370.73 870.44 392.822 876.939 cv
404.161 877.731 393.032 883.859 396.683 887.858 cv
401.974 874.086 416.797 885.071 428.546 885.865 cv
441.6 889.936 453.113 887.245 465.651 887.614 cv
437.924 883.982 406.072 873.821 378.014 864.599 cv
358.091 862.797 255.956 790.264 281.143 776.92 cv
317.271 766.717 333.959 724.586 337.266 745.666 cv
359.631 785.475 410.789 797.077 451.813 807.275 cv
521.064 816.577 607.543 794.759 648.426 734.549 cv
655.097 729.814 661.314 751.285 668.127 755.39 cv
675.329 766.476 695.559 774.789 693.619 788.266 cv
667.511 830.385 618.527 861.342 571.252 873.41 cv
552.078 880.412 531.787 882.705 512.268 887.113 cv
538.849 895.698 569.613 873.755 594.315 875.12 cv
612.552 866.933 680.382 825.353 699.632 786.224 cv
698.472 765.333 665.527 756.479 658.854 734.829 cv
656.16 732.672 662.752 722.635 663.169 728.453 cv
664.478 741.347 675.157 758.92 686.575 762.351 cv
661.01 735.975 660.165 698.674 670.293 665.604 cv
674.811 654.933 684.198 638.627 688.454 658.457 cv
683.549 668.12 681.599 678.737 679.92 689.262 cv
676.495 706.199 680.671 724.247 689.668 739.026 cv
700.711 760.76 724.057 770.902 746.755 763.966 cv
755.755 760.116 771.29 761.286 775.548 751.53 cv
721.007 770.2 773.83 693.151 791.248 748.91 cv
790.891 766.827 781.195 725.874 767.135 736.449 cv
760.927 738.924 757.353 752.856 767.437 747.855 cv
768.58 741.252 775.603 740.8 777.84 747.079 cv
785.184 771.668 749.71 781.63 731.681 778.73 cv
717.804 774.289 702.027 769.348 692.941 756.984 cv
691.278 755.353 686.446 744.482 683.908 748.393 cv
688.582 768.026 705.514 779.223 723.184 787.707 cv
725.355 790.333 728.176 799.52 730.235 794.684 cv
720.751 780.984 743.017 791.61 749.812 789.285 cv
745.921 785.781 739.766 788.591 735.141 786.651 cv
732.968 786.588 730.862 786.259 728.373 785.015 cv
751.59 786.926 777.391 779.111 786.121 756.717 cv
797.271 765.482 797.298 743.923 795.261 736.344 cv
791.189 730.361 785.403 726.7 780.802 721.322 cv
774.835 727.025 759.43 719.515 752.721 730.126 cv
748.942 738.669 744.274 723.054 738.337 721.509 cv
756.301 720.253 790.171 676.825 783.53 664.876 cv
773.335 677.893 769.508 700.893 750.875 704.888 cv
747.469 706.705 743.388 705.473 739.601 705.914 cv
733.396 712.828 757.016 704.351 752.252 711.953 cv
747.682 718.146 711.665 716.824 720.041 709.363 cv
720.374 704.177 712.502 712.092 710.583 713.185 cv
691.179 747.747 759.266 704.734 740.609 750.127 cv
734.873 761.025 707.722 764.557 705.034 751.318 cv
712.064 751.181 720.481 756.506 726.676 750.238 cv
733.686 733.862 717.621 747.431 710.894 744.243 cv
694.068 738.818 679.914 708.488 705.791 706.771 cv
712.706 706.903 714.573 700.048 721.222 705.471 cv
735.514 701.905 742.261 691.486 748.063 678.539 cv
755.974 670.037 780.151 669.928 781.18 661.024 cv
773.242 660.162 766.102 666.677 758.07 665.715 cv
762.853 662.107 767.641 658.846 772.841 655.957 cv
773.107 649.662 778.03 643.23 778.516 636.14 cv
780.464 630.394 774.9 617.212 774.495 626.651 cv
778.293 640.486 768.583 653.871 756.409 660.232 cv
742.696 662.249 769.739 646.853 767.535 638.112 cv
770.688 626.833 755.892 609.744 744.967 615.931 cv
746.202 622.801 759.502 619.483 759.548 628.521 cv
767.426 642.503 728.168 670.803 736.214 652.55 cv
744.025 649.779 757.227 635.123 750.882 628.998 cv
748.1 629.911 743.799 628.942 742.894 625.53 cv
741.282 623.183 738.099 616.231 736.057 622.651 cv
736.376 624.42 736.823 629.703 733.986 627.335 cv
722.862 609.678 744.735 597.822 759.256 607.334 cv
764.558 608.182 776.011 627.231 776.312 618.766 cv
760.66 585.209 718.17 610.787 759.935 562.197 cv
763.203 559.715 763.421 553.377 768.397 554.047 cv
762.453 550.514 756.026 562.755 756.711 549.16 cv
819.313 540.039 790 479.311 760.636 451.601 cv
719.764 431.447 797.356 461.571 815.12 419.57 cv
816.902 415.152 818.141 411.95 819.61 418.836 cv
823.952 413.743 825.935 402.78 826.415 395.8 cv
820.62 358.363 787.337 397.911 791.943 370.068 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
768.471 554.114 mo
768.471 554.114 li
768.561 554.155 768.574 554.14 768.544 554.054 cv
768.543 554.054 768.501 554.089 768.484 554.104 cv
768.501 554.089 768.543 554.054 768.543 554.054 cv
768.445 554.053 768.348 554.021 768.471 554.114 cv
cp
f
795.91 593.231 mo
795.531 596.153 789.234 600.215 790.455 595.013 cv
792.911 591.941 792.513 587.906 789.397 585.257 cv
774.558 615.013 751.331 584.098 771.227 562.849 cv
776.565 556.211 766.703 590.339 779.382 580.289 cv
788.867 568.454 803.418 580.94 795.91 593.231 cv
cp
776.283 564.564 mo
778.626 548.21 784.897 568.165 782.365 574.984 cv
774.642 584.038 774.337 570.511 776.283 564.564 cv
cp
796.525 567.222 mo
778.212 578.665 795.533 547.089 771.653 556.977 cv
768.245 553.528 769.442 554.15 768.129 558.368 cv
731.475 591.007 788.649 629.498 802.169 586.358 cv
805.317 577.22 791.313 575.563 796.525 567.222 cv
cp
f
597.297 803.14 mo
608.644 803.672 609.317 809.807 615.777 818.501 cv
632.773 835.676 610.32 848.672 630.269 836.484 cv
643.494 831.513 635.737 831.75 628.154 829.844 cv
623.749 823.262 620.219 816.672 614.89 810.709 cv
608.23 797.048 668.913 841.95 647.59 816.496 cv
641.811 805.05 630.045 794.197 631.146 781.61 cv
627.155 782.658 621.488 785.982 617.876 788.397 cv
618.883 793.104 625.009 786.516 626.892 791.968 cv
628.846 798.427 638.783 805.253 637.895 811.208 cv
625.618 808.615 606.209 787.856 597.297 803.14 cv
cp
f
496.428 825.023 mo
493.596 824.414 494.501 828.675 496.725 828.976 cv
500.051 831.45 499.779 844.195 497.192 846.723 cv
485.597 847.939 481.02 846.585 482.92 834.055 cv
482.356 829.09 490.466 829.919 489.689 825.697 cv
475.988 827.239 469.085 820.149 477.986 833.428 cv
476.011 845.808 482.841 863.669 473.264 871.3 cv
476.518 873.16 483.012 870.462 487.322 872.189 cv
491.651 868.827 481.966 870.253 482.981 866.84 cv
481.938 854.082 481.987 846.805 496.875 849.632 cv
500.207 851.487 499.83 865.183 496.657 868.044 cv
493.479 867.514 490.652 872.676 494.913 871.929 cv
497.876 869.399 512.594 874.506 509.495 868.972 cv
500.986 863.749 506.875 839.694 505.858 830.278 cv
518.831 822.309 501.382 826.923 496.428 825.023 cv
cp
f
570.521 833.365 mo
564.604 846.408 559.528 834.531 556.987 826.566 cv
556.339 815.854 573.256 825.053 570.521 833.365 cv
cp
573.529 820.463 mo
566.697 810.646 555.437 821.182 546.77 822.061 cv
543.548 825.709 551.81 824.295 552.821 826.738 cv
554.737 831.027 555.649 836.244 557.075 840.528 cv
558.827 846.672 563.891 855.292 562.716 860.98 cv
551.601 869.823 563.454 864.576 568.642 863.356 cv
584.59 859.417 564.076 864.016 564.163 843.675 cv
572.312 837.748 578.385 865.985 590.319 855.723 cv
597.816 853.82 592.686 849.698 587.852 852.446 cv
582.297 848.533 577.385 844.115 572.146 839.436 cv
578.669 834.716 579.564 825.689 573.529 820.463 cv
cp
f
526.678 828.927 mo
530.582 828.966 538.293 824.579 539.953 829.769 cv
545.328 841.321 545.12 831.037 542.061 825.109 cv
536.271 819.271 524.498 827.253 516.348 825.008 cv
509.856 828.711 522.238 827.878 520.372 832.549 cv
520.425 835.952 521.547 839.262 521.546 842.623 cv
521.8 850.632 527.414 862.31 523.178 868.472 cv
521.748 868.776 517.316 871.221 520.415 872.245 cv
530.125 868.781 551.012 875.002 548.27 861.919 cv
550.297 851.26 544.459 858.586 543.708 864.064 cv
539.92 864.914 535.309 866.088 531.173 866.347 cv
527.172 864.042 529.796 854.025 528.374 849.182 cv
531.261 848.69 535.424 846.382 538.135 847.253 cv
538.722 849.622 542.315 858.136 542.846 851.348 cv
541.116 848.294 540.76 830.419 538.079 841.435 cv
536.499 844.291 530.31 844.919 527.393 845.37 cv
526.698 841.505 522.503 830.552 526.678 828.927 cv
cp
f
331.119 825.645 mo
338.563 822.347 345.616 841.625 355.739 825.657 cv
366.889 816.121 342.741 799.583 356.846 792.029 cv
369.722 789.901 361.162 806.242 365.324 808.202 cv
366.617 805.651 376.362 795.071 372.605 794.988 cv
367.817 798.865 357.97 773.339 345.507 797.751 cv
342.324 807.09 358.223 818.248 350.262 825.909 cv
344.682 830.382 340.351 825.847 338.388 820.31 cv
337.155 817.753 345.766 809.639 340.202 810.639 cv
338.838 814.353 324.628 825.534 331.119 825.645 cv
cp
f
390.014 808.272 mo
392.67 809.461 396.884 806.216 392.62 805.34 cv
388.483 806.4 376.1 794.685 377.184 801.495 cv
384.278 804.031 365.89 841.445 359.979 836.121 cv
346.72 835.551 381.286 849.864 385.236 851.304 cv
387.953 847.534 394.111 843.461 394.135 839.041 cv
384.37 843.054 384.919 849.724 373.353 841.722 cv
373.322 833.777 382.464 813.404 390.014 808.272 cv
cp
f
468.571 825.077 mo
462.077 823.398 454.881 823.298 448.445 821.792 cv
441.417 817.473 440.621 824.84 437.491 829.855 cv
434.538 836.549 441.398 832.014 441.796 828.312 cv
442.426 824.379 452.532 825.163 450.131 829.692 cv
444.925 839.807 451.708 864.54 437.599 864.408 cv
435.208 864.681 435.107 868.201 437.7 867.395 cv
441.359 865.516 461.309 872.402 456.089 866.256 cv
445.88 861.689 456.279 846.988 455.337 838.659 cv
456.677 835.512 454.716 826.148 460.294 828.147 cv
464.613 828.79 466.775 830.249 466.177 835.046 cv
470.66 841.486 469.663 827.078 468.571 825.077 cv
cp
f
435.5 823.048 mo
436.797 823.413 437.04 820.734 436.397 820.418 cv
412.22 812.908 433.192 817.235 416.956 830.573 cv
411.719 840.634 411.428 821.623 410.532 818.149 cv
412.056 815.554 416.662 818.78 417.778 815.925 cv
413.06 812.722 405.277 811.574 399.649 808.451 cv
397.465 812.319 405.35 814.13 405.093 817.976 cv
405.7 824.762 407.325 831.295 409.126 837.512 cv
404.551 861.803 400.123 848.23 396.588 856.418 cv
426.876 863.821 407.55 863.139 410.462 849.652 cv
413.525 838.797 423.625 824.009 435.5 823.048 cv
cp
f
592.698 808.302 mo
603.661 799.001 573.558 811.322 577.467 813.975 cv
587.388 808.655 601.134 840.68 600.048 848.447 cv
595.377 854.205 601.227 852.733 604.739 849.724 cv
606.584 848.425 618.101 845.46 612.147 843.784 cv
605.441 847.056 586.875 812.217 592.698 808.302 cv
cp
f
302.231 718.566 mo
290.709 740.92 274.351 767.484 246.284 768.838 cv
232.193 772.003 217.345 764.441 204.285 763.679 cv
216.818 774.733 249.917 773.85 267.842 765.412 cv
283.167 754.687 299.584 737.081 302.231 718.566 cv
cp
f
355.822 776.826 mo
337.005 768.039 338.04 742.355 326.013 762.244 cv
319.015 777.542 283.006 777.947 293.115 798.69 cv
295.905 797.27 291.5 785.925 300.957 783.145 cv
315.101 779.093 324.859 764.245 335.069 758.882 cv
337.56 771.996 378.746 791.998 355.822 776.826 cv
cp
f
678.703 360.752 mo
700.196 353.635 703.932 319.034 695.792 301.146 cv
697.746 322.255 697.296 345.034 678.703 360.752 cv
cp
f
536.67 123.529 mo
538.245 109.322 491.771 106.058 496.744 119.07 cv
508.199 109.692 526.431 113.887 536.67 123.529 cv
cp
f
470.69 180.628 mo
478.145 176.899 486.359 178.857 494.082 175.781 cv
500.399 168.21 486.541 175.651 483.347 174.857 cv
479.048 174.992 482.99 167.026 477.682 170.033 cv
477.434 173.98 463.328 180.43 470.69 180.628 cv
cp
f
178.504 408.861 mo
180.261 416.107 206.485 430.771 198.614 423.332 cv
188.546 418.738 180.976 409.054 178.496 398.21 cv
172.824 395.839 175.587 406.198 178.504 408.861 cv
cp
f
659.014 759.779 mo
639.505 738.476 646.018 756.084 660.953 763.619 cv
686.084 783.976 674.28 767.905 659.014 759.779 cv
cp
f
220.178 776.802 mo
214.267 775.571 209.069 773.545 203.198 771.207 cv
203.203 781.939 234.002 781.459 220.178 776.802 cv
cp
f
744.19 699.132 mo
750.881 696.991 752.54 687.971 756.682 683.057 cv
758.72 680.171 768.364 677.455 766.635 674.72 cv
756.702 678.23 745.884 691.985 744.19 699.132 cv
cp
f
398.671 798.986 mo
392.938 794.369 379.189 790.342 370.691 785.92 cv
371.001 789.381 379.606 791.466 383.077 793.294 cv
388.065 796.436 392.038 801.71 398.671 798.986 cv
cp
f
505.654 161.675 mo
502.469 160.75 501.506 161.378 501.08 157.358 cv
496.442 162.564 489.088 161.471 484.731 166.623 cv
489.309 167.96 492.319 163.157 496.994 163.099 cv
499.26 164.994 509.14 166.707 505.654 161.675 cv
cp
f
239.247 691.953 mo
230.719 690.395 230.315 678.571 224.626 675.389 cv
225.354 678.453 226.903 682.208 228.094 685.464 cv
227.927 690.538 244.913 697.662 239.247 691.953 cv
cp
f
184.953 666.13 mo
184.637 679.213 187.042 692.774 194.808 703.574 cv
191.661 691.549 185.829 679.019 184.953 666.13 cv
cp
f
369.442 854.093 mo
365.324 853.153 345.747 836.24 347.077 842.74 cv
353.389 846.474 364.561 855.536 369.442 854.093 cv
cp
f
639.726 786.681 mo
634.103 783.206 647.635 803.009 649.021 806.751 cv
648.891 799.508 645.151 791.42 639.726 786.681 cv
cp
f
492.301 185.461 mo
499.042 187.295 510.735 181.498 496.787 181.839 cv
492.256 179.756 483.857 186.206 492.301 185.461 cv
cp
f
624.849 769.866 mo
637.883 760.771 615.066 770.852 618.359 774.59 cv
620.233 775.246 625.353 781.206 625.654 776.826 cv
624.138 774.392 620.062 771.859 624.849 769.866 cv
cp
f
793.575 655.928 mo
788.044 664.672 793.173 676.44 792.556 686.33 cv
793.686 676.405 793.067 665.6 793.575 655.928 cv
cp
f
476.47 189.073 mo
479.643 187.337 482.856 187.426 485.031 184.021 cv
480.13 181.878 470.164 188.56 476.47 189.073 cv
cp
f
458.855 212.575 mo
456.571 209.959 451.828 218.14 448.787 219.671 cv
452.439 220.043 458.584 216.89 458.855 212.575 cv
cp
f
684.611 741.737 mo
682.764 739.233 681.88 734.314 679.303 733.146 cv
677.845 736.422 685.134 749.921 684.611 741.737 cv
cp
f
782.089 777.394 mo
787.281 773.758 789.781 769.903 788.809 767.255 cv
785.373 769.702 783.16 772.899 782.089 777.394 cv
cp
f
386.349 248.242 mo
389.001 250.041 387.136 241.204 385.454 240.939 cv
381.02 241.365 384.125 246.715 386.349 248.242 cv
cp
f
377.379 855.767 mo
373.295 857.594 381.35 860.245 383.228 860.838 cv
383.52 857.771 380.375 855.201 377.379 855.767 cv
cp
f
212.907 736.085 mo
216.232 728.875 208.168 742.243 202.528 734.677 cv
201.719 739.384 211.071 739.52 212.907 736.085 cv
cp
f
658.377 820.252 mo
660.582 819.082 656.089 814.746 654.397 814.144 cv
652.056 814.381 656.472 820.933 658.377 820.252 cv
cp
f
501.695 888.535 mo
495.557 888.534 489.418 888.534 483.28 888.534 cv
488.917 888.802 496.021 888.801 501.695 888.535 cv
cp
f
198.549 730.431 mo
201.013 730.885 200.094 727.994 198.59 727.53 cv
195.544 726.618 196.106 730.737 198.549 730.431 cv
cp
f
272.107 266.565 mo
272.104 266.59 272.103 266.614 272.1 266.638 cv
272.163 266.64 272.163 266.582 272.107 266.565 cv
cp
f
271.767 264.642 mo
270.918 263.498 270.158 262.297 269.746 260.696 cv
267.243 263.104 273.193 268.989 271.767 264.642 cv
cp
f
466.395 887.667 mo
470.925 888 475.48 887.47 480.003 888.025 cv
480.703 886.967 470.517 887.849 466.395 887.667 cv
cp
f
466.395 887.667 mo
466.144 887.649 465.893 887.638 465.642 887.614 cv
465.861 887.638 466.114 887.655 466.395 887.667 cv
cp
f
514.989 145.552 mo
511.034 147.277 509.88 148.323 509.794 150.441 cv
511.099 148.236 513.724 148.015 514.989 145.552 cv
cp
f
501.543 171.702 mo
504.235 168.847 493.456 169.645 499.781 171.736 cv
500.237 172.14 500.975 172.111 501.543 171.702 cv
cp
f
303.59 685.09 mo
302.606 681.237 300.659 687.229 302.321 688.78 cv
302.46 687.417 303.791 686.511 303.59 685.09 cv
cp
f
687.385 787.974 mo
687.856 786.913 687.897 785.843 687.234 784.299 cv
686.744 785.536 685.735 789.278 687.385 787.974 cv
cp
f
504.29 887.757 mo
506.209 888.202 508.189 887.604 510.153 887.806 cv
508.194 887.71 506.228 887.165 504.29 887.757 cv
cp
f
651.949 811.847 mo
652.48 810.468 651.558 810.155 650.677 809.465 cv
650.49 810.814 651.046 811.353 651.949 811.847 cv
cp
f
756.5 788.139 mo
757.495 788.337 758.437 788.201 759.322 787.736 cv
758.375 787.83 757.366 787.501 756.5 788.139 cv
cp
f
759.322 787.736 mo
759.409 787.728 759.498 787.721 759.584 787.704 cv
759.519 787.589 759.415 787.708 759.322 787.736 cv
cp
f
759.584 787.704 mo
759.65 787.595 759.636 787.594 759.524 787.641 cv
759.523 787.641 759.584 787.704 759.584 787.704 cv
cp
f
759.637 787.602 mo
760.289 787.375 761.06 787.48 761.67 786.926 cv
760.698 786.521 760.052 786.767 759.637 787.602 cv
cp
f
779.417 715.911 mo
779.254 716.677 780.406 716.801 780.408 716.026 cv
780.612 715.097 779.379 714.954 779.417 715.911 cv
cp
f
776.954 781.118 mo
777.198 781.331 777.345 781.341 777.51 781.04 cv
777.263 780.805 777.12 780.811 776.954 781.118 cv
cp
f
434.836 399.254 mo
436.045 398.985 434.028 398.14 434.276 399.047 cv
434.348 399.181 434.639 399.243 434.836 399.254 cv
cp
f
412.988 621.431 mo
405.996 643.373 407.117 700.956 440.118 688.242 cv
392.6 679.74 416.291 610.765 436.375 584.018 cv
458.211 548.569 511.574 503.091 500.388 465.585 cv
494.88 525.768 432.503 563.907 412.988 621.431 cv
cp
f
462.211 388.836 mo
460.302 432.904 465.144 408.716 468.462 386.724 cv
472.193 386.942 475.608 382.486 478.846 385.951 cv
482.918 389.142 487.474 379.32 482.535 377.91 cv
477.037 375.969 472.814 381.817 468.37 382.6 cv
465.81 379.746 477.104 361.977 466.119 367.132 cv
462.312 375.746 466.996 392.141 455.732 377.909 cv
450.187 375.335 444.606 384.352 452.731 384.762 cv
455.791 385.809 462.792 384.233 462.211 388.836 cv
cp
f
533.173 717.793 mo
526.994 715.421 535.886 710.721 538.16 708.889 cv
557.608 698.02 584.285 669.87 577.964 647.376 cv
570.797 691.985 539.286 696.776 524.18 717.641 cv
526.977 719.549 540.25 724.708 533.173 717.793 cv
cp
f
444.709 448.653 mo
442.419 450.315 439.606 449.421 437.009 449.687 cv
428.836 446.652 451.595 439.027 444.709 448.653 cv
cp
429.228 444.91 mo
425.147 450.217 407.465 441.42 410.59 447.783 cv
411.961 452.684 427.497 446.719 421.33 452.635 cv
418.275 452.011 416.355 455.994 420.129 456.668 cv
429.565 448.826 454.867 458.905 454.357 442.157 cv
447.977 431.214 437.51 443.44 429.228 444.91 cv
cp
f
434.376 460.036 mo
425.642 462.786 411.117 463.023 403.861 456.636 cv
401.421 454.692 398.57 462.1 395.987 463.402 cv
396.911 468.115 389.091 470.011 393.866 471.401 cv
401.031 468.637 399.326 479.663 405.51 476.88 cv
407.267 472.424 398.155 470.48 399.196 465.966 cv
399.221 456.466 406.091 463.522 411.077 464.156 cv
420.264 469.482 455.786 456.135 434.376 460.036 cv
cp
f
399.134 671.148 mo
404.141 681.204 421.361 730.537 413.414 691.848 cv
405.479 681.748 393.463 639.878 399.134 671.148 cv
cp
f
474.082 403.84 mo
481.053 398.793 533.998 359.925 506.677 375.229 cv
500.731 380.505 463.577 404.034 474.082 403.84 cv
cp
f
436.834 704.67 mo
434.37 699.736 421.151 706.661 426.389 708.479 cv
439.876 703.629 442.077 723.268 454.803 725.076 cv
472.04 728.212 439.166 713.575 436.834 704.67 cv
cp
f
467.991 432.985 mo
463.923 431.92 456.876 431.101 454.262 434.954 cv
463.889 438.3 477.058 435.409 483.429 446.681 cv
489.164 442.448 474.023 432.415 467.991 432.985 cv
cp
f
510.152 347.911 mo
502.38 351.449 473.4 358.959 476.561 366.901 cv
485.877 359.539 503.745 357.723 510.152 347.911 cv
cp
f
501.817 453.938 mo
500.537 454.981 496.329 457.752 498.637 459.392 cv
501.591 460.745 506.163 452.732 501.817 453.938 cv
cp
f
543.856 632.874 mo
527.17 637.288 509.268 642.561 494.456 630.164 cv
487.387 640.134 515.433 643.305 523.733 641.493 cv
529.945 641.476 557.692 628.569 543.856 632.874 cv
cp
f
572.989 539.909 mo
579.833 554.954 581.42 609.816 582.988 567.38 cv
584.895 558.732 568.488 523.611 572.989 539.909 cv
cp
f
499.457 583.939 mo
483.63 588.716 480.837 622.512 499.804 624.917 cv
484.675 615.151 490.111 595.468 499.457 583.939 cv
cp
f
560.733 519.38 mo
562.323 515.723 552.785 509.681 550.934 505.009 cv
540.457 483.641 549.399 515.477 560.733 519.38 cv
cp
f
468.478 615.995 mo
463.966 623.709 482.353 644.282 476.675 631.22 cv
471.555 627.303 471.627 620.976 468.478 615.995 cv
cp
f
561.593 519.509 mo
561.523 520.206 561.804 520.708 562.391 521.16 cv
562.962 520.016 562.144 519.843 561.593 519.509 cv
cp
f
561.589 519.433 mo
561.591 519.43 561.595 519.425 561.597 519.423 cv
561.576 519.436 561.556 519.44 561.535 519.45 cv
561.536 519.481 561.547 519.477 561.56 519.465 cv
561.554 519.472 561.545 519.481 561.545 519.481 cv
561.605 519.529 561.594 519.483 561.595 519.426 cv
561.595 519.425 561.59 519.432 561.589 519.433 cv
cp
f
326.789 340.532 mo
321.167 341.282 317.593 323.005 314.867 330.267 cv
313.69 335.81 329.693 348.936 326.789 340.532 cv
cp
f
310.115 322.744 mo
307.799 323.197 305.361 328.748 302.998 324.044 cv
299.595 316.708 300.905 329.932 306.518 328.246 cv
309.287 328.737 310.826 324.871 310.115 322.744 cv
cp
f
563.87 325.392 mo
569.939 333.729 584.621 345.348 570.977 329.427 cv
568.74 327.309 561.173 317.161 563.87 325.392 cv
cp
f
642.192 336.858 mo
650.902 335.95 641.884 329.612 638.204 329.467 cv
634.972 332.046 638.811 336.81 642.192 336.858 cv
cp
f
585.293 338.265 mo
582.815 342.162 591.297 349.657 588.335 341.765 cv
588.672 339.728 586.853 335.207 585.293 338.265 cv
cp
f
648.218 359.915 mo
643.643 359.675 642.728 363.522 647.848 361.403 cv
650.758 361.183 652.569 357.925 648.218 359.915 cv
cp
f
769.476 340.504 mo
797.283 359.146 763.893 327.205 749.765 335.638 cv
741.05 340.878 765.922 334.584 769.476 340.504 cv
cp
f
700.213 381.027 mo
705.47 370.831 690.113 387.347 697.241 392.001 cv
700.631 389.932 696.296 382.962 700.213 381.027 cv
cp
f
756.085 418.906 mo
757.482 415.985 751.145 406.049 752.907 414.621 cv
752.482 416.639 754.304 418.776 756.085 418.906 cv
cp
f
734.195 360.33 mo
732.244 360.083 728.624 359.393 728.443 362.194 cv
729.237 364.311 736.801 362.068 734.195 360.33 cv
cp
f
735.633 359.501 mo
735.709 361.065 738.708 358.991 738.986 358.336 cv
739.36 354.826 735.621 357.465 735.633 359.501 cv
cp
f
229.205 456.786 mo
226.119 454.164 224.147 464.741 224.904 467.709 cv
229.319 470.992 227.103 459.23 229.205 456.786 cv
cp
f
288.876 502.229 mo
291.288 504.589 295.005 499.897 297.686 499.403 cv
300.441 496.716 286.785 498.387 288.876 502.229 cv
cp
f
307.537 495.687 mo
310.227 494.21 306.579 491.926 304.923 493.472 cv
300.319 496.262 304.448 498.511 307.537 495.687 cv
cp
f
228.538 485.382 mo
226.283 484.7 223.977 488.63 223.208 490.682 cv
225.586 489.476 227.52 487.881 228.538 485.382 cv
cp
f
700.495 505.951 mo
697.314 501.633 686.691 500.472 681.301 497.909 cv
678.016 497.128 670.46 504.486 674.418 505.975 cv
681.917 496.707 692.851 507.452 700.495 505.951 cv
cp
f
767.915 475.897 mo
768.75 485.063 764.305 492.978 760.705 499.89 cv
768.028 496.646 773.342 482.339 767.915 475.897 cv
cp
f
239.953 343.353 mo
242.158 340.894 235.699 342.179 234.156 342.716 cv
236.6 344.382 238.359 344.512 239.953 343.353 cv
cp
f
287.196 623.642 mo
282.409 621.159 286.595 632.042 289.426 630.844 cv
290.31 629.057 289.33 624.755 287.196 623.642 cv
cp
f
305.595 578.238 mo
308.444 572.787 304.928 573.44 302.015 577.117 cv
300.806 579.034 304.77 580.119 305.595 578.238 cv
cp
f
711.634 576.957 mo
707.008 580.238 695.981 577.204 696.951 585.908 cv
701.033 583.51 724.497 574.117 711.634 576.957 cv
cp
f
717.024 575.867 mo
716.963 575.805 li
716.901 575.877 716.963 575.856 717.024 575.867 cv
cp
f
732.797 567.022 mo
728.313 566.326 714.162 577.012 723.069 573.591 cv
724.833 571.326 736.695 569.423 732.797 567.022 cv
cp
f
746.864 522.403 mo
744.829 516.779 741.422 530.99 742.497 532.874 cv
746.254 531.634 745.572 525.552 746.864 522.403 cv
cp
f
717.024 575.867 mo
717.087 575.789 717.043 575.785 716.965 575.805 cv
716.963 575.805 717.024 575.867 717.024 575.867 cv
cp
f
717.067 575.791 mo
717.514 575.759 718.669 575.639 717.973 575.038 cv
717.476 574.822 717.272 575.456 717.067 575.791 cv
cp
f
788.713 426.767 mo
774.592 436.483 800.77 425.303 798.391 418.691 cv
795.597 417.457 791.855 425.312 788.713 426.767 cv
cp
f
612.744 733.261 mo
612.885 731.763 612.238 731.29 611.456 730.699 cv
610.821 732.097 611.748 732.468 612.744 733.261 cv
cp
f
417.602 297.795 mo
422.93 295.932 415.471 293.251 413.059 295.411 cv
413.984 297.454 416.136 296.987 417.602 297.795 cv
cp
f
223.739 602.075 mo
211.697 603.949 206.988 620.496 212.011 630.794 cv
213.516 635.936 228.5 638.36 221.518 631.031 cv
201.826 614.983 254.839 604.519 223.739 602.075 cv
cp
f
231.697 616.148 mo
229.169 616.84 222.873 618.861 223.664 622.089 cv
225.094 622.694 234.554 616.026 231.697 616.148 cv
cp
f
313.008 462.631 mo
312.584 465.758 311.016 470.085 311.539 472.963 cv
314.181 471.566 315.487 465.394 313.008 462.631 cv
cp
f
649.38 725.764 mo
649.377 725.767 649.375 725.768 649.365 725.78 cv
649.448 725.8 649.467 725.71 649.381 725.713 cv
649.364 725.767 649.373 725.769 649.38 725.764 cv
cp
f
648.498 724.102 mo
647.971 723.789 647.586 723.115 646.939 723.166 cv
641.992 725.384 652.456 727.163 648.498 724.102 cv
cp
f
717.804 670.356 mo
716.276 673.058 716.71 676.386 714.668 678.827 cv
717.886 676.119 719.027 672.893 717.804 670.356 cv
cp
f
705.144 662.569 mo
703.748 664.837 708.346 662.877 708.535 661.464 cv
707.201 661.178 706.276 662.209 705.144 662.569 cv
cp
f
708.562 661.415 mo
708.511 661.482 708.569 661.465 708.622 661.477 cv
708.618 661.431 708.607 661.398 708.562 661.415 cv
cp
f
709.474 660.67 mo
708.871 660.569 708.418 660.659 708.609 661.412 cv
709.126 661.498 710.495 661.175 709.474 660.67 cv
cp
f
380.243 374.88 mo
379.48 374.989 378.623 374.734 377.947 375.393 cv
379.155 376.51 379.181 376.519 380.243 374.88 cv
cp
f
380.243 374.88 mo
380.28 374.875 380.317 374.873 380.354 374.866 cv
380.304 374.799 380.28 374.805 380.243 374.88 cv
cp
f
381.976 374.438 mo
381.135 373.748 380.755 374.254 380.392 374.808 cv
380.923 374.814 381.491 374.944 381.976 374.438 cv
cp
f
380.295 374.806 mo
380.292 374.805 380.354 374.866 380.354 374.866 cv
380.418 374.8 380.356 374.802 380.295 374.806 cv
cp
f
720.86 278.5 mo
723.931 279.941 727.598 271.582 723.514 272.582 cv
723.176 274.299 718.302 277.539 720.86 278.5 cv
cp
f
258.375 633.128 mo
258.375 633.13 258.402 633.101 258.419 633.084 cv
258.402 633.101 258.374 633.13 258.374 633.13 cv
258.427 633.137 258.441 633.122 258.435 633.068 cv
258.435 633.068 li
258.435 633.068 li
258.435 633.068 li
258.435 633.068 li
258.362 633.018 258.357 633.06 258.375 633.128 cv
cp
f
468.673 282.059 mo
471.296 281.847 470.5 278.978 470.612 277.176 cv
469.449 269.501 464.259 280.334 468.673 282.059 cv
cp
f
751.918 368.912 mo
751.816 373.117 741.862 372.151 744.934 375.029 cv
759.02 380.56 758.037 347.824 751.918 368.912 cv
cp
f
607.459 757.78 mo
610.047 757.275 610.637 756.806 610.711 754.96 cv
609.847 756.336 608.289 756.339 607.459 757.78 cv
cp
f
530.382 274.784 mo
531.946 272.426 540.477 276.426 537.164 271.077 cv
525.659 247.618 523.715 277.585 530.382 274.784 cv
cp
f
694.689 632.495 mo
697.927 633.16 695.346 627.599 693.154 627.818 cv
690.149 628.076 693.388 631.768 694.689 632.495 cv
cp
f
421.702 265.511 mo
419.786 266.62 415.937 268.554 417.347 270.207 cv
418.98 269.048 420.563 267.828 421.702 265.511 cv
cp
f
667.586 584.452 mo
668.169 583.863 668.948 583.372 668.09 582.427 cv
666.848 581.295 666.327 583.955 667.586 584.452 cv
cp
f
470.308 234.434 mo
469.479 238.721 463.377 247.011 465.469 249.628 cv
467.031 246.163 472.883 236.298 470.308 234.434 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 27.1.1%%For: (SANGPENA) ()%%Title: (File-05.eps)%%CreationDate: 21/12/22 13.29%%Canvassize: 16383%AI9_DataStream%Gb"-6CQfd\E@(Afnitn_1*^GN;T:eM418a$pYO>;9GD1d25<(_=;upJRMb#2L.8Y<qs2k[EKA2^>IVt(8OH'7&o<e653(V\Iban?%?i7n!lQ9G]oDI.JGH_&(?QS31f>B8s\upgAJ$-t%r5F/4rjuh#s5[=\f2$m@q<ZYdhnFC7o\&ur+()d-rT<ua*fb_ro'5`1-f<'b%SfGIjp>X'WIlZ;tGk1L!QbU'/<VlRkq28n[YM[!?o(J/`<li/0]_([,QYYZ&r#=Ydorh\ZjS.!W^6Q0h)rm@$qs1liE?aK6Z[_c+%ZYuIcs7X^$\'JErqHlIR1N.c.otJ1jp>$CIbH65=E,tkMIX*n9qkkf+]QgIf4D\ZP5MuJ<+F!Uq%_qfLK(!t^QH(s+Wu_&#X$b6p%?T@t%472"An8Ed^LWIO6p9uD3_X$[^HAG.Alg9)oaSgUCQXoEqH2ZRB-ZB"[qlAP+1]Hn1j``AL]R?Y_RHf*^%_kObrj2LDcB]O"%1OY+8?dtAPZ.=m27Qk8Iq.DoUJ+bP14T)[$:VM,J7Q^D=c.h,?s8SlBq&9#mQ2g9-(XLt9h5f^WjZPCf:&F,*YJ5AV6I$WRhnOEQ%m[h.as0!gJiQ7R-T=pN[q>/&@kac'%C4F+Xrp]JsT)@gj#,0KNr8tV(YQ"%fJ++IGo&V4=iXY?&3`kmgh5iL/G]7N%LR(j,bDZq`%HJ%YGHf7`u&OlQa[k^3uoB,kXcX6W+3e-oneeT`Bs7MlEheXOHpd<U3j+lF>l#5m;oo8(nhnFO4b.b[eYE-GiB#&`aleflqc`b&C%^4(n[pg/E\PG/"KB#T\[hs0[M^\JhZr.jb5'DV1NJ,<EpIf9]K>lL&(WF,]!`=MO?^OGeNL[T]blCVB95J-mVofkW%r"^sWk1+BV%aZocL\9mhbpO>='iUuLQ5<nL1Y[?X#nB3b/obttm`QaV0hu3K!k#p`5CX8,Mrd/o[Dj']NcejTme$BNHm6S'a5Nhe@o&T2e5Q8q!%J,K;DTD&.H^&5q&0:m[nEnl#-r:\7%\'L\\GkV#!IK0#obP/O$;ngnlf%L(<[#g,/TRHekSfoo`c*QdAr3?:rVlr9JH1Bni[r7jc%pW)GmYJ'(`hiC:P^\`NtrZBIXb!6LQrQX:[s7j@j#ItS9g;>#h4F&D[6%0m<]Z1j'D>9ZlrqsfLNsrhE:RHV(dgqTF>O7)Y_GGQ-%p#E@pYJ6QQ5gOe<(Otu9eWVp.0Dd\Ub9s#*[i=>FB5dhL]r%RKp(u%]IImEIU&MRX$kH1f]C(G9rR:@>ZD\gns24H;caNB5qW2oT%bRVDfj-/r'ESC(AIm7h<^6Vc,f(6ZO`B+h8(Ct_nVVhFHRj[)UQaPqA15KLEQgo;[b)alq<6q/LqY>/;/1XpagjQO,_]kD"YK[=J%LWce6^Gu&Pl<M;X;nsLN7o$JgLu5#9eKl:9ip438T6BbulpJN-9<MTMka*CfjTiD&Cop*("a?(4p?PMebMDobnfI%:]LMbI\+gpr%_0<CNN?QtFf(HlQgE5:"pYsk5*e*_CafB?PaY:=<bQDZeK5Xol&Q3cas(EuDN"#Wj`o&O/EqLSa[&e+eEk76ns17"JgE];%%Cc>f%ag&:\*2du3DB&S2dG%QW/Mu?iK7S9MVg;G+(U_atA+eB;qf7prQ+E2b@L:$8HT=iAgh"#`Xr2^eN]CW'LWaI>e%HaaFHY[Omc9HW%V4*8].7H7Enk4#n?B0(harrDV>EgMRN8MYuLQ?4U_gOMfE=0a*(Z]'m$WW3"Z@"T+$c1"n(Y0n6rgq/5Nfu]ME@8f/QS8!](HLuB%aig6'nG)&)=E1itGF%87a.9TgS[:pnV#Q>mfd/YQPDA(DkLOu?cKe&^U\qf0DrkXpWZ7Es>,**(T<S5XdOk#fDB+-%04/qtF$FI-%a5&oXg2Z94Z]%'CcVa]A.*(`2Sc$17CNn3hG=@O6QdPeVdWfG`41spn*+q9lEo;$W&@YZZ$V!fpd)IhO3,%$Z*%)U^7lbN07Ycp,%%NGlt*Ba,bHT=hVKT:*.E>[M4r$`"D;m$G_-=]Y;'uj6ZASdp\8cBdms6o%KDrk['\'"^eq>Z':Jfu;T/taH3>1S)9aS7j?Tk!R?%J+)mp@l+r=NEO7G7V!U)(mWB9jh6XHr0>[ODHT3qT6K0h]M'1c:&<l9<Z+k>7baIqb:!ZP3h,cj3NP!7PI/ssS7E'(,t@^)(@U6C%XXV=*WA:;Fkq&GBjF`@I^bO_>)[2Y.<Eeo<6da",cI*$.dP^dI;*d7GL^#iHqaGfj8;C7a!6<jCmC`o;0*A&li45,HFI!O%N^;f>%&e.ZK!$%%I)=d,/V"sRQma&Z@FF1S\SPJp;bb&iL4S$%=ZFN+?cR1aFcb3!j0,#D?5TM$nVVU-(a6ERcNg"S..NO.m_@OJu_#T?J%OHP!UHm?ZJ`n@JQ2iP?^7j.63;Pdg]#EI;e_1@`\a8j5P>A8dQ%dOf$i]X.moq^aRLt&"5<sA>bZ&_+nelX;f4nicuFh)R`=Q*$O%L/T[Fi`4d+POXZ3'@ZT4)9d9Cr!q;hkpS^82F]4S/i#"uKf$7YkMuO2*f<E*??DVmIZu'[(SClk"7SY*$+SoH#!\e1=6MHfKOL!\%&M;1D6,uM0iJXOZn4Hn$TnCpC7hmLWGBB+odsF"<4hmEV74+l'"Bq+[)rD,WNgIYiE31NRW(j4:)6Xm^p`i.kb<Y1aD.mIeftt:U%mlGNEhG]1jc<e_(biZihNVQkQ:H77Z6[.#]8*Y^_`YI"A6@Am*&)@7,K#cm)6JV\`e#79S\AFf8M9c$"*H:V3P<lZseE&FMqRE"b%?6=OckR/AYA,K2VEW@`(0kd>$N'fhLiB.bM=I_mVNCS/MFT52B_QDT(ZSP7,7N!sf#1"b$kq"(?-q!<$Slt0UZSZum;2DVlja)Mi%jN\O&EgIU,R`Lc3ESWUtPH\ZSElBH<@[MkSb1jhJ31>PPKjqJEYXFutBd]tm\'b\M$U^)s%9sVDJoHr,_*WYU+EIPhdZ"a:T3D7c%I1KUjEaFLbiFmD)c/cAlK-Sk'#VlUT/BG%R:,5T5BPg_T2BluIVmaT#9T:ru))*fcm0g<Qe>fIS.$@^HcE)hc9Q/Pp%I9O+b@J,`%9m>eZh4`SFKZqrC4*6t[cu$?EVY_atLM$-*g`nhAVtaEOVr*F$,V,An)`^8"KFB"-88go+"osIni)W)XW<XJHnK2uNLD]N1pZg:m%Qd<B+Htso_VjR!U`H(:?`k9t@?C(O8\uEdc5Dl=\ZLgXa;crsYU3Em?7i>,t#1mRV!*P'8SIEWHQiTt%C6DG@]>tOId1l(LXAGg=%Z6lNqN7=#M-387`BLF8d8/57*q!P*Qc@'P8`mUjpCL:'("gp"]aV7o[AlM=NA>c-CcAO,-B8`di1KA+gdT!3F=t;tND<e8'\^P%C%D:^Z%G+@s0mg%G*l#>78L$SI3#Zm)^aH?2:E[dB9r9.!!5F+fh<BonR52bMq50*5CVnN-#jb?i3(`nPJ*>7QuF=hMK4gKr@)T:-'%9l_Th&9Nc,1Jt)FNj<KW6QsWNQDm`!(E(jQ;_!@D7A1kpo?BreQtqsVg)[<%1\HZ@Qp_rnWF]am/]7L,[(<iSfkde&@:uR)V)Ho/%YU8t!B)Q0`;6;?I6tTeK$S.Tu[4.s*cK[pS/?W3`\o8Y0ELJad\&@p34gkjh^eG0\0DZbP_E3d&EMNgEFl?dZn_-jsql&8SbWibl%dGB:&5BXhu*q+Hnp\qM3s/H$4DYQs91?jiL6Q=l2TEmJZ,BqWZ@cWCF87E97R<<]]N"U+DSJ]\0AkAh!!p@nWiJVgO-N,*:SMQ>0%qf7a4OKLr_/TT%bmqBGhq*L!mTg]Y:.*Fj]Akd=6T%_O;W_M!YfeA%QWso#FTkZ$?;JFSs]rk9d29Sb4/.[uh?Hl_'S1DX6VHH)J%#sE`2MJ9VqX587eY/5Wca*lJ-jbEd>2uGU)8Y$k/cNbMR%TK=r;Y>/_p,sPnH_0R>C9hNaX:`N<MERd3b_nZ;79$86Nl*@;k%A8U%CG:[X@C/k;A^P=](WT+Z"_p!K7i:lU?/<sj$3nQe)C)KVJP=l5O:$nZ2<_D62lmU<U+R\U"<H'AYX7)uW#u[6<E*`&W(JNHB^-[>%3XY5Q*pFT;:[6f'?!j",2*"QVSecWKS"DN!6F01gG=X?Gf'1Mts$'dLcI\+/ic4Y\MZlc1kD8SJ/FRd$ESC.JQM3W:5KsY:61441%:\T(=ig'C_+7@t\rd9kMD__?V9KIC/5Fl=q!5?[TGk-M>:WGNuQC2-W,>\]6ZGAoR"=O:H!h9BM$"-Y>8HgD9N*RkTWGnYaOZOi:%E6)SjOm`B>:-^(Ea;Kgk/99]c;)ki`OpXc1.&jGH!g<schH;P>&tf@qW?KZf6.(BgV6effO,fe;>95e!2+lRlUpL]Q"H]$&Af?=$%nMliMaJPui.=qo&;ia,33_[t%9/i7'3,#cQ,Li/6i49qK3l:<pr8Y4qg#BC9_qdOtSDSU^(']*Bml8&-Z+St.O!%;$Nog48rD.IO%qti#bjGO6<U-\c`kNAK;%DQS<0,io0#5Rk]T7?i!U^$'d]QQ7U+"Tf@5`s/i'-cHsBk07PQQ'[OMTesjgkr2^/,sj](%?KdGPD&f%&fqi#RU8Kno`n_mmC_e'SGYC#Ga$sL'6*>?G"%N4,bGTr]a;E<q23@&fbJRmJ,K5$@=*2]D""5@h#Ft@%?Q5na7r5iTXKr?VKQ]p%N?%jne7rUlB_fal8(-hn8`L\7pUfHWY:M;3rPre`PnG$+6Bu,7,9[bVm[!NY/T+4uGkd>8"7($`NYrnW,O:,oC/t:b<<_V1FnH2D%BfGA!'=mmnN7*5<e6N.OkI[S(iMV.kB5P1T*U#+^*U"]=#Pp&;V%Qfl0eO/OQr`4FLakJUKp"!m(0-[^g(?J"ZI0g4:e!Dm/d!sW%B$+(<78,5,6$"S*&Lg-Ok`jD)[D5QU!M:%B4GuXR2"e10SAUG->=V^dZ"t,tl*NRa5j5OV%]AH-So='6-AH2W7iE87R]i^CjSd0L%e6L7HSn>;Sc(:eX?B/[\Bkje_cdiMjXbhGM3FfB5k,LtNr]/_QYPFXq;`N#13X7b+37:@+e\'3+@::dH2Xt.4V1$Y0%X5U4S?<k*%B/s>rF8sn_R%^l-b6*lVmmC#S095.fkgPPF2uJ16VjNT9SIrN6VI,FsU9S?jfjs6KBJ/(sWQV>V)q?m,0q6Y/^0^%boO)d;]5_<<%k'j,JA^`nge3W8kKesOToZS)H*hSj>g_3o?8>"A\@SNNebcQrM+bj``B6LXe(<mSS9P:c3o;r16HBd*DGV[,o)E."l@RPa;7;N%3%nhl;>q&%rU5j$hBF/(mu^/1=tcZ.2)>IRN<qQYf]QB@$\ZdF+`HIm;>n']9Pf;"@9MfYr8U]3@"IqC!I^H[IESFr]t>#UIC'WrGG%d3JV.OVd<?pH-N_UL#"b6d[uUp=%(Q4std"nK7O\/.PfI0:$[k_fD.2Ib\?lT(Poa$([s&pZ2%SA[ZN&mEB<PG%p@4PLR;i3FOD8%4-+EYX#Q-k"S\&<ILX9L0H<f32[F',^i1n<S;uLfJ`#h!Rg6aR1>t-<eE.ZY;s_!sC*naK\Ur.DaNS-jbQZcW+3RYTjdO6i82?3@%qd[/N\GG&P\TTOU`U@g-lc8SK00]+)%su23,sKI<>OSo`QMX[@gEX+!'n\S7^RS@[LJKJ36,APHgS!1g95SQ@cQqQgBU);qZ*=WT%Q=b$r2'5Y"ZTP1h\K=H-G#r)#95Jp::"Mmm/h=XeH>0'edgIckeWVJ]XkrWSg9NK[74Wo;A^0=GKs6G%T5?/D>"S4SjbkupB3H?]%QrKi<9hU28!S%2s_qsltVqTEQSfZ]Bl:/UU\?VmsD`M\l`tlkiX4'qC,@;GTicss*M;cV9+$JCT*73""HVfY#jKZATBm-"rqH2V;%U^oKb_qo@]/?Ee*m=M@i>@rCdR?j80#%KZ4+a#=la2qt?h+)3%\,bgB_p+Nn\I\q#<(L,;Z/208*AG?ulKQ78:pp:@=WQ..PnqpV%B%@88Rl4^V/7sTGWRN,9[G0$WC+!c)A&gX4,Y+DVmN,38R+!2,IA%b1VdgR8``DVi@oU""$MT!c).WBaKdq3AF#tC`(>?KsAY669%X28#@9R]1.<W$+*%sh>JjL)M]h9goKI?%X_Zu"humrb.Ml<&N3P]n1Hb@>fGqR#;+%H$pTag`%:!j^&$Q0"'91^%aIO_`4U!$_/7%b]k>]=sj&!%.LM\fHNpB>m-?Zn?3Ygn^gDi78.ScK>+Ni^E'5PUJWU."7,r\EaZ$l!5V!(7e+:.J7)_Vd*%[I[01?H,e0VS-VAO7%'bibY:`@jdY#c1Y^SBV0k*6smq*2]?nZQn!B.;d[;f!8;@\e2O1sqCQI^ZZ(FZpJKV4G_=bKIsP__D7^k4=G4HrHdX7VeARH'lX;%6mN@V0We\a]siUo#O_F\hA[<+<U<=;jA*q$'<5g*G*`bCD[m<S<Z[dho#egu']0QV@jD?iW+Xgf82V&]pII@qOiCDVm."?DlP6U%%M9'^O94&\3_,26n46(XtC10?6Z%(K;2WIr"/O]bB4Y.4c2M::*puJ!6<OX2R@]#D1Rr(U[C3c_&"^SbY=0l<MN/#.XHV1E>j'mbm%m4b2j0f()]QIJOlQI1!16'kP8C;D=`IRV$D)XYg.EQL)3F[)F.U5`h(j(4.6<BI7DN]WhrRH*@Wi\u]^NsE"JOd_d@!&'*#C4%R:%>YJ9o:(r6d!aj=lAZClY*#X==2mO&B.`qPf3$<ZGL=;XYRWth0B0]Q6$Wr<tn<3Am_SB9RMYoBN*@KL[ha>Koef$C.,1P1(FDlPa%D.WXS-Xa;$7<r-@Da3q"T=AWB%iG1l^j*d8HgJ#`(7csc^23cSVMn6=H]',?[`Pk7fi+g%PK3%Sd+u\-g%ce.p-+dV*i7h<KZWQ4%I#UcPU\bpuCV_dnfo,'c__m3XEsQBdXj4G!g^"@,M=i:q<ZTj=]hTpmJQjB,ZlR02A]M1;04VQ-2^@9</c9?^kju5I>EO#q%^StG%@_."n;u40G4,d["]kSW@(M;,WW5J$N'5N*11Tn#W59/R#]Jo/mF`[$c%c1#<G`)=7Wmpcr4-a&fEuO;*Tnf^@UeDrF@t,d^<9jEk%FFAkJ#!dM_ZV2jZqE4#jcLT1`1Ioq;!>(%V>0Rlj,iY":]?hb$[LNPDTsRB&'=bG0J5Y>Sdbfn#?l<N.]u9#D^"&XlgP+2clkKMD%L_D1ZhJ#KK=3Q8Q2!E_)G0Kj9KHL-Tb74JVDtpNpUprhtR/.2MAYWlnSn[jZndga#\S#EuL^Z\F<qJ66hg;25P8POmGTf/@UY,qh%NP[1?>LK5`'cK)Y2Yo5S41Lb0i]!a@R+#MunN@!5egM#(S_/mV1JTa.O72b;<]3"k2TT^Cm-)\8&tJb`Eu%7@BtcRl+Q\\pRE3\q%;n'+4hJ)_@)U8$V0%29^VV:q5mdoR'f>ip5Wq[5u.[K=SN\+QF90XuuJ)j_gs3qRhTm:r`\[pXtNM(6cU9&*!BhYn3=D@D,UT+3Q%``kI+(Rk\E`+V#;gBUOC4H8cPgSY.d4enc"Z8"UlDb3';3'4Q:r;L>Mo?oVh3(cE$D>8"Ga,^%)")EtH0di;m!;sG_a=bbY)5>g]%Se$H<()P^(4EPSlK0W?^+4%@4]]nO8K728sZf<D^+-sr<Y-&i7;(TDna%>a@k]qDXLG1pNO;h@oL94b79_c&f/(XB:hQk*IXf^9W%=.#*?BphND3YPD_;Ha;9P0pIMga-O+/3.VGCPre/F[!p[UL-s(E)1#UGNphq9TR@CO6KrJ0b%&6fd2dFh8geP,W#+OnX7B;Vs0L!%X1loM1OJDd@2DMARPl+N.C![6bF0*E'`D()m:cEqF"Zj.c_\Uc(aZ2/7ojK<aK"'/f%,7Mm:+64nVl1W3OOq1dU)(b5+4oU4K\'p%4Ns`%_uhsJ.C4)`O-@JoO2tTriZ?+s-M"g);78'NFsUtu8@3.>V&ZCC%MI':k(S72_V0'G?#ZV+)/o5;oTFC\P-JZpm`XIDT8s?c%Ifo6pO.?<WN.2lj4l/UapJ/V=NuPatc_H6JA#<E)pg^iYbb&o,T6C%\)p[D&<q74h+ET$G?7DP9:3G=LF+/XnC/N=fYhe6kqam@I%WuF`X;f-mA1asZ=nfcuZ:K-+6,e`</4\/l6.Su$Lpe5sk]<&t#A!+60QIS.W_FM\,hhTq\;t8hibqhQS#"438=9]Z98O_51NpEi"%3e4k%^;P\OP\AfF>Ut-spfhEoP?8EWF\1MKm@dc<Dnk<.cma<WYEHIFC\k!Q57*\MrYd=>dQ*V/AHYX)FCu*0]t$'os-+l4W0@'&%7KF7g;D`\-8$+(6&>HF9iJps]=]#9_9o[;L?HSUYXA`<AE'JVKpA"$P[m\&OlgqXNjc/GmhJn_'KN=cK($>B*Lej<DoWEK2Ss8.o%!B'78;i^E1*q2/Xq!Kk_;pB&<?JIY+\G>7`?eiAF`<FY4Bo*LC%E0Pl62m"uk`q6U"ATM$_11RBPTGeS:UpdER?+b[fFW^H!L8'c%`hoiiV+5OF>ZjGcf?/D(kq8SbkJGaPMEkqBf]SbNH^2dMY:5)!;mD\<'PfEagq!YGbol@Bi+DgKB&@a3cE+P;,+^P',)-K+X]oI%%hmR1QhO7SGF@Ffm>KtE@OI;RIU7W;EH89BF,i%u$WRkEu`,!"):q^HNS@E]:j^P2L"",^^a;=naI7NG+-nio3>$#DUM)&Jp11^k>%DI0Z,SiM\R_'V&.a;K4-1A`.<H0!qV?D*V*/uT(&D=@q)QhB37m&hI?/r/'o6VR@gbrZO1qM/DQ+T8s3Eegd:_%"S&gQlM';Wn8i%]m9[:7'\t5U'jWOVMM:pC7>s/a+d#QSO"$>_3ZXOXIBuBOVke5DU<b/$J'4.!d*d;NZ$p1+:\Gm9?/sq\.JtLHu$1ne@6TC]]iTG%mmp*-Me+2N3=/nZ_EK(#+rfLG<.sA/2>7o$d>umAVKX#*4-o[IgLB:@;;Z@eY2OE[.mBOAHM<G0WmP&3Is[gLmNTud*6e`AZda.>%g?qmufSQqd9c.$q,G]<QYbtY0k5f\s.UZucq2I#t!VRB38)n!]>)I&Ir-ee\h*'V8ZIQVX*Z(ktf;_d)bn.[A!DY$cEBkNoR_KlE%.X<9]ou*U55GTX8Wpd/9**^XO[N-j%H,eu2[!ECi]>iudI*C,Us,21R0H?lI)Z5C!"29%N[XsgXp_8%,m)@Oq@IaI`i?m]@j@"VI%MoJAt$hTE/gqjme&66p`KQRM`]n*f3p0b3[o'nZt>DR;,Q$KE5e5u&sE3SME"#I4#(9I>*/+c\?J!*ftY8Lmh2VISPN%qg5jd*0?%*I$qpk.L'%Ed&1JKXm"pGKaXP3D=Sa10HSY/&7`AF].B8<*tS'>[sIu4h'l4&Em0?/'Y`XCobgfhCM`jotH41jo,=P')]8o[V<3^%fJ;jJ2!lG?8A=8Chu.HiY\STV&3en%q)b-qYNkO;R`p,FoZ]q8NCNbn+]dF49X+Gd@J?kgHoBM9Q#[r\qdD5'*#fgfi(0&)I1(e*%]k\Q6YI\QXF!uH$X8Qg$ARUNK?%cT\@i$jYKjs1PbSH5,"#;WV2EPJ7IZF%!@$AR8fdtm4@&KE!IX-%=MINF]gI>R,[JYIeY\E!b%AXA^nNMq+RmDmW:Z#'@'gI;_/7%o[>D+mYKMaP>/(HQ1qA!-5NZ2"(?VRMXuZ5@-,:#XP8)fs1:+I`WO[U'"42jVNqh4e11)j%sj%>Zc3K,R\a-8+tbrgmHUF$/84*NIUi$50dTCft*\*bcLu-m;C()m9qhFjuJ[g6*K0MIZCB"AD+TLGuM.]2c/b=N^2>5E-'YqYlE0J%q\Aou3m6@'be:@K<.>lFY]oiEj55ask8pIMO&l)0M;ZoegU,U54gmJYb&.!U4]pXjTS2cT`7kK$<<MARDSbGS<]Nch"C`T]_J6eB%rX`^p\e?"HcCE$fFB/krX>lKH+D9""8-TWaVDFQk8EJa-l0ek/O52h.2q.^Co4F9rGNL_N&f=-kaq;#unTGTj-7_E)1gCcogV\,o%6B'+NfQ_AlGB!?t)\:4/*R!WuG]78.=?adFKCcg0bGT8@aH\h"$?/b;PAXKMV!$Y!o4P*Cnau?3'L$XF>i<iLk8OOb#*tl$"<T<+%0FF,l3=ISKQHqW(OPBE$"6$Qp"m`_0n)iJrqeto=\I[k0N6B_5o5pT$EpCp*Un7I)o]TbRQJYo(psuS=^7o\pc@%eKY4_6=W"++i%c^fHSO6*X>-Kti&dFiSbD]M#cq:t6+^8#baP?=Z*rS7407:YK]0Fn1S:f,0I@VB-k#4k+D6XaSlN8j9Sh_3FMgsNI0OW/2He\r"_%>U,@.cmrsgd]unrVpY*lGVHQe@NDC+IHZfCfO^];MI3KNa`6d.lQ>j$@XdNdc!4r$GSfg<&CY*Eb9].@^t1'Cn8BnrnSBh'kUu\-%"h;%HioD7pgF''30`5h$ms,7DqS)Vti#q?a_M0UXG1Z7M:c,0U[XTf?mhI1mDmoMBn]9Ni)sUXEDg%0rmegNF6,DEXD[fYs7J<%2%jGr\Oil'5g;p3Pb@%dO41QlQs>X$\+RSC9Y]s]lShJIVOmJX1W>L2VUAKfsj\IV$0<dZd,#abH)qtHQ:D#\D9$[.Fh^Y`M.ABl*6%s,Q\TmbcLd;R*nNo6$%OTbbrg##PT43fU!L28h^?H72roeAenhm&/VBg<DIGj)Ld0Y5RdPoMiAuVTSdNW?)85J]"XepA#1]eKQ,O%I.O?j9.4C7BTEAB:sbfEd4YT;W#LT[P_ONJ0_LIQe2#"?H?<o>'7OZujSeemKFa@X&=gPOCV.)@6ila''_'noJdi^Pa<'LbM<E-;%kC%ojPePE0\#m/P*m"9q>Rqsp^+`g[]QUi)SbqhjPFgTAXXo[R4Timr?H/`$pg4%2(IP1aOg;1!\X']fB5V);DD+qjbmY9"a%j&Z%fUsC?b6+,W)b9d!mMTN+$ao.qm5&N>Y<pJ1Yr.TF^6S$ODNnulcjh>6ZEa,D%#+"m;3R#BG"GQc5hN;NXVA=#*C#E&V[!<4MDSR4%i8:I%pOVgt6fFrP,eYrQQG+=&UN)(^1A3EhY[/AOmk9_i*j,s2rD)\5!823)]Nf:NH[@bbrk1ROO8X&/^r1+iL7PSRp-X-DA,;bT%ZE&=F?3:d8bLg`[c]121UE9_kfQkken&W9g5AV0^k!kKc,dJSGilk[O'1mmjkcf&Ba*Wu>VZ@b]p"+!5n!jNs'Slc-?;N?f1(7M4%__7,1(!,mf;"ud[^'o]K6X^l?s5tNBIp8iIl4u_*:"dqm1RA"X9E0sIItk6$Fn36W]tb!FB(p.#j*MQs0]j))f-PiLd&d\b\boBX%O6tp3.;U)K[3gr_aH[9Wf08?^O*L)FCpf>7g7B6P,Og<?1X<:D,ug$(LE*eRMk4T`rpcY3k;1o[6RL.Zr8[CXci3KSpYs<DJ!O6D%qsb%$o`^'GJjOlOTt[0r?Vm[S.+B%Il3dsl`S^Rp4a\+S?\ZFaU%"ZqKbD5RJ,B)mDr3[,p%J3^Dh%;8ahOEsZ2F!5peB,mr:\7e%\'NpD'$'n;LMrg_j6P=VF8(/)S52(4*1);bl:oK<4N,`eRLG6EaR1CqeaZ@Pq>YsE0Ck_WpeRrm48f&Lpu?jjJ,X?urel1!iR`j7%pg<@G)nk<VfYaCIV;Ln6;PXhpFSM>.3o9(=juZh7mdBR:rr1I8S%#<Y:Z"?crT_Lo5953pN?nMgme,l^LS*E%b*qDWo/G"Q^4,\H%h34c:/C!n]+.g5lp@[mG4am5!_dCOis0qp6n,4n(n-17hdVnsdlcl-lf2ZDd-lID+1*WjaYFs+eDi$].s+GUK2-UL^-EJL8>R38;%f;d(.apmQ!71(<[kCZGSCkZ2k\(ZfM1_I5:(RgrT`#M!(jb9`l9raGt+Km!\:[YhAOiW5c]cBG?2lP%_\<q2,$gDVp.j9&9gfSGH%_n7<VYM@2=ocf5Onc`>Fq5/o%6kXCUDt(D;VYQ3Io&_O\aOKqhRJ8^\Q/B#h'?)@_r5c4mNT_=*B`9?75B24HL2^h!KrLY.,>keU%)gS`;NlY+@mSF;R=6$E`kd3_%ndQ14Kc?,\*%K5bd4Y#L8bC6#`gc>BH;PSR>^$J3AkVHtRk+mL!ag#W`iJm:K2>MTcB@X%jgT8O%k@,$S]Q7?RGV@CPbN(*H5$)&Gj",JH)[lu!HoFc!n_l",YEq^M.eR9*bA$NFCQ7\KN7SO0m4r@^YJepCeha6SPu!U-Ddoem!6,_E%Yf[?rR_T]9'M[Q;,`fh@)CeOZD5C`\<\aOJKN48:8A)U)dq0)'hR#W7n.0dGg=Kg=MBo>.P&pfp=!c8g/)uWQj/,_f;L3#q\>2M2%+-Nq`h.-0+Y&lGCA6(s!j96'fZl;l=Nc44cInh<J\q1NsQ\eNW3Nt5qX=h0!%U:iZI%3*=Q1$6SPR6pa%rAO^:srU7%]EcNM3V?Z%`TPh7:8UiuYck?m*Q/>s&I0grI!]j^['<PkiES(*AU;M4P/Ak^'$/\+&B$I0Z67ml8*Rhu;1niT;.c39U\p*A`H8nSoT$D_8OfF\%,i.,nVc-aGTJ?g/`i6UIX8F\[>C1X(2Rm'=XWgIkF1?K5Fnf*OP>&H_@iKWG@ujUsZqY_/F?:%V$kMb!;R,FW'?Om3d2m+/&HX0h%WP9#I!e#jej@VuF)\"&AQ:?_p_5<3]b=rPs695-K8jA1>EO1P2EDDslXmMqU0oDMMN3*Ph[%b4"P@dTG(@_0OW^nCEN1_'L=4(*_%PH5@>Tu1/TV7^kXa#KXdU8VWCPf1!B?Q-L5Lh,=FYbIJ[)5WB_9o@1>3gEmZLbctl.Pb&C=JF79GX6eS898l&ND4j2M)b*,Q0T>f%+ppT]BjMju.t+bgj@,Dc;ChO"G,gcdOCrS*aUbE6I29d-V(VcrJR9]Q_+QQe=Vr+Clm\p.QhaWhrmLE!)oPR;o?ahE1q5Xt[Ho?)%AYsGZ.9V+r=2NSr<P,DCk'9q\f?1Ko^IkXCNK<M([O?<q>TiJ`_sR`5_Z;D&_Wod8d^?TMkQpZ)5uM9fZO=*R"K[d!Z:J%?"QEs<%PpXC:a.r9rS9tlP'F"7k:DP@Wb_4Z)^;DB;_`_Ef2L@5N.gDJ:B,T&b*t[p4OX/iNO][5YO`.RW/DhX@YWO(em_Jc&Q@Xp[a=Jqt%4V=@CnD&t7Ap[/mf75@rhHE*LRTW<jGs]M+-_:4cY*<oXpFGff;Y^<tAn@tVF?m]sfcF:h[mf'9L!m;B,ltY?i9)4-JWbmj"VTA!%,*DD2;[(>U]=hSZ3f_TfltlK<N4mRW44sm3<E(\77:%3KeC&607!__M!5EhSng&'.)(+Pf0+'ib-X+`D)$ie:Z7N,PY'Q;RbSG9P%0qk'',<!4OJM]s9E04("QmQ-Os'!$XKh2E\k[F'^H#ZBT\4Rr:+FLti!DdGS_:!%@#+AS=(?`etB?VD7_"+ET''Qp.N@'^$Pk]C/%&L8SW@2Cak=7N4!BL[8Hk.S^mJZ<#GW5N?F^2f*7oJLo@frF?[N=2(a;1V?jKl!$dTN=PYXNl/u[^]M!,co71Bi@Z!,cSlNWu?k_%>SnKe0Zs58m[SZO7f-[>igUKV'PERlZM&:"1$drkkS4u7N>II5dH6b,iDtfD0&PO9d''O@k\+h(L$6W9ni@XlpdPe3`j9Spi@n7^%d_,EEl09t.Z-3I*W:FYs\m\YC>oGG7pshm@5;J0&89MM\&G0*OYbtpP`3SZ^nm=1sjYX]?CGMDkM6mXF]k#C3pnT#!]M_0%8rlWG%Yk]f6\pX?(*KlS`+dYfP`2c2KO-8$R-SUL8<#1BYo=9]Z/PhJ"QH;IM\E\;ce9A0chm/[S%MlHoUDe/aD>XS[ZOI@hY"+`X\m:VB%ge[)H"L7em;`(Rh8&VL\WYVG4`X)3;p99=S+$HJ<HO;Q%L,!Og;;@nsdEBs(in2G"ng%(9et]NMMN&j5b#(D+O<u]JV:6oXWJn.j%etA`N<lU_%7!hm.$8FE<.:dZ\ZID>a+&L%?<%O7NUAD$3GiT/TU#FfL=`rssF,RFOdnY3iXd&2%]_fhi[ifDp2%<%_DGHHSPklpW%9IFh6FRUS:[qoB29M..MS<e5k_]m@U.&eX+2lCb+KA)>p;gB6Z.M9osM%+$YK[lR@,(8EOPnka2/A`+<SO?C&Bk%!FP"l#)Y'Li,%-Q;:6@+[(obP>bB9m7Wm5gAO@=7>KJ#4PWRF%$f#ieF=b#fI^7TYTQH>QCerrG]o:&"->'ojg0`=^nq$Z8>]W6OJ6rmoWMso3e<7%ZXlQ\$#TSCQ_sE^ctj1>ncsH3-_iuZrEQ?pK#?R^i=J(`,<Ooh)LYX=:@QQ-WRMl.'F_$Lm$VSj:VJN]]9(uG_a=R>7B6T8lpFPh%fDX0@T]'Ou^da^^f_G'U?iBukS*-uh4oF[7me5no+("s7p"LiRGD@lR";W\%)\!j&10O,[d/XSXrHK3@1--'23V,)SULFHp4\B',%=*;K!h.@<R83ALF$OOr`G'_!OPJ/PPj3`XRAl4Sc\O>SY<8jHG_c<dG0HjsBLm?hq/]I>i2"*5:K;YT/7)Q$7i5Gub,ZHi3G&CMa%ZN%qjfoH*omlo?_-FeisDQ_-hl'+c?_=#`D;C`kq(#VBI=(r7hL#=8iZt2@2_CJINd/ET,Fa!!&-r!ka(4ua4DG-b+?Ia$FL]a!;%'gsi)=c%7*a.4oYAIQ@nK4a<S984nb(%H5O3t[%RWiu^8*(oEq&":p7$c.CroP"6$CJYFK*QN;VZN[8PD$$l!1495]Cn)h.7+s*]%4f#d85Y^qb@b]N`JTFYlDW+#h8i1BJFV]B('klHc!%79lS"g[HO&uJn1gbP^kdChBSQFg=5R<1dZom\3ICC\ugA"P9rq(QkW]$l+%Af&tAqj)HI-3`HUX]@4>OE=S?a-#'cXh,on4$5E52L!I'nVL`GW%&GO'G#`-(<QX67/(1_L#M50Ah2M$f6[TnIPflb@K^t;?3@cK%NenS8WPSSLC/<%"_c^fdCX\qD85)fnDRdIkQlt`IqA;dG\]T^BM$t$]d:%ie@L/2&k^Q,c^)[h@AKiE#66Jgq[l2_nLsA+D"+G'N%[5rk`%2/2[A/Ua,*0CY93P=c.((&j@P:hl!=P>%L-u6&#f[f'!HfAD7WO2fG:[Hr6VH&m?"]FQH\-BiF'OtJlE#Vc'MeNO^rW%f!%8U4p!$S(l-O1(&O9O^l21-:Db7sh'6g%C_gZ=(S&n<ia^'H&I$+RZL*V:cNr_8C%#F2Ej?.a+Hs)gW&F&/(E7H=_\W_%T4L9)m7Q%$8>0s_&S9FopZ')9PH;O?rL,8_<*^DV/PGLAb'daEpgiTn=8aG".fLX,G^':@Dul+Mt6"VTZo'3JQS$KMQ_ZPD,^cT&A49^RP5*p%9fg[<-<P]%3dD6A7*o"]`P]0HV(@CE-`Q#Qn%^TPU8rZr2Dn^7aip)3/<^QU%Y:KOTJd6?'<fg0b",nkG+1ArpbXe:<LE-L\.(;-%a2Ae?1ke?r9!9%[?u^o9`ftB)R%h!=X[>@@N=q"<09WoLQ')iE6:>9"MOD<[kQ&A>9S&T[`gk]XU;T&%lY7LEQ&5_['"!hc#;afd%r4uKeUc-,dTcY:5h(JItBr4u5)=d]+D(h<ME',)[3&+'4fk:X:NX>6HAa0?kKW?Kp(FrZM>;Qp(=1kP8_"L=#l_8;X[2]`<Q&,J(%@3@L2^:4f+2#=,)%\Qa_8XmQ#L#3_U\TUJ74</Kf6kcS-lC]k96"^8/X/[1^`e\!e\DY_GlE;P_8FQik%@$XL'Ei(4r`->+][<`S%Q^jSi9h\ARE!eaJ*9l*$%MH#nl9pSFoM]c17A*^K;@"Xq"..!FB"*R;<>ZO]>&2\j9A]RMW9f+3K`q/R0JZM(o!;Ck:$/XJgNoF"%54EM#jblRX^u%jk8&VJYP^%R$,iVYce.Q%8^F$SpZq7-0V#LKp(D2KDH?2#$8&XA_i@I>r5tkErZa:DL\T!N410t]=8?g-kYKFE]%odK-a6+%9rGYeIA:2m1*;sM@(Q>"q=$'UUF7\uBM,?0%I5_#'bDp-Sm$!)#"8I:pqY[&Q3eq4eA3mCYA*3BY>(]@dSPtV4(a(UN%%gjmahEqW&:)M0n'%:/"pp",Nj+O5DDc\1W3,u8l'?ok8$0dJS#_f$85\mXY&5X&Z#GdiQ%+;1\>=5]E3qb)tuL5A>JF?<91O5b.j%[3:Fk+ea>[)!^EThkd<5)hAgk]D:lTARp>72^$NRb6(3_fAo>P*scR3WZ1V'pj'YC!P60-9u',1LLG%S!?mc4]ERXDH&S\,)t-n0%.KWG&)KKP,S662Gd>Ynd6mN>'/T7K'$:53n5j:NU`EWu:$H,:H;ol2F0p'SY5bu\6YOEK;,k@_]W0dVg5DXN&7'<pf</\=jPRtn@%#Z9!Vj%@*'_*I\3`=bu97.p(IYTI7G;F8n]C>H^BkEX;^I`sc!-344^Y_o4g,-1uV_=Z9#/ijBpaVT82=9t%Qm+4P4anXqc-(V"p%(KJi0((_@n7H7sRYIInpmH#34'QkI5Tn1+I*@!eS^*K;*D.F55@U'p('XFJG;bA&u_"%O`"d#!sLn']@2N)%"?H"r?&c.Sl$A$hb%rA#c>R4C%9Z$X1X*,knF^:Z!EF2(e,#6kl/iK"OY=>>,"[#p?U!!".r$TLP.1)D$hh#nZDdG5F,74<`Wk@dr6#4)'#.]XV[JLV-!%F1"87K_M#\@fU?Hc3(&]k<cC2\Qc+lR77F.=PO98<iNjK"7NI-")/0@H#e*3E+.FV5[6=S4P$0MZ8Ak/OP.Ph?D>[UU)3,q:-o4h%*n$]B&c4m:,qPGSg+pJ'Yeo!#%h/P>q?LInMBTsK0o0am-`$!?CjEZ?9GL$"jF(SjA:bm\-3L0'Gs&KEYI6\M8qW6PMM_ui7asGL%6kTMbG-!";<@UP1=97Y$FC(V./MQCP!+6)K#T.;HC\EM]/;SsY`V<][$K``j6#/p,^2T+?+g;+[PVk9BF9d21%7q/G7s+OSCO[]]%i=X%NmDI9k\1JVML5C\rrR-X8Z-WPb]_H1rF:nYBR'T.(o3\#h[U#l=+nmZ#<X?&N,lkPf_3AA)lq2pAB\-B$?(V*5<e_;uV0n1n%Dg4hB[a=QV/($#4Mg9dR-($IJ/KT<&kA8>^&Y9NHd>[S5<<c!+.aP]kQ;((;8pS=[D;Jg94]n%RpdDbB+ZSJCJV(t>[,=T`;'M5Z%0HCBc"'SmW<a`th#ZHX\9H>#KAn5"W$=LWM\Qi(lni/\!&LO<\H,=7XDkd(@@f.HEVF[Pe%45V=@8n,!A^CLuB8N!N+sH$a.g,Cp%<83Z\c9Ynf'$E8O*F_e.b(p$;FkqrE'n2,:7mhe7ee[)iU+$a=#q*hUkF&*\n-\#-S&uPB1[%J@s-a_3":;^g4aZ6N6s*HnC4g#:%&b6!;=4>B^f97I3[)*]6e_d/c@H91p$DTVsWYPVFg@>h\#5'aETg]b8R5]G\k1\0s=%.nnBLbE<etRPNR/7;bTK,H98cpjZ#)a-)%5^+;XS'fK5_I\l<b^`AC5ZV6p?pC+/79@^85]GWk!_K5*L+!^ER1Vdi=]O[eOW4G3:;M1;Ad$7#JZr`fAh;^COu9BPEU05f1kLX:%@0r$O[^QC087s_^kSWWf[t+n0TPhpY<diU7!FP:r[=."a7KUg?poNVcn<k?5NPg`3/Zb6h.>K>8=([;kN!bAAQZki(,SC9bA0?4D%8j=Z0.(qo35@]78pd1j3Lb_<;1E=7SRIh[DG7E"X9@7^7a]47A0Y7m)>K]fpAW&Y#d_0.fhS=hq9-l_ir*lMI$2;Y"/emf4RUD;a%`AA]C@GN-L6nHp1o,R4QR@r5M9WQ?1fnb@_o8t(Ii\=WCj-tmV(Glp>3?`YC[)1f=M+m.4ZLDahk&D[&mObE!#W,l3a'd/_b\W<6%8QI`eZE_DG'bgq.X"ut*k$Kt2'%R%$%I$@O*$[e4R^)t=[X),aVKtX'%%&Rho&s'\Ko76KQ6"4,att/;d[6gT"<2^?.KPXKH%8`L%#Jan\mKhi_+`buZC_B4X3i7Q13]>$2PSb6D5I@)'.h?8'TBS5D5u_>O"UcL(0#CXlIS38@J<petZ5O_r$-I5rjs_36KtThB#NkNE%M?_DF"#QCC.)Z01F6fR%S;G;k,&[nh'mNSMS[r2g.ssb0(WtC%/?*h"Lt?@AX+7D_*!OqTie8*#b4Lt#8M-&Zpo;o8-or5Fn9$b\%@,H+)&Kd)8pqiiM=PWG/)G16D5][)?'9hmjX^"ZH'qr0DiT=4e@-M?PA(&n$#@kTUJaZnW#f+an:*^Z'fhlDGr(7`6I;1g<B&l!^%A0DfsfSt39=H)3P6\8,L";q]@p(7j54L/BQ`,#Jr`Y:8jCc[2nkf>#s5bm_6kj.H^Db]U=HoU9k^clA?FFEBd5s]$!2:]&?UAtqd%$..B@%O8+r!'IX#"2Y*NRu*O?irt\rjG4Pd):0CU`UL*8X:32pgDBCqKK+>NO[FaOMQUfj^7s4!!iFleb,SSj1*T+*LdkA$4u97^%N!HA/Vf04GR3Q&DCGigur,je:O@@Ue_F^(3S<fOB!9_B'4E+''Z%q=WXY8sGO\YNe!&St$-LRt(K7Xo9WsK*!d_;S7-OS9=nFd;a%P1+Lg$tGY9R4'>.i\h?*Z!*jmOD'_aG6)3sNI?C<aJr?IeU'aX]"?@q,!cpB#:lpYeRia.]\BXV!M8F7FC]s2_'<ZlZ!i(38(*@;%6,R$b_UF4L#+G^R2MK#4+t?ni#l6g7HBt[H6ZnFj'/GORi)%B6SHpI>l2kGD_bE9W#tU/0_]BtGl-"aq,niGI,1[(RNC]X.:5<cD%lpFfAdZfm4nJ(%+"]6pHK9?<K:75oZ&t-0dbh,>Pd;'@.b[%\i4\mY=/:kT5):+'#GjK)X&Ime,@0$A6<N1t?joZ1[7shY/#mm@#%)(6Xh7r&M`!Ch7,\WAD7f\pqFI>Z/I@)PloU]:f(?:Ou5pn-\4148La/Kr3[Y:m\anb't$>:n`c.5YBL/uAr^8?.2K_04<"$0hE2%%X'?;+dX)d)F.1W"YcC.6TCBa"aI_t'o<g-=QgUcOfh<NWR`%'k<sS\6MB(>V\<h&Fbm9=+%Oa,K=mQc#UpM36=b7(,^+7Ep;oLg%6*[6/$1p3'heQC2[Q9KT_RZN#bE6Su/i.(DF;"qD;2ObmHqC+^+P#[+)q`jh$/(Fkg'\Oh`C466;6Nq*@/nd85d"^$"d"`mSLJK_%>.t_`Q+%NmI\Tu&BJ7jH,ar6[OAl62T_.Ifr8dUFrLa=&Fbu`Hq]dEDoc.;rc</q;n,'&+%!j4cpf1$VS`Y0oT'*Jh+oqf.%)?Du%()P"MW?DAoL?NeI!%b0NMOa?me_dE%3jPk#d_oh#5o5>@4X`F^2-WQJ]K-7p_Dm@>,E,EZ&B77G[<LRgdQU1:2OUtSNabt%/C]W7%#lrJ0fb`l1!Qam?`FN(^7t[ZN=?o7#rb"QeXGUsWOl6L16iSB`/rf=^'`grI]Z1Gi)ek0>:3L=gj-QqF4)p+9L0eBh+H-OD8cq`-%Mntd-Baq!_.G"*J@'hh"d]DGe7!Ro[m;!VkI2X9S;i'^*3Np$\WO7aK9c?&&k,oVj/0fCSG*KEl;P7h![$tO"=-]`IZ,#WuJ-,,r%*u7[IX9t6uM=o-5\RiK=r6!@=P)ghM+*s\f%aQVA6X7Y6i*DHMKj["d+8A6[f3,qU3'j+]=kpip5S&f8%:6%LO;5K^7\r!&O\:W%%-r_Kr*p9dT$+;]--tI)Rd\Dsrj+dTsYoY)[`HW^C8V'T_7ZX#kQ&&L_rDkQf;&i2dU!6[s$50)$f9IlbWPV?O<&>4NY%7)QE$,[!%*"nl#:+6^_1ra'&/i#.""s]_T,XR/;).%i(Ker1s*m+[=3i'.ZJ;q=3)itaPLI>_p&eZplOFIU/hD,s[_.XNDe6C:BVb$u\8u(n$%)EV%-TO,/YBZ.9?StAiQ%iM/H8d'uE2p]fDh9$TqOD'X]HQB:*"*4L#VS%@hn&F?=8AU,!2^'rn6ioVi\6$U"JOH"Mo8o*,"L#Y:%">0;"7!=M9:g&&`nnA.\%KK`I;o-Mi7A,8A%h6)fN\i%F5De't.paJ4!t.d8_629!@'_J_g5[O9W1iH&<M=KJ7msCD!c*T)W-:d/%84s9<IIt[`YtlGng&QunD@G<6c9(FtbfM+.[BBIrnnNuiM&iZ5*KUZ:c;D:^=@=r?ZGic9Z(\fQ+i<;/n`()j0[^KJW%UL6OCnHa%a5DOlc%n`H:;=9s%>2AMl(ht!+IAJ0$c9D-iXq#UV4$M.ka4FO2QoG,dh0YMo>ANibfg_(&-m^5_bSD2;d]&<TeaZaT;DfNk9gH<%]Yg!N,/`&B(Q]8loSiQZ-<8/]NENZB8k(/?#=f(6]_''-a;Mk3cr)^IdUu4me##kI0-MW/S^V6a4!r?/Q&QD5:.EW-ZQ'bU(,b?%%//CU5<//5L-h'P9:FiXb.2`fMd8nMV-<Q*:$0HbNnH>_O6,Ga$T<2?oYOnmu'@!@3*c@g+W6+gZ#BB\\P>g3!2H4<WPb+O%#Utp]%H\P.[XqJCU:SgEOe=p-(&#@mZ<:dYaknX7A9JVK;G!Np!jb58E_@0fT'T%H]j!$rla]c!N8bOQ,_,r6*ig`)LXKnG<nf4N]!BruQ%c5-H=]$*sP<k+-2V1pq.X4F&fCPd@-g(-L(Si%"r&QsL?H9ppA%0[>!jH))WNL+4Y02g&@ME9NGk\J8,o#V3/i;*L(V@nGPB3$5J%hf95H3A'm&_6bNI<p1ge:=+n[(lN!jTUU$=MD;:j(#?tTKkrTUl#:mYT*lgK_b.;C.sQ5V>aX)4+=oE&Kn,tbf(HB$'I)G%)=:GK%!^-+WBhd6@VIioj<sRY>OWdS&YW.d'6a7uR<PZpp>LZ!h9VqfLK-"LD(/hYD[(+`#EiA<.>10KYB:1E7XuTY]3NupU/j^j.Ft#XQ%P*+:j=(:Ycf^#U>87pok(?>td1fcH$Q]=t*rop0DOL'cT^7#8Jeq7ES\XF('4-"]?o1bSCN$S`__VB\am5ue'I">m?-=Fc[?f!p-%/e!AtVr/SA8jotpI"28+)@g?**.l<I)F/iZCdZ(^oF<<3e6u:5PQBk<Z'I3X<+MT:Wpk+<#uiX0Y2dKP82p^S?9K@B4^Wf6RC;e(%RW':58W3sZau"t5m;qEa-:HVB8n$E(>W%=K-Csa39EI#O<)'ug<Qs/8Q!aoN]iNDB@TF8%\cQ7nC**T+RJlGP75[0BbCn^PNObK\%apN^XJl[",ap$ESc?X/l2>qQ8!c4MAeRW_'5=I,\k7m:`f2<Vj'!Yho2J/7dom9(CWJ?EB=EDl+`S?5J?Mh**=q?LV-)U_i.i:bj%dr.;5CL?Ief;oQ@cg&o^L$C0e!ihIch(jBGOn-R5DSdJl5L#M<aGMdTEH3?Q`.2a)`%)%cB$[R#P'M0R.Mhr811`^[,fXeK62iq7%1P?il=[`d)cPhSX:E0n:4qebF(k_cie8^7o#Ro>$0aX=J0GjPt/:'foO]ER<"50"Z=,a.'+B:o4+^4N#B:^"5:FhlcKN3]9>ah$Z%XSrf;btK')aOo+;aHS$E[9:t6ktL<+'ekV"a`^uF;[io/5hYX5"RA3$"M9ZCJd-'8V3d.%-h`0$dM7Lg2Hj#<"<&]4m`Do/iA[3$%KEV]SP<`1#^*KHfOL^j^G%#%u3X4%C$#^+:rb/Mt_*(R)KYc9?@2ha81^VuK8:2?9V(#i,LBk]<"7RJ]bUurD<gedZBc=V9)n[@[%Sa$!U\6#qb?3lUG@kVV"'G</5oU'A\/NBQc>nt@cCG9O/]Gk*iAeSq5nQ$ln9-fli0(Wto(!u)CoDO$mm7R$TFm:h'V6SEUJ\q;>%7#b/>Dp`Ag4VBJ=Q6ej9&7DY,TX?=A]_6GOS%bl%"!\IEP7\S^jCi/I2@\k9U=mPb=s*8gbYI:e_pea^JY836=V;;t#Piois%_pT%+9j/;kef0(:^G;KJ$^6mm\McdnNA-YB>drH'8Qg%Ej(qJK?up43?XVmpPjNX^m]gg8j=%.DGZbFH\;?dFWMdS'7/:KGX,:#'lLR:%MIGAg7RuLU#t?*=?C!>;mZ(r0]m'b)E$Z]oFF=]qA)R%N.mIZ>5)o\mi/JegcP8(*?[_tIYFdq,p%@kJGCTJcofnQXkc`mVro#rP%ht8LKp[#M):Yn;4k%f7\m^_`SZ_&?=rdQO2l%;0uSd`Tf<$8HE$iZ=+5j'aSmt+Ql(!;>@k,)/EV'<cR[gA*PE9St=[/ff"#+&?n%Li2<KOACc77VNdd_-DYN/Z>.*"ea>_I0YZ5Q%d:^TJIIM1hZ4;%7gY4)FgE`eDLRZ*;fP%SqH$Rm0oo/Ajg-+hhf]7G#lV8=dF[n%+@-(78h(4s2+*BI,#\+WQ95:qbKj1^HnqcOjF6BB6lE@3,L?(j#3$A`On5mX:<6==S`[8(O?'\HM<F_@aNT=1#.psO&L<'-]jYN6%_tjA?o+`2[:8?$O4:s).>*aHm/C"Uf$"K\RVlAi7"8>]V'-GbqK17-YJt*G$%A7]<9u,75e6TtbJjP\cc--`m!t7b\S^1fReHAc^%Da]9uE?d3RSX.*(5[Z"IAjS&342"'GW0fGK@aPu_)"f5$#<4[cdEn"H7M(0E*KUj[ILuMb72Kl5R$S<X.5PFh4B-64'&Y-sH@XrU%hBGp+74AplUmgDrdh#r&$*pTUS\h0>%J#sTSjoK0<=;?G6#?Uk)jSke$$*9!OXCJBaYh<:B4I]WS,"3B$FJGgj:&#R@nl`tYq!W7%!.I3@<^I:c!.HY1,R.7G"Msj^?mMjMYNS!IZiroeq]8lJN%8pkY)#jsIo,=.mrr]=*Ps=J[#,!j5%,0Q$H&sHRW\1@QBPm:ZeG(&%kluH7/hk?KR).K<CEXkU)Z`7CR[Ea0e2#V7#"YtG&I2^<.WPNP<H#4NNl;%5W[#W'+bLMGM7Dt!5n,-S)Pp0Wk*Z[u=!R62Z%O)2%d:ob)QgdV3Fb\tTo+4(E0]fuE@^\i0M(S?d\5<\*Rn:\*<?or^I#$.6rNaj>ku[T"b\GEF>Ri>+=gN_/F@'/1L+`a`E$[V%UAWA"%%$AGKbDnFk<?3WVMNVM$hpf$i$'G_B"EYYIV#UqL+bYW*>0Vg4c5=k=kU&\$Orm^kZK)e25M1<n'LWH*g`se2)j7&<Bu)D-M2G=i%ir1K*$4Pcm^?R+4"M^(d,tT?1!'4(W['#d&.3t@a>V&TJYCoBgWk6qrU,YMJia^J#Gn.guj\$)jTI?WA%>XOYlC_&\NXV,?OgYqI%I"aEH7?HGZ\Og*5KJSa;K;qsC=B'h#)k[N(-'jre<LF_)eYJB!(^Elt*?YB\<=Z&6;43%Oa=q.`E9n6@:iF/%X_FWVM!>$s#?EZ"%$9dpUO@TUj?&FqS"+@V@PW5Um;Ud>g8_kh9S"Xi;^P#]H"HM@Fi%WgU!\"qd*t]oU?40Gobm_@MonJ,1`56'k+JZD+7E-1B6G7Fa%`WbW1XNlfaDJZH_pEFWT-)Vl+o0(5j+m?HUi&;4Djb==?G"b:o4u$kLdcibpfUAFGd#bl">5#C>%2-5I&CH$FXfNWN>02?Fll:Ag%!/-bfJP:5,pHb2UpfI5IdHf>'`cr5*8^p+9in7bQ1U$k@]BGU'bis_WrVJ<h-mT'5Zlg@!/$ZE5!I#0qau;We$3Fs),hg*N#tt^Z%HpnrKCg;M;ZFk1j_am1A+A,q%?3JdeMB4Dh*WcP@pe&L*k\SdjJQ:(FUFGO"M_c9--!5le3c>.aNTbo8(^)Naa;cgN<_EJ#5n"7?%/#hZW"Y<1J+i^O_&'2PB-g%/#$LtN(1^:`*5g'#3Pu]]0NB+6<fqY./?mU1H;Vbo3HaRN,fE./U`h3u/"%666@>[X7o5n<%!XB:H%0r.Zs.f$/s]l=p)hIGg:;irrb#^[bi"J.9$U*uZQ"&f[XMS`E7M/Q[$W4eu7..gM)V%&=9R^q?YCDqf3`G*`'-_$p5%qSb88?=t[%E_;\+M51Pd!dR`I$T=^M")<s\JVPu`>q@Nh>6$O4'FK,/"Z9#QdK,2d/2E54WFuFd452ctRg7%DCgqpI@"1\[6r!S)-60)mW/$Z"%4hQl4[QOI(b[$3UH/J]WTQk1J?M.,J1damea&WZ,OH9[F"=5H9]2e*VeG+iWomrtf&sfk'=&ppWNKu7A3AUoq9TNj9X,*t/V@cFh%2MfU&5bOELdB"Q>b/789=o"/PnHb-u:5Snm_#-uTF6%HgS4QIX(_d!=T.:mGLLiZ4(*TCj_NOuCN+rj%"#'dG$BY@DHU7mJ7_;e(%Nu[36XZJr6d6s#o+O9M.$29>(C"4u)]!*KZi]/PaG"In1!'W(=(2tadPgt_9RUf_u]gEq6>_["C/03_nQmfo\\^`N@2<k>jf,</e%Y[GA)U"trm.[+9qF*'qn+<O$5)l>.&Wrd#V20k?)([tYFCh^HN!-nk4HIW<IA]lVY_ama=ZCNfM:;l.eWk90T6LH!J1/-VmB%\r%%[s1X5,X.3PO<GaYW3f%/9SY`G0=*-R=OIb2pnts!5]o(?$RGQoGni!mc'+Fq16eQ[LQaS@I*Gde(SW92N5t</5[)$LJ]k7oS.57s%;qgodM*FgZ`Xc7;V2^Et-s],L'omL8J]jEYdn1&^'EhG?5iMR:N.e23P6O`eYbFRTUu\HV%9B,VMg1F$Ykh`bclRjY/F3S(fIV?B%$,chN&X<>7;"Y6C')al2%[k':69.Z*Hl3JC.2jhsr@t"f_?gdZXd8&eX@rU)B\;;cP*(FWl!WMo6dj=ASK&uGTk4XbZ^r'&X-Qcq%dM"TO7X:Mgaor,7=1*:tM[J%^i"%D/o`6MbBNWa:]hC.1N%Ga25Ju5,<!lY,TN?FD$cr@e"ESjp5S+:)\0bEMpa+Y$'mtXmpfP6[%T8ZhWfr:dKL4'*3BaJ?6;&O3o@$Zc6h%_e\iCpQn!U@ii7>[BTBZ]6*dt(n(d_R6%X[nOOf_(hL4IcHC!3<nT$o!oR\.8-ZC6>%K%BBs7^8q8#jDH51nMm:@RD&Km;HP6_8MUp3i-43DLRV"JI?F;5M("nlK1WeCn1)rfd[s!cni$mNO)X'AuMd/)iO\r6bC9biPFK@<1%W)9i`hcFZ5W(jQq6m+ptF-`uFUA)lk.P.L^O9B<[&]Mb8*gs98J]Ua,!h2r.#:X`kaeaN02Pc3Z%ka:o<R%?bEe'*Bhb!/WA`5E6%JH3`F3Hs$JaiVK0XK*9H)bYr3Je\YK=5*8gU2aQTnUSVQ,ZRc1+<aX\L'D=9]Lm7"L-SURZ!(r&W7p5G4fG$/9?%<+>E(=-M'cYf%&0__:,17=P>-3b)SO6@)XdY-.-R`S_i]9s`68Bm(ch&ER/W)@sG@E@A.X=r!/)?>@?FR+1%#$IA5's]^86ZELTb3M_CM/F$)cIoU%9[&'p[%_W(kq/>0:Z)b"Mc&.Sr+\YdPd6sRP\Q.V_I59A1U\\W9NZD-3D(6(eTr1m*i(R/FJ0Ai!XL'Us(DBRq1'W"#q8e8=lBP^%$k[0)Hn=TaIPM8gKI%fm6(8Z'Z4I"RA;qCgb(>EFXe<;mL^(.$1"-Fq;Y:&^aNF$>T7jJ\TU[[+R?AFu9"74579)?AXKS`V'6&/g%b6_^FDGG`$WTrkFAZhIXK"_?upfD&I&I1Z^l!-Ur:Dr/lNWWaJS]eJ:^'6RI"f.,Vgrq:]7=Z.f7?BKjKPI2MlUi(rP1,Sb>+Lfe%aY8N%m;\e7;_;kNY?D"GFLn+b`%2tP)?:@^=%S@[FU^b%!2E)`lDPpHTbc-(0j+X60blW"UuV@%XDG`j\3J/"BkCGjQdl9d,hQpp%'$r])KjH9kPpd@T!J2LHr?I0%OggN[XP(B^i$%+&bgI$/-d;aH]3"^9e(c8R/ra,"Cr)QO!M.@/[&Rj85MCCO+1a?tf9-'K/6KA2%<>t7W:,n_hSIM/`f*p1s+`btISZN/Dl;;U^GUK\?o4fY"Xd5guSC-hn>qcT47SctjZc0J7q@!"<B",*OXO.!E&&Y\/^&m:R-#7WA%9;239U=:th7V^"^J8(7C2AutE^+t'r7]3S"Cb,A_(>$DZA\'h%Z/QK[%H%CM)KM7UjTglZJog!b!>5^2]rW]Wi<W")(:s`.Ub$Db%Gm6p6_T;!SOnT@JWtAFf3U5.u8fim?09.n,^G7_e@uMrGf5m$skSQ8t(MZ(d3@.+i;nlpU4)D-Ud7_\bUhX_c?f[\bJrk<FRt7F_%m3&8Wp*ld_'Ag\"DmoM[N`Of*)'e.p8OM.^I:!D))qdHkm%l\_8pXsuD!_ABU"04Qm`<'rU00A+_Z<+*J4b_o'd&bd>fh(d;H1&!%>Rte,r2^/k_Y3S3-K+_-$BcG5,U5,JM-13s!-40N!JhcF*6GWfF<qi(&[5-jg&n+74j5`\L395&&!)\O4H,Q*/7cQE)jt[O,R.hP%-N`CsRlNGhYt-)R"03>mSh0P#;1IF"J0cbINamAMHD(a^DE@iVXe2NT3g8Qt`WhYn'.Jcjop5i4<MLMc"H)(HZ9HnGXb@8K6T:F,%6@btR<Ds!QKrs'bYo/gIhct_dTJ3eeq.G<!2M/6VO;qJoCc*gcfS\ao"dN;4H<s:0OO;\u,HiC@A"SCp(b:IG3I+HHR9$@o9AGd5%Z*C%a[qTZ\J2IE%$r\k\/G`Ao%[bmB$4a4Rblmj&NCbLJY!.u7(T#JDC,'Y?g#f*>G0+Qsf^u$:cn;;38NZHQl90)P_K9;gpFF^5%NS4c]D;]XA-b3BS?F;#cJa5sDf8eXMKIlJ]]nB'<X,5C)"/n(I".9bCJa2N<'M)%(i<M_T)XMuT9:""n9G5BP%[`^oBEbHMAf(r&%!C7<W,X(YX5C`)3[%,-O&M?N(]ej:Q-CpII)pG@pF)YUrVp1p*$cNr\H[&HC"6L!8;gPLe"k47[KHEh%Pq7*X0;Y`31X\>/8Y%MX%[2S=:D51.4k!O*#U$e'kOuS(m^DOJ^:([7So(=Y#nk88ok>2%BJ<8JpAs/2-2RM^:dVsq?(E&>lrl^J_M+=#BZREl]1t'>KD?l(V%A!eS08YcAGOohAA8:q##2G*(nDUnC(9HfDg[B=5=L9:qkKft&F1?(/`D*f#]kHaVJ,EY]u`'b[V1AaK!qG&-GDS4B_ShO?q^Td5s%j'nH5K.ks-4EGk\kj^!j/K4(]/@g@Cd>6Egfpg*Xn_M-d3`e/Z(D%26;+3G=NMR)]BGa@tW8Jl9Y%[;AB;0'!;ZYI!kD9D#^ga=3%-9>Ab6YD6Nbqa,t8MhGM0U9p'dE(i^/ObHZcqFFNOMMd.\U@3CH\,ot:Fo[*IV>U9,&Os@6SkJo\ii25OY2fn)ETdS0!S^nEbO#o%a#u;%i>,((,DSag%el1?O[D3JAO9VHaJ$Fea.1:<%LnjN`gh86csRA,Gt7%PL3dBudS()ZIkk.F1flU'1koo3`6d-cNJ`%VKgoY`%(9t[_/U`]I3B'iL#,L3*cCE7#'kk[49'A`bi%c.C8]@1ISe/IJN@5<(BQ+LaZlOP@BH"0rcZINISVR^Lc3=aG-JPb;@tOu.;fX1&%Cs^t:bL_R\)QZQ<Is6"]go:a5hE_CkI_^7lkb'<F6jKhlhg(`MdRn6LQ8(ODIkTA'9mk;Y=!/mQ3/]=ud;=Q`Rq-,a<[hhSN"VSg%U)2H2Th5"^-[A2g%B7q#G"u^Ol6GRY32&nP"iC6Z-T$rn(6E]7BX0I7_k*80>'CCUA`JI+;S]Tj:'s^]->^ISP=!_"A1hsOL$#gF%9MY&PcnK.$_)?@$P;SYOo:6P`HpctQn"e<lkWURS.5\8)AZI^aBF<C/7L@>qZ<19l;aLRj*N@Hq-,O-_aI;"+68R/LgKntsB]_6o%a.(?\N@50EZTCoqa"f<W;*mXC=`BoER]N]q4-#l\%;QQDSd$JtefgmXSgg?>YCKV^:dPhR@hu[R65)O5<^AksTqV+pE&JQ,*I$%a%k3JPa^sg@h[Guq[HD4]l3M@VD;Y86@%>bj;c^`@BgF*)7n!q`1d]egF`sI`mN1(O%#u/Q.7\ktV>15n6N6n.1W\k5TBMUCt\0lqV%6OgN*l;B0AN(+:DBImUC=`7q>B[k?UP.l'*BM8At#bb7-&BeI7<pAm.7d05GSIo%t8`4f%K[t>lZtt]Jg\Z3oBDp%Gn8pM,O@BUn%0rK4BKP&DJPFtYVc%m<1,W[)*koGuBo0L"DabMo!Zr[T#\+)`dj(.8sNXm''Q3,F(%iV+.7X@*;1sW)U^iALhp+-<HIcH%bXr:,A%1AIM6/?0-+'-B&CWUWV#+#L\&eY4=r=Bt(&KJOc.S3NiZmY&rK.'HGpKQ\UDBR*AZ9a7n<e:Alu-LE?e2J,9h\n:$al%ID5WF[<-%hQE@TU$5?-iO'=cPJTk7SMWZHZBp]%@jZjue*Baj7L77l^0pT;K+OJu3\#E8&OJS-`g=+G6A%D>Lp\TsBWMrkUt?!Id?@=H9d`8@%82YqP$))Vc)*Eli)@M\5DJk-S=N&cMkb+32dAK88NT%Zhn!UmgktJE&FO9B`XS:,c`brgQ*AeXWR.B%sTX"@Y^n0e`60Y<R@&JW(%s(&*GUP!a*/V@?^l(BPNO5.gLlY6XebQSHb)Hfb)$6#RKc"/Rp1MI<ZW"['haVs^94OD%tf0H6bc;!O^-5L8)WK7>k2"iGUDGWU]%T%lFa5\E?:nG8(DRNN+3<K7"rUBdca48NTC/sp_6fq0;,&YPgUp1H9D=k/N1R9@#S5,Y_O1Yl@TaX?dp8-@\?cMl$uIGIK9fUj>7%]m45`kK5Bn_B=>_jZkm)cM^G3`4.0"q/a]54*BuSe>(fiqtYf4rV;Y/*(uHchbub')jSco-[I,c'A^f*;O#OJk#04s:bJcn\Z?G'%[DpCk(R@441[_GN[W\*PI0X:C%gi(#TZhU]ZCX0RpST--YOLHhs86qj5+_Hcq.NrF1snM)HJnd%7f,kK4a8EHpDI!J`o'8^bYkR&%oU1%sZ8//\5!)g=L:1`CAlM2X,<"+cJ.B#CY-C0sL'6VQ44\&5_5V=JcOa3H_F47E/L`tefP-s$n8==O]=nZs9_s]lAP$:-I3sZF%WHQ\io.?)71t+Xp5Qs>uVgYH$lBElh[*L9t&Z]WTC`oSUQ`m_ZZW[Oh5\GKlm,Q6KoU-tU,S'7<ca8.D#P!fGR8f)d#<M**_faHf%Sb/<UCgd@m7/G+JJXMbQ8Y8R>b,'P6I:f&W^9r#GF7#n(eN'6fp#he6q@CkaDG<eT\8sitj,7'2Sb&8VGRW3JSBjV#X/d3&1Nur3%a\CrGL.%H2B?k-Gp\N=SV7kOD/=lCcYmq,`A`eC&1EGs%j*W0rX`W81k;0/%Qlag=T;b;El.7ne@FqKf2fh/mU2[=!:AO7t<si>T%VL/S?_.9!#q97I_BP+#eL(3'`S+2@,REH_I%"n0)+k<!+'V4h5&lKjtPg>AS['=G3c]E+HbsD/a$SspBRIZbA,b\eII&;&'o!(sc%lq"_Pp5I>m7SO$MN6gQqA?jP+prqe>g;TWQR>F0KBq=d^P1;,^_>*B:^,MVQR4gfMX><&h.9Eo50g;r+KNP<15'-bs1_Do5mU0#B%T(&/,Km]Q`4eqCFDHU[qcY0/hLZMojAdK>nhq=UklAfEASaG)ZcTp?l4]=mogY&/IiJp'lm?nT-VpB2*FDSV/'++!/ZA/aB1YX_Q%Pu&j>B/UGiMba"?2FMW5H?D;+I9A/JN:hRuGJ)\oSp=)D@!ed8;b.d>Bq.kZjQ94.m?tnP*-3pj1RS9ci7Q_SiMYpX".efs,GF1)%Lt11M3KB?kf(bi)je[<b:41A+gFX*!Zg/SPKCN*T9lo#E5!u?>13LTLL</TlG/e1im)ia";a06$2$9UP53&\ca4ZmOREeF#%:tdM%OAnuF:AKiq=gH4=q2DLY8uPM\9JqX"0IWPN-LB``nsTC(kDet6+Zd+&4]D6]L0Y>(B+/\?b7D="-;uY*G34-`8qh0sh_T7%P3mJ-%BBGIjb=Wb%cNm/nlUL&aAl)%iJL8*D_BbE=c:7Sf/")>S#bN!F+bVih51>Zo@VB>#B!EP2YKlsF`J(a!pu(+NeLK66k;2_faPGE-%T4'r4KAXoKbQnXA>rq.)J1]SoX`HZnU-*BNk;/pXRHg<gG_#1g4`NY!DX0Bj1Td"CGI5dZk;+2O.q7Xg`^&%-\T9s0B?@D>31h)I%+PXu]q2B<eZn.d>)?$=7Oa#)`AoRFq;.i7,S!L]a4sRn!)iP<QB?d!iER4H^RtfOOo\$KmZKF?9XEL6([5!k/du',>Co#C;O_(tU%Q)-;8M7\2]UsBB.`NYIg1Du3FGp[rO``Y%?PednTE4!VGl*I;(@+g]qoU3r8/9j\m*(*rr@?<["B0bgDoGPnRq=U<N)7D?q5MqSe%"8jW$[#O^GmDcV8dV&86NVf.9).Bh:><*,?B-]J&B\>qK_)Nn0EB+HUB@\6&<G/J_3[WmSSk5PW_rTEm(o5JK\CFjm3pAFNU%II\%kqf?<['&7fT338T9nYRp1Ys9*WV8gXN-D+8eleV"['et@Apq\Geh63gcRJrbdoi;gV+N)cB0bn)+CM:sBLLmk*N[R*Igd:\1D6l_%E^**e+YbWc,(2rXlUD;RoU1R"9&4<ZcT$^Rrlk1s4RPnoo?R0U8!^eb4sPNLj+!qR`WrJ#dj^n$(KH:G31iL+Wf96,5*L\Op0&hl%-3cQ?>Nqs0(p]%UFOFfJKUj+:71H3Z?5tceZhfN]D62'BW+['*Ys(Ol9"5o-1KT4C7uC?3OYS-#_>=WA/(8+eB1?@7e90V\IQ<@E%cM[UU>CS"WnPRNV9HEbR8+b+)m$N[M\dN"selLiQB#a`WPo"70O>3#bS\ZL^,^s?oSSiR_`6V,O<^Un:I`AH@4i`N*cci;c<pDtP%*o#"]2U'Ck>\TWmAP>sE,d/tMOj),^^[cHSjI[mm1M^i@4Nu$qZit0pFQR3EDsi]HR%MK__C[$Fk%D')mF,prc\u%JqiB&#lni&o%m?sRieQo+8o/!6NMi\/71ZgP$_KX5M\C0!e2s+aFR-Qgi5P#23E<l(kT"p$#_>LAc!+=-BR@i`iU"XiI5;O&b."!^5_hB_b.%NFk%-G41NXENT93q,i(m)76>fsRqpib(g())6r>i;i2Xb+8=\EG&Ut==<*@8=;7pLn>!_ks!T1nM=LrO\iG!5<J98T$p1,N42X#d$aYH%=B^]cL,%\#84Xs[o0+Cd%=4j:q[@^6LPb_maW,*PZT]UOcuRi2T95D\2#0oCgh^2p*To6*\K'Tuq$b(XlGiT-<%]B0A0u\YIR7Rd%n3+,S]_[WU\_/#541=<agE$d/B4)KiQHs*fN]I!iDe.1U87/kmp?]<R1?j?;Z=bk`0o;fL4i:MjV:psq\StOENTqDC8+]tGdkda4%=P@D^B6_7'6T(TNP`q<?ZL^222%)O;4.9fL4b^@CQKLqtY><-QgTZuYa70SqHJKF0\Nqp5?&[\Zq+*'bRe`LI:`e?,mu0_nSSr94%4&\c*PKrV*M,I2pIV27a%GUD7A%_*h6_3*PIUS_uS\[-K;T,!Y\X3(#DJ.I]3N0#Sm0kp,mWkA.*mqad][#'9C*(%5aKfQ'cg"2q%_pgSBB=r7OdGH'h-?,heOV=]MV9H1u;J->ecO<]a88(rg8=bm<>=7.)S`-CKfCkHSbpe<((nFN*M^%OSk_uTLAbhkkS?^_d]!47?%8:YN5cK1!j9H?gjREE(./MO,nagH`Bg6nHC`UP+r7*aG<&8W\G`u.g@`)rSM)%%]HcYR'17Pp:Pk+0Io&QBCP:+X\PncK)S1F2$u%)_B:Y,/[g@d5XKc8:L%f6diU^Sh%ZH^'_0&:-?h#!EbQCBUkbS@6i*`cM4>'Smp`!B&E[br11]-Z\\;pc4'CN/#"2W&)JF:We82,%YWLD(Nl7@44)k$^i_8"<'Yfbi'4aTNjc77sEInqE3J5;=&2eLbG:_$ASlhgD=IcXTM.[Y`(2#28FE_p[c8[I:T/IHt9!G2Z=I^P2%:)u1:OKcHEn2SnSBVYWrGasWQ,,!e<S7+9/kWO0\@9G9J^#O+0j\p6QGas>EPLagE3($$ZH,nt#J`&iS9`,ko9W)kW+'r++T#[8L%!,u`YOY\SZA>In2aI0J;8/mUG5@F.qj)LqnQ&XIBn2LN/-4Tb.EFpOt87gh$G%uke4c_B,mu_fU31:R]#6RfcEMa<Y!,9L6m(/rT%GaoMKA9/]NZ^qiZT#[6j4JfEEa4YGcpJs3oB;#&O6CiCl)8jN7M_j(PUk"*:R6<r+Dru$d)GPq5H(=+[P43SUEQ3cs5IT$#3s$<a%D)BQ-E--5pBq,LMdQTB(B*`7ZoNR"YU4kCI1sSd-6!/Q^35\YGeT7I)VYNu#c=i^K!uPmgqVmN>+g#TWj36M(/i'!;R42;rjCTHG%G^RXgh0GOL'b](94O2(U@3sf``u-:`DUQmWS.0%')ile;8H#?@a-j=VJ?/s91Qab1J2SH]]GDad*KN"\G(sE1O#+N,[XjfjS0>!?%64=oJf/`L/Og?rV9m\'sJ3ohFQ^u3c0Y'u):ZP3N*.ZifEe]5ZR6fmBjIBQFNl[W5)tW2ROY\6h3b/d^1D]*ZUJ4/%XL`AeD+r4^%l17MWEi*Kp!C&A#PPg&;??@N,6r\<,_Tq5d-l<DgRECrF=TZ7,b*e\OP0.d=Ei/[@BeVPGnbKncLg0O5C4mUk1Qu_`"Eu>.9Q`gr%#+%,EVO\*A/n`%<c<<s$DS0GJW15"Rei#<EF+Q/u\MH6%mC>!_e!QXI]&iD!,!N#q$[PRsnn0:^VX+>k)beO.1#m*79[;^/?-O-*%9[9)k(YZmi9ZN?$Dfd==30_"`d*1PZ)i?MQS]P"Z^clU/cLbj%pF;SuS7s7A.V1:o1RDC<)l%G&pmIb\.K:XEF34'*"c:@L:qXFr%iC>67arI/(JL,-*+R>WMFci=$r'9&'?'H'3]+Cfm4,2`jE`c`D&6<"Lkpi(nH6/m1EqX5o/2"^F=h>"c'&2E-jq'(c9OeQg$R1BI%&3T._Nf\;3"#D!6D?H%^&[;D0*E-Q;Z^kJH=gKDsA$9Y'T`O7-]'jdk!_.JWimHLUgIZ28Z*&-I+s:,AQNna0;*hH-#uW4#fBZs8%qBRs&iB@r^[IP#DoAC@>"aain)_`=q`ReqhQ`>DR3+WGL`&=T/(4)hO0fEgH7Xkr+&%EJ/XbCkq/9='i)uFp68tS%kbfJuL2l.+?%MY"n3af9'Q"i;O)Cpo<?X/h@45oN>)Vs(#carQR7ddMiW$nSGbL;QOa!$%f+N0LA4"ai+urC8qFS"uJH%>iNh,It76c4A#tZtW?1%PWKImm?f0/^B3XMZW<ZMSq(K$pa]G,B0qc0kL`2=&ksuLoua41Eg=^:L."[1+Go7M"rL@f#S8K4\c?NC)''X?kJ0q,e?]On(I#_t%,*LHU,$9)ANb!&4&R1dE=k9$,I1LR76bOSbd_WU1^h/NF#=r6ZZb[;__l+?GI&U&E<+fDU70G^)i/+nJ]&,%+#"j'r]l]oM+V%`-%D[7E:?_b4"1`ZXBq,o<OZ=N%o"D6XQot^q8l?,\/qWO>7fa$q:n!)atA3M/?osH.T](*d*WoPXp8]CI-3?aJ2LuFA@lQ3pE3]9Sr%]SG&U2FFkS)&/bU4>u[`L/OD0Sr1Fdr<_%Ok0HBr2]2\&X9W;$pS^kQ^+i4e:b@_0TR]-GDNP(?.MT=jmGjBe5h0)C(>TOYM]H,r%-"-AJH)DLd[">H-06RJj-VJ-pJW\SR:A"WMW"mMjBH5TsOT_D\>8,G&K2aAD6/30QZr*I6O%buP"-lJj<dl<<i,pNG?P852G<nQ%%Db*4T3E_2jGbqmr,)cD^XW"]j+,g(pjV9/C#;-(\BJC))'h[Cc(!ZCo8OOem!6QoTh()O"INB@d5Y/\jF0H.=6<7][MA[KmTif!K%<A#hG>n4FI0u4\ceZWHOdHSP=@2LU^]G^/d<d!Et1'&C7P.Y_k\BnNL@*@+rc-*f)!R\\fjHZO5"QaaPnff*66-F(2>h'pHKS)4,%rX)]_"1CHePIIJTV''0$1]lOlrK1+j#ug4>+Up1Xct40+kd?X8ITOd0`.H*O.1BUNXfNePD@Fk139R/:^8ZGt\DrlR<Q'm:60q:^%YGZOiZ+WE;Mk:DO&!Im`3Csak_&/c#r/"`\!leCP>NSmm/0W(C'/Qk%[r^7i(C(ZIp*aIu'[9)r94]eJ=6)FH/MXW`:,[^63?($`%fJ9%_/>s5lB,!A(h*u)qJsD_OmQ`oneHZmCbHU8K7V]oP>##IY7hC</8E3,k.*c8(%6%2O+Ik("cIopgcLX/]AoJPWJ;e^ZP3QK%%`3l'WBNpm033Of5(hP7sP9<FnHu)kPq&p&em2ROoXTPOmD@2.GW]0F#"Ni'M91$F=MbtIF_<FN^bdX^c,1>DbBW9'6eobi[;D"t7%%OKV0`NXdrmL4^`XgVXq,R#$?.\`lX*0N)kr64$+@7/QTl@..6j:">PG^3kK2Zt&/*@([gLf&0=q4oS`J=hGOR0i>,J,-L3,(rC\%c`g7m_7DnA!8HHu;hJ=0!):SJ'k2p[/O>i1k;aX;a@+hm2a_-^r25)C+"WV,>:5e`)HbCC+V-1@:>2-n`=ESjgG!RjaHJ%:PQs1/%mtQ<GEhlcGOs,/p)`8J.h"_U!(1U79g?,t#rfkPEQ4s")"%,p=l4.2XK!u5(_3,eZ",-2tg..C_5a(*fi?asL,%:0VN!*<nN]0Fh%Ao7D;^9>K]37OrtMZ]pZ*lV:$?2;/(Shj^_&fJQp*?sG%_QdJPOcf,f]?2SOOD\7dFX(4/A#`aZ@5CO*MeSN0W0_n`:,c&[IHs\g%#*$Kq]@@[>S2kAIXGs>lR0Lm+<3th#DTdhn*CE-%&&^TmEnQ>`/&7n#O0d2`5-ilDMF%XQrW@G<U)Ih#P-NBB6slUlk\T4l,WVQ!%$WL$S7NVV!0EH;tLaD+YeckF0n6VI`'**_0'=bY@V+\pcN_O>H@o8E!De8@3\S5ZaqD:p!C3[VJJ!f\.qX.-ML/oPLBI"hOTtq.u%*ek!=P8l5sRT,!ST3/5@O3W.aahB>^9NU'0&M8OtLFfLG2_UU*#g$fqFSnDl=p]uncTt911CA91k%RIIgF&*%JFJ=BnL@tgP7j8]%>ee>Y"d!a78)po&EGCD]7;Xk,bj0k6/FPX(NOo[(SLYEK@>:f1'`rMcn9DPi+="mL0ail,d6iQ,%HfGGFG;4g#$3fIo]P+gSuc2E%h1o!l"VM$e$?6u3HYJ+55G)MX<Ab4'U=#a$HP`>URN"J#ba:#<PEB]-.*5JoXd.7W9ilY!VD,,8G/pZI::.AEW8k+3#YbUZK:ltH%MR1b,7@o=7EYbo-Et9D4(TG(NF-iD=&&.RT[c?Bre;)oEA,1KRA$eN@L,@40D(SPO(edsK@J*K?2X'F^HEq-EM9+?;SX?g&Orb_Q%oci\/9=?-r9ff.C21]$K(nor*5j^Db"%B!g=3u-s>JV1eSe<rfD;YMJSIc?94du-0&35L&_r=7H%W6X?"hKBh;dAJ6\=kLe+s_b0%RVUSW6+fTE;j6d$i\d)7Ms8A0V8*-8qX%Pi>dY@tW"e)!U(r5rS@%,mVC8cBoSHBs6tuLH"QR`t/\7t*_!4kj$nYKXa=\m1-gn3+%Sk=WP!1Z';OsZTGAW=C#<Hlj;9jC%^FqGX:.$,U&"RqqC#ZfW=cB/tMrCV=+M\Lb%d2@u8UZmLJ,:G=`#3qkLLCtU]!SGRdd=H_%%%C/@)D1\!>.'g8f,DY$7iK]MTVFF81lu"BETsLkP2?OqY&CR.=egJ2&HVbql"::_5#ah:52)ojm\\Bu6=]gRB?2jlWHdh(;NpLNQ%$2>"n:Ids9-<*!<=`Jos<-M]!+#R:4[Q5B<"U#m(E+>P,:hogjDm$KlAlYCC0G5W=A@ZP9:SNTF*-Uai/SG2R8qi:q^uPNbl=PBq%g)[jnSiAj&e>PD(=eHUc5hZL<"r&M$.rY_?@*h5=lGt7>Q'VTl++:0P6^$X7W@[#A5RRlN81s0a6Q"tlEO.o.R?<TUl_prd@fSAl%Ss>f7CaM[JTP=c+6j@)$Eb]$9b9B_u5umtLNq*^6[8[Cl`ZRrISlSmROWkGC>!/fQ^r+tL:5$'Q1BjKOA_K?a-lIt+ZaMUPf_EfE%4L]Ut#H-T"roU090:_blgi1g&1m$[N@KapmH2Lbg5Qph%$Aig?H3J^KE%>,bY'I<7i8fQ8`JEuMflu:gM9)W,<15GAODE3W]IG*2%>_=>kJU/E&(8J9n8s=qTH+5K40L28[]:jd/9U3L0NC!Ff%*qA%OKCuCC!^$V=p(=_qLP<JcJma+E5/0!c8N&616t&S*VZr#aRDZ0%6=nG4%0DXgZqhqT-2WZue9:[O%+E(kNUh<JUW/rV)?FO@m\hC*r1L.M8WO!4-s#EENP-kD.UTpAgiY7?>kqi3%M&'$W:7QpnO7;X%-hm\PKJeS2^@nFE#m]F(`SPXbiRpP8DZI+2n&:i:;j0Q&<51K5Qr&S8?<NqL23aL"<uGaeR5tQNPn9=JI8GB'cQJt+is%]pY',em%C[f<YbtFqk(o03X>"gb6I+@Fq0Im1`#Y#t\0c!/bN["6t+V>I=-8><RWA+N?:9a##`jY$2"RrD,U[+?*YM+?-C+N1:iCa7b5.L)Q%1)R)-`u7^.Uku3ePSl_@:V^7*#j9U^PtfL=M_B`O9bg;G(em,c[tCmjK!ZVE-8cts&s-$,!H_Ei+;[O[@ZkV<9,*.7>if.3(LTq`%abmJ6]f@2;P7Cg(e;-u#-)Re%KW6M`R^=L'!QhgX1iS[`'sReeBr%`$-U<4mn<5"L7#r?nn'ViI4>`-oBuH.Q9["]hL*o8!6!8rT%&Ujj+mSqt(p'f]EW2Aoam6+F@1;WgPFH1%X@3#gD->>n^M0Y_8D01s=`plO0.NQ`1.i?Z#)$m\Y1VPRkilS:#&PmN?Lf9>\>bu3A%0JZGI$Y2c#h9q44gL-'E")'O2U'.V$.QjDId!(?L\L9fHgB05SlXgLF6UJHm/-3&T#.R(#K>E%=6qgu4Od/RqUW=Bo:8&rM&^V95%P/tQmr[m=e=H,_]-D7G<.AB[k5&eCa2'&uZV=or1QZ+=j.-^5]]GOB[,7-^,8H@&o-ZrTT$L<b`SQq+ZXo[-""r:G,abLB0);<!!%fL(ol/J']k#m)ad"2MV<,f<:>)o6c:OSUMPC6l:UPFWG9@\0tkC2"4FI@BE+'o`@eKI%1=Nu>n.'/7,DXb8\q9+(pM'0SJ[C$/&q%#esn.;K?Z%JZb)%`Zj$]#]_lhZZ$c_"Gk52j;K"6;Y'l[gSq@fa-^Ef9@ae4O6f5uVB\^Pl<hjWg*g'XX_8cE#uQGEM@.E,:*:d3%=n+-fURe3/Tf\Mb)jWpN*J2`Ea+g\a!2R86l/NAL!sH'Z/M_@+b!@9=LE0h2$rVGcPLa\q,'54V+oPT;;"Y1BL]fQqWJZl&CCY58%OC?X[qHd@h4/EciSYQBX=22RN:&p5Nhhuh@$Y*.D$6q]H"E(D6/>=.(@Ep!^-u_'%-aQ*kH*"o;mOa,4E!FnS8$in^L;O4,Orb>"%8APUhW#;0qF<RKrFR>WMJX9-TW8S"*URMVuF<CcaY.iP7A2)sQ@5`(7+E#-M4*MF*E6d"u8#5QH&]XZmZk,ZV64L!5.HW]:'GZ7Q%o?u+4*eb^I2NjbH',>h8;c%h'aDb3P7?M)>A/n(faEF#)#-+t>>AbDM=#qeu";_1s7Y9.;aaQHOXdRrpO9-[0KeckSp,$N8MT+Aq%HDbS==G&]'i)\8;,Y#tO!P&dS"alqZ/FZNSTWk`3'[R/t]n[@JAVSYq>nhb5i=0Th/?sA-lRVFF,j,@K'G)fMbZ9:oaVff$+a*9&%V+33d^eP0(j9!"A"=G*;'1-Jk/m9-tP2_!InU]U`RCU!P9Ip2FBjc:NM&1N)kFRY7hnV3$o(IY]R<b+V0]Eq#?;*+T#4]S":1Qj;%d_Na#&.*nR8hsp2QDH(7'7LE.i15k?apU.$'#(/,@l7t<7EsQn!4jrnIu=iH)F5XUD=46qUe&^YaJ2"5"[eJ1@EFDHlV(@Y'C2W=%;ZiMZ1dsnNpc>!DJBJA&k%7YK1499l3;1LAAh'0+<-$RP_<eQqY%)p@UK4Qt/%CV.2Hn5l!dd2l.os3AMF&leA>DGgeqGL1740:H%R5%MQUe1u%Um8401F47Rq(W7`TKEJp$A)*1GC#WKbff9AGpKWjkc;aG1(hnI&R4M&/[RBr+<'2N+=^TI'bQA;Y]A+BJ//2Cnd*&\%kfGI)bFoP0XX!Eg>\OENZi[0HN^X2Dkf0i&M%W.,>6Q,/.oCGH4FTWF6OP,r)r:)SOoAXo2-)Io-6-N?]-M?NN;B7Y1]Wet`ZdO8%mD-NZT;.L61=;T-'#r9pY0bc3:9S@OSW^Q]*[4Ge/HPPb;qG,\cjP&#F^0`Z!MbQr]%79Pnu8:VK5i.>S<:)&$4OJo8Pq>8rCQF2%(;jdY'Lm-'SA58XrZP>B0]*3+'53_#haQ/nNZ)RaR3UoZ8NkHfqW/W69%_Kak<LXp!&c+H8ER*d-!Lg0['8Q$-3tJm\Cd0\#hKPi%./.+!1otO)\Ei3%7tS`,>R'3c\%UkPH3(FYOp]h=BRpm]d`UK)%OmSQ=2Q"VRfL<!a!a@frSgYE1+ZL^bEoV7*_%/K9Q1\+*fNRP%:(W8c`j$mn8esoN]k$?Al^^GP4Np*=Vj/5-,1J!J1P/5--6[t-)(e]q@c$>$9)-IXEKGEsP(Zr*#6t2>'P='n0_HW'Yo,ZQE5J91%3I1,f&HGiuF4AU>!/o7M96GNU:?/(a!"2(D:_ZbLeY'C=PLPHP7bGWom"!C!bX@dGkqAWJHGl7KXDGfa8_b<j5c\IQ%u>024/10@%M[Pd*W2cO>0M.+GdDCP&:^n1Tj+,F1Q&Wp#e5p$sGdtk97!T>6K()Y4/KP<s94M?Q+CpCU%Da*cfH<^K=rdYhnEu*@aUEQdftsrp%lN-9#-@@l-aLaUo[8)m7$!eqZf]G-kmK!)6jq[sG!S3?KISd&d8CS*"S,r'`M.u0\5in\A?s\^C)8M$J_38!MMefTok98]AKOBe8%F,HHJ7-U9=,]Nr(on8M=;"!\H*l;oTQ30aANj1'YTZGMM&2#133mr-6l=(>?@SaeA%YRjH,n#9G#i$#FM_ideMj-oB&=+$&`7ir&%eA6lsA1*&_EZ*heQn<lXTYMZUS]c:,E^khPSL>ZB`$:Si4e3jtTVjV8C"D@0gS)p2.C9^f0/2]Q8^\1eEF=5QrOQ71Wdu!QP@D6k%$A"d/coOf*"?_u9.MN;N%N=J0G9O=MSE!"X`sZGH#0k`t]=u*ZI1KZR!r,M?D&c`Z9.4#%P2X6]=B5*?1*`nqFoWO932TM4#Jl<6%\qL]>0f:mK345:p;adc%gd`6d:`_-=Jd]tl)NAJl9^igSpD>]G;$tAeAL9q^T6=V1$@M8,N_3:R'P^Ofqr!WX%/)[&(CH9W:a/#C%eKMK*l*Q#mUm4=qke;`Ii0pKgN#Y/D=df*d9Cb[I=Ma;Hl%2A'_tc`MA#<l_d.Eh$XCK6Or#1Bed!\F1%H1)G'Qp2:+7[A9"G5[&%NZ4i1Q3fndd5`2;G"#HK5:?i$Ud%kh4?Te,[mtIJY2CQ]SS"WN_<14O3g1OfYEY&5**V@9A(`ggfQ7g[5sT\im;TF'U7g)k#1Ut?%Z-],H7<a<NX3C9p6=1[nP0Z2+(kg6d+H?ab/3Ks6OT\Pn+XrXQ@(;fE5ERd.OX1'BdAJ4c>R;q_WAB,G-h&PE1+#VeqB#Xj^hgko%P$<=YX:!1Noo`KM=$=9';C`%kWIW>tgbLIqP<s5&62I+p!Wp/!V$3OnKq/QJ;7htUdGs9pE8*-1!0kO<NLH!X7sG@)ZpK\Hj'ei`%'1d6Z",Wr/5n%-?8Ym_HCIef.+Sib(:uk,T:9Yh%9`pIP:,GDmm!,F5B;J-D@+B6=(aE/JL\b#Fbn)H7!fP\2U7AMo0d(pSIH:R\%)2?n23ZCHg3,-<r)^W1hi2:^_MKaicPdC`GgOU'Uq1U7HC-'WA<LUmKKG2A2?DFF_fX(2gar^u<K'7sKTHV%e'D5d<.?V"p"40m\%O22)*3ZD7uJ.9PsCEF6)[h%%8LeH*(V&ZfHi7+VAJ#1?J:-_,W<>'k7K*_qS7#+UQ'4CG<>K\,na[5.X67t-.S#TlP98EkM/6VV`%pqZ\Q>!#W8W9tL2jabEc1rRb4A?=b_8,54<,i@(`$6nqYf#i/TAoJ._Y#G"f0juhV[rA<^T'Z/PhWIGd)j&DO;K5/9foCm<=`W(!%<t0R"C#m&Qik^ID>UH0HYD=X/W,V*n'<IpZgmYK]<cN.3#p*=od1asnU<o\)&-2b@<uEon+EM,1V."\=jX*cTO2_/#+hl$:%HW.b%+eBLkA;dN"WFcoV#nRp)A"(%g0dqE+M6imUPB<88]E57PkV#2nS*ief%5KjTB#Mau=SP.q&2-9KOa-%KeP`EC]0YKb&HQ$?;l^)K%,2C7)/bT<*m>&n)ej]lJOf!m:Fe,Ur+qZ:u:E(fQ"!b%DdP3,+c]OZ[f3*"G."(%)qnre.QBNV$FXNBqRU/Zc,,MNGi#ke2/NMT;%;XFV#Pbg5_4\CT3g?S4]$E"P6pk7(b)D/1aOhK(BdR0m^o>stg'o72F-=Jqr!CdmL6"4j[iN?ab*%_;9iLMBKiUc#%mKC-V_9XM]%<m_n6-[9d-d3BUkaE;MDeL,AG'-`;OUV1UMZPq1k_?[UbTU&`*<!Wp?ZqXfnPX:Y1NS<,40N0P%YUgA1:Jd-&.:?b";PmO4GRQM#%71#\Y9.a<N5?E/J#8CS)'8iMG&O@+n9iAKa,ltqNI2$SMf#"566f)OE$:$;nT[`%%i!ii1U+F/pK"RT9*cFG<=8%61.<+^r#n91G%n04P[[5=CYFd8*pX[4?7T;,8D)Z!i9oa'RA_VV/(9la_s=@61.\dj\[P7dK9BIP6Y87B,6<m>YGPpm@u"MQ#tX=)n'QAd=HDT9YO%$-7EsbAf)=+n/J5eWn[S.Z^OG61A%:N05`U#ePsB9,r4*reSVd3F/cP:RYp4$&bRKnq"SVXNON<?`@Rk:V,kH5npO[TV`SSJ;_:O%k,_rGOE_]f2'R:]6R1KU"b9cQ.&2<fHLbqM:@b%!At=2V:`:gh6Bm^?#R2Hg6BF3j6-0I`7K]H:/^=5'^C:40/SYdC_J8^>9B$6d%QRY*a']$^5!\=]ZK9X;AS7DZcB)9%aaN+Wg5nLO[Di#kLJ2)Z"[9@^+4-?j!891TE;$=_RkD9<S8AZ\$pC52;689j-4J3j!0Qk;\%Oi'RB6eho??n0J*?\#I^5Y7_keC2$%<9#D"aFlc(i#8aaFug14]*`So<g!IZ/3rHI"(5,cUhY4(-er*C)-D8_]RrI+5UhN.9Q7*V%9R:"8.Ph?+!%:ZglF>k/^I0?*Jjq,,+IuL2e!YEY2psr8MH;(*:m:qcNZTb_j1W/>q-]28/8D!p>E."B+CIjmK"OKBDh7jS`j^i'%S?/CTToiLT!;Pq3RTl2^M?',gq(T^SPL:+b"[bSe7pGrVph41=aah2^NgpH,2\AgeMEOU"]i9^8!Fn$?UGj!&MSpMi;F3unccA(E%@\eN?SN:/L?k;pN;NaP+ocudm-JAZCfhh$d9X1UD(_3.4"XP]2aNJ(!(?>WRD(qcR[[.Y#<(<s_r]#Ua:=[J)F3FuU3ZW/>GcU'T%`'gLh^ojCg*$-mO3sUAl.eg7d:S([2L0W%a^^(TC<;J/AnA:Y1'Z!M^:D2#+QIg0iJ4H%<q9DP$1g2^Y@KgG7I=hb9*8gtXK(G!n%Yq-H>]HS>;(2c]chq#G!Js&XX^7?q^!Nt/]mkphlo74Q"4t9*g^>'U5C9&SGVLVci`=cpDk<bE^d8D5<#<VU;c3nN^lr>0F+>QQV%'QsO17,iMJTra,aULeubS.`&YGLgFI53b)?NX2m`b2INN89eQSI3rSb<&t%HL@Z!\[cge,i'q?U!(qC=E\df<4Y`L932^)@mi+D1%$",'oLXB(9FN?&s\&3&6\ttbKGI0-F5]+sW#UXV^TTmkF6E&==P5qkUR1+dd7ofq6jGG"ur%*;Cd%kH/J7UBc:$Ut)-$?[JL'ghu%m<)X+6fR_+1r#:UM7JfbA1V;a&TA&5fi;_p)KJ.pF@!5'd?7=c.55R+&TeYM!No\Mm7nm]VGPabJL&qUQlr'drE[HEEcaWEisJNo%_QMfF6Nr5[(.pkD@Ygi65Dli3KEV>k$Pt;o0uIE!O=FOp2UZjD;W>h7kb(r'@tUf$^`X1j:9DO#O?7HL.e"cO_8O].=N8iP;)-VC%XAa&rFn!&dQZj(/Vo+^*SVC4obed6GQnG&7I#J17m4>S.Hbnr_OH9<-<&bHbM-:tGE'B1dAk`SD/!1`I@b29o(+hr:el5n_O=h1!%?56.fXl,=3X5dld@L3VSla8,W/Jal2K$0sgm%0;bZt&3.!b7jE&SElE2!/F_i<4"s1;jI)@Sb?>8JFi?7:QXWmb+o'YOn.9WPT()%AuYmjXFSTBU5N&9T(#i9K4+6`56Mf@W-3eR`u$4#gg$0\BRtdg"esFA7?9_]0Ct8Q@06a4bK8g?KaS+C/7f?UmDUHgp]i(>JAF4B%0iV%G-iD^U$BWMlDk`g+*>_;lgE1^5"8VphbV87;N4uNJ?m2'(;9l6e"IP;m5iWP"3m6G:N@"'iA$pYSoMB0%Q3Z.G\J'@%g;%uP%<;@3E$pppoL'$G&&_@j3AF@_K(Cj_+<l(?#%QT6tZ*aSK&FYB:cHq3b0G#K3]!YLX:2@jN)2U>J+$u+urKN'[qV\r9RT#nN@FbZ,%hd`l]@"1_ud9>Okcmu63JFG9d<1X7D%,hMjgkS0\>O@64WV%iiJOc$_43:$FN[c+g6Z!YKE#)/?X$H+\i*KI6IgS8/8U'`+Z4A'j%(:iLN,Ji[/2'QlGZCP_K1^&a;U`bqU$3n^6*0!FY-blWE_;mAHpl%2f8U?C>"bB(g6J[a>%#!DH7q-`Ub(DE:4G\)uXI]$i6)Ca*%Ag+[_>)5XD1`Cu^$&"N4fi;be6<rUq,!f?@/46.JOJ9W=JTl94ES+Y#'E&t<KP#'gejp4f-KVb14rlJ".VV45i=M,g_NZRO*8>#;%TPd3"BiN1e?`FW7:a!=[Zouq(@s?:4JO4.u:`pp9J(%mq1.IEAX?BlYFX8K=+RlML"ssU;Q1lRa/NQB/"oTK17-LIbJe;"=Caj)E%"9(=lD\Vu?Om-d]GuY/,&UA?KqWqO/7@M67)?sk"<*s#c1/SFL5;[VimgY1-r;cjAIV.g>8Y'0icoTfV:'(n`e,h$t9S5-Q+st/,%8H;kLfr9=p!i9t:;%1F$K!Jj4X2nNs0Oi!W%Gmet%EqPpg.SG/e&0foQEWePcXA<3GCF5aST'Fr?q8h2\HY]kc[mc1[($.GQE<ge%@c&lWGZIlC*RTU>:&g+Q1aScn+W:h/^$`s7@]CYVi"osR3@P5[ot93X=G.i+MPIc^*F[T'3KYU+ajO'04Ng7fEhoEU&nD#tIE)Bo%0,bL-Le`9;3u'gdTl39J$"f`LMP&o4oZ,Fd`EKHbA*-6A<pgmJ,%h658g*X.7k$]mJphK9Mi7W?QIJ==GF"O?FiZ^2_9aA4bu%Cu%j\@A(.,!blCb`E(g.TYfkAnLa%Tt%YTs2$8NKk+_mN'p[aEo7KR]20"q2fj7O\?;1UsEKP-53d&6Q12eELo]um6tCqiL1T_(3U7"%,F5c;>iTgpKN.3UOm3.)QK,&;R0^^0;+R,Mm6Q^9#];D<U;^Xjodj"Ac1EY<ASG,o/</lTkcg_p+SZ*5'9_er\7W=0,>]+Q$n?o1%(HG>%iGg&*2Y%l``+!Et'.*eYUfjg^:2ECt:/#nASJ.g&^u>O9<[nS6P-9NV!&,iV9,9aKNnI=j748W[_LU?tF=_%+o;%*Rcho3o%6Q!>K%8./:/I:W2lBhkP7nt@$?b"tG_CCYCFR!lo>,-T[1*(C[(>q@WiPKfU/!)$WN;'Sicu$$"&\Ap,*u/3k^62neD)n\mJaF_b%?4bRf=&'TZ>I!`!i^;laHBtjA7p-,MG(NALL,;J')c[b6@oOFG=e^^&$;63hYt_Ts%[n$Y21!d_*2@.DC^X;(iBX176,k>nc+'X3%"N@bm)s'h*-c%=KFH'Vr!PGXt6r>3PfaNTG)F,CPmLC*aARmRbj9Z"O,Z:h`3>e.d%!WJ&8Z6\QP36J$SV2E#QJ>V"fKKXZJiFNB%h9Pnlp`au*pmZRQFs;>PTekV-?lTFn,h^"'"0F70M8I7J>Y"<PW02J)<N8$-&hkB>d$#%C"I`2\QIZ?VU*C?_]elmWME43/K>__S%i`\p]96/f8F`.@A^f%'e;HV0.ViLb.:*;"i0@5TGCB-aYXQJ!I):CVi#@'d^DC=NTElJ52N^Cr[!;_h_Q_9hSL67Y9KIBekNHGM>%(b>4jH=B\e0#:4bGB?AVC_jYaZtRja_!rY<Kc1-c7:G$s]Y3fg75*Yg-90\[R]isI_L%"Gq]nT>]!-NI>5Gl-79G728f4Pad[XII%oF*&X7+$ii0isk`HMN^&C+A!bJWjp^(+l8hMjB`pljJ8Ae6Xl\JE.-Gcuhr%2\Hlnk1#VnP/*1\'"CqP0S.-YP2$@GdCk4eKTZmH%qn8"/)0COmg*49FE=nlG"o\WL!D[G!8UG#*r^blg*A]1/N\#jD_.3jJJ??j\@?MUVMO66</Y1>D_@7^YVXROgbsEfA3c`m;dn0tb%DBh_D]Yo[EDKkC?@OZTq]Qb>i0h>_'iRoLe&QBL''tuIRe\Dh=J+@I)/Wt_$=*H4ZF%Y_.WO4G(jG0gaCdE[*_br4J!^c78M[2Ul%*,f%Nr0:$74-c0>3c5S2)LMENeRkY*Z'%LIr-d.M[MIAE&?f8UP`='`FBqWK,7[W2&E2CYQ:9ZO1G]?-Q?WJ;L-AHBbJh7l\3+M7%?[^Y<',*_mqXt-#35Xq3?>P)PI1G>n.a/l",mZ=NI1f;X'3/$PA2BtZXN3Y92_d=[gEQ.";:JO^6CWi?R[%HAFK-b^US3Q,iBLd`%!"1SM-goLp4-u*P;#r?L9*ZFp(dOK?AOuHW9'.Po+D@GjL,U;T'Rg'("XquBN)*U`"Qddsm\2Il5hHBt,;PEUAalPq7@U^6`/:"g%_^b0$M=;>Zgs?Gg%9_nA2>o;Q;j$h$dO8?P1ElLn99P9,89Q=p,V)JG26cUj"%E@<ke0heB#&sa;hc]cO9;e:Xcii?=426Rk9V@.%O9!uI_6"CCr#ViMJ(O"bB9Q=)`NrJ+dE-WsJd=AfUm/]cFNqH@*sViYSWTuj!jY^(kVRY`2`8]jW0)+d=IATcAff(:Gsr.oc:[@k%b97HgEf;<c:'p4oP?c*0?@uRGD+!Hjd>qn^^^gO#r*Fd]b^Te4%$)#kA!E&ZD"+hp:Qf2Aq*J_[(N<L]qkttX`s:eDR":X.[.'TY%MA!`,6?&%u%F06o+b,*l71/7OW)TEm@gEel?Dt^`F=M,rk0;M!",T%K':1V.]GWG4.*X/n1s^BqO"c1gRCc//JlkF4&@7USKIR?O%(YG!&Lq.)O%NGYV\NiAFhB/=KYhi&Q[Mh`&)RF*Ddmdk<88XVlW0:le2(^H3`%f30Wg>\"WE.K_8B;%tLAI&*Ou7jZ4&TAcf!g6L%dAR+o.<JB%>mPVRYiI[u=!hJt8QB1md1Nq+C3$#1Zu$sBKY`V'Zn-,@.gpQm#$dqu^P!%mr,X'9]V,5GBa3eV+K^Ss,95FVT[QPf%JgjP*0Qj+!eC1Ki[m3Ho0ZZTUpajp>b^%)d(o7D=VWr@,,YeRZg+12U3aW@Z#ups=!8hIkYkBh2nVIa8#[i=n5WljuTSr>("IV5/%N#nZ<TH]o$^;fl@_9ajrQuSi!7A\4;SYKimf1Hf"_R,mU&'!_8I7](QPX$m'k[8#G=c%;/r]l7eP:RE+/E7B"Xe:=m\H;5C^=(CX%i?WEXRA8aUb)Q>L=E1D\XS*pgSoDh?!RtR65Z#^eg'c#aP$HCr,@IJ>1r7X315=$m&d_?m*,B]OoBa8jPFiUBijf?E<<VNKnU?J5%*i`pE>WB)'^P;E9jJ>^O8sUDO@"N3nTKI?jgGb2q!1O.R"Nd@-'dff`17c]'_H]hcZ-2>lg-%Ti8tL?iV!Vf4J;0piCifFei1:S!%$YBPoU9%Z*13P"TZT77"m4TE9$(Q,*M2*U;.oOJ;,^[@/!Yi\.0kDG7+ca@H1RT]68KqXb'aXtC3Dj#>i^u*%e18J6f_dG'@T>V-%9OYU+R-:A[kt%@3&r`hXT[]m[U"sG]UHj;&ifM;6:d?TGh4LHWA9:p9TO8M0B8mX]:)Mr_4pa,qQG)6lV&9%Zn;OH<bl[/]^oj5p%FUS^'R*&!e8%pkoNJURBY"`GU&_N4VG)H)^1CgEDc#U?N.+\jZqhQha?##V8a(QJ*?$0-)KCY$09JQ^b=if^dPrM3"*aj^.iK81U%8Vd_87'#,lqDD^^RA[3QC,ODWe9$HDcU9/UNDeuJd"RX@Fefq9C)K]uP`UQs+@%9lD?Su#9;h%"B'u[aX:KpCaIQHSaW6SDV7ar@%08L!(hbqO<=a3JQCDndd8BBj`!9MkTMA=*tW7@@+d<?>t^UcL)(>2Jk84qms8W`0qrLQ3"WB+H-Kg%S5@46nl?8sfQocr$i8bV'E%'TW^[^kut3$4-2hH:4MsVb-I+M9$eu6>,4hGKPJ%8a8a/[E9N"b9X,H-nQ>BN1C-)<hpBMi"ZrX4QE7p(/C/0`I=\?A&4iiP\sI7%9USUE3$\2'`4u\")2WT8D^_-1E.)nu5YhA#dZZ?f$q*<F.7@dM,R'#-&.]kCGc7ZFJ2"1/Ef(0B-Xd:EXT!_QH=Ellc"D&SYDOas%I?m8]qWP2kRH'0fRp$S'7LRKKTE(@E`YK3S3hbTnNRD9h>$FJ@#kTG7'MsV)$;!VhaC*j/%HWJ\j=j4Q4%,3BZ7XIQ*F!(S_@9A-%C*MG3'O"mP"+7BVhm'J#+X*#!o[mHrqI2$E`Yfkd>q*CU09iL]9/;;+c7ORK=t)gq)GVTu-mU:cEiB3bA"K@`#aoZ(9cVTd=?B/U%%Don"_,rMK!mnMq`U.9?PBp/]<!UDd"?TdH^GI-'3sTD;NAJsmA2XoP:MDNr%@_[99gXp!)7V"hJZ0L_6,YnkKBbZ^RqZY)rH(s6%9.2&fI1=C$T1[70g5nS/&dB]:UW=lb']c52J#1WR:,QW/O:[=I;7fSF.-551o\:mQ&:ln$QR"pG,@m>=@#$=&FKn4=0]Y(dCfFud%W?`r(e6ZmQ7Z%Zc<Mbj%pC+kU"U0rYH*Raf&9Lh^6-/qHQq@jSe!*E@kiu^*4PB,J][*:A.9et,NJ4qj$$F%?WeaXK)4*btQ-?5@%E5=pcV%%HM;<Nipe:LBLT_]XZZR#/QN<<cH;Z1#X$2fFQ/CW*;W0<(/!%Xd2)GUmD>.9qUT94#SV-oYKl?Xha>Zi[oPTWR`7$%Wd%P<-O,Fn7Ag95>FC=3TR1$;D\#X@?YA%D/&%*&FAKfLV`3dsFgi+4:N1<hU0tT*E;.79o&eJcH4;r@Wmi)QJ!BdVu%9Y$/D3o$%Fc%=Ap)8<[Jb=oM@rr@C<.M09f.%`cVAJ#ab[T*#Pu_8A+/Qm8]qJF&lmO/Wb-A=dpG?#:%,ho;ut4$D"A![O$cBAZo+*>(/m.2[_d^%pf-/o\&(BThJPksSDV2QU+.f0AcYlM<[L0hV3L*n_Mn!L&t"g6r*c8nZ7J-&Kcc/Z`GC+Bb*K,^k^ikh86SjP>Ge>'%@8dV+jB5i%r9;aZa0X]EU:A$*>Mi"M);#-mltiLSLN#h(MFb[Zf+<,Q"'@8#pbS!QTKQJU?nk;*HKB[UeOOj<5u>7h@Bi4u''`S`&9>9$(2+J6%'?PVfps95UdfDh"iXj2ao_-fr2rpD?;Z_5l;6.rpU^<t`0'/f+N!<6-=5[da,+VQ::-$V.mS9Y`L:mZ4PFf4s1KC`GfJ/@'=su'Z%OS"HP"6%fVl?/1n0F:3kZ8g7#)1"nX'?$YXmE'lk5q$`+&6>*$#54Q0p1OhBBu"a'Po*cK<<sFT[%Ih.=Jr'LA>K=fK`iH1Bfd*j%b]8Tn#sK3V3D4ceR7Sr(_'i+ch=+EqUq`YsWD?"iF^d"<qs`5FE,"4n1XO5&F(D\_?j`H;^4frJ==n3?ED++#XF;e16Ko;Ns.g.7%XEaUkBO1a?%p/;FAU$8@<sUk1P],^[A,@L,L3-tJa3TpQN)kr>'k;h&!D8^&]>t#nkTi4mL2\IE0D&Hg>$=IeVPKSG:o9d0,8X>$%RPFsmOf:0XP^KPeO_cfXW<*H]#t/$d;OHf(&AYt)L2p''`rRb98$%qS8YTIki?WXtZTMOtAuGW\R)CR%P-u#J"m-kG+!LqX=:9GW%oL*(U3L5C,<1ok'Xg?C+$Mbdm.2c21ZT(kQl/3gJ87*_N#rP1+Iu).f`&k7iH79gI&T+?[5[\5VPUhi=Km5JR=_%R_e4h\J[8RMB%("l>Yf+#hXdIXG]9W6m9,[*VKA_r)bIPj3ACgA2tk`q/Q]TR8P,MjM!OD71$ZjM03f2?I[opK-SSSFii<m!#$;L\+?-It_n;I`>M%n?/+:8c$T1Vd1-H(lRec5;r!^U))UdUdZfqDr5@(-L51CI=n7<UFhH.WR<ZQ"74-SA@6"O+XOtO`hDcg+5qi'9A?LgR/hYKA/,a;%S5*:Uc%["FWI8C`/GeKg(5*mO@Y8:UOVfH]Gn2^ai6nZd-a\c3$X&&94&ChZ$+5_B(.kY6.qWA]-hq2R,RI#9VGs-P'h_SJH9<<b%T;_WJOK+WAo(;VWL'dLQ/A(2CKmFu'a\]liZt54nUQO/r*bJgA_q`N=V:Q"'oGV^VWf?FL2&Ro&8[$]!)%AZaQXOQE/N-!I>o9),%(o9n++e]i5?qNb<g;csO)H0OH(\@XapN2)MQLQ:4"r]Ope\+ac+R:8[Jd5I91JBJd6IF1\i**"e<<?6$\Ij?-@.R^=!/+K#+_)$c%Sd,#4_O=TI_Q,jfR0#eg;'FhTg_6$,d=<W2do.Pl6l$6tl&b6AB,Z3:EjR$5\gEi/UF_8bJm^/!-t9UEm%Y_b#.e>i)V0n(4<s]H%kml_V")4"*"N2*_l*6V"D5!jQXo3l]9YZs)7[b':)!3C.3:Vu_&j]9er?eRO0SGjbjHU'&-ds8$=iW?Jj@1\/0-[r4a7N)R-!e[W%QB8\r3%.EnTk(GRI%)gT=b)9QNDT6^/RL$F6qLf.:sW'7PRl#%_C3jkWhh0(q+'*IWC[a63C9*:%HD%p)2!^8a$,_UE[lWG!<.=s%5<0t\Rl$=_+f_!ei!s/o^A"pU!!Ij,'#!:b!FCG5P&N,b^AH2@NFC&S$U,i"?5W&d:.bX+)C>>_XRnW*D$[fd+WBYm!1U'ij?g=f%Jgs?fFrA8>kn8`>%#('(&)8F,)-IpJGEm,1,o9HZNCq(S<!2MK8R.r?TX1BEUg`E[dW8(u]>B=Z9Z?KbX'Um[D%piHI?cCdJ--WD%EKJ(8.B0[\,("!cP[r:P2i^aO9dWP<`VO)5F^KnWf;ded'n<(Gi_JS.OE"/-!'`ARmmKT)?%"D3+tGYM8fLF:_oRW>b\'o'SjPY)%A43*:5WP[G8iUR]KX+'*KC0k<EZCT]3j>-.TN=s4=A"l0_]-"*.qq2SCscIAcDs5Pa=G9GR3j/9"iT>f(W>=tGM_LbcB$f\H46M%%Pa!?X7`d>2/Rq=TWJZCC$kB^R#0o!`m+F@p/40uBCX0^N]1M7O)I]%"g'MK67XSdg,pSjljXW\6$FPjc<sIL/.SE6@/&Tc&].gIN%AL9CK.9TfLs4%U=L]nnKTM^tW@Y!)c;],r\8Wd,Cb.<.uXIF6oM,2G,e7?(WH:jqZZW+Q\PaSWGUCrd\UsZIfJeK8A98D>jQOI4Q%3U]R5L7fog]G"=$WkbSU8BIM*<HWit!,&#RJ`)?J$s&MnX[]-4.n0bL.hbCXW$O6ZOGn^nYU:nB)/V=j4cejK+E2"a<&V&'K[_uC%OeL3lPZB"]19"+\NJ`[Z`aHEY9P!c#GV`nTU\dZOGo.nR:'Dc&.h<L`pAC//X:-8i)3'Eq5aS=6HH\`g&8!)p@HAXg:gjg$?%n'X%TZG[\I`b$DSY3bV)DVR]&dOJ#aKh)$O%)H*RX6+]%Pe_TO=Oq]5aJ[(#Z@]+A46HKh4aaV0PF;V25)+E!C6=jZB)h*8`7^jjC9H`%dcWNQ.TU&q'WTqui3ItW[S`)o&!Qa)bWOIO&e:&98j$]Z,D[BQNu8)o9T"gSbTIO7o8%[nfZU;HNg[rW\;9eWaum[X^cC/:a$qX*%jtUSXBj_ulccC66.E.7fP/]VX*]$'3"N^U^*MMl*+=m3=cnZpiP?&lV$i:b_"m`=rNu7r;de4]dO.fEQ>q>l@JJRIN+6^bl,5D=N%qQY&\Lki^lNu>,Xob70V[)t=-qD!WfHSPY(r\5W#iF0knB"Xk.2?#>Gpor\]nW*^C#IuW(qD#blH1G`NqD!L3#r,lM+#@Fg+tMB'%IgclX_MkAa@r1)A.JjtM@hS?cI1-*@`7&Pp@g::IcM8pfQsiRdaTML/+Xhb0"9"U<rSbjJ4ea#S,j7#dqj7uj#</lJTnScc'D=/F%$PP;.ZB#SJMC``lp+\o=3(T7U5";>%ZAMZU1"JU?5@MDmL7fhJ1E6.W+akm*%[DJO&PV2OO6O[b+!qYooOGfp9-Ff;@mhKX-VimG%%/II8/mRY]$j$lK?5h:R)(&VB37*^(_R$h&TH?OZO&PU(9;8!t#4aLgDQTOOO.g#Pf[4IbU>jBPDqnhjd3Hc]R!Xdj#UBsXmP0=a%0fDn>a.u-e-]NLI>!"g-Nt%/MjC@c'=EA7m4bg)[gm*8'k^K?HPHPr`*4E[sXah`dd1ko^a4t/E>*;`amP2WC!YmBM*lEZ81hfWH%LA`AOek/)[\dg/t<pDD4e0QM%A*Pcoj,-XC;NChc66\@RHHaed'`E]2%#@9JcZYs&",*9K>'6Y_'*,muK6iIVKL04He768q'/*dj%*]))C>iZLkQuPl(^FJsp=p1D-EfV*fG`[GjbWQ/`-NUESggc#U+sbX)HOM"tK'cgRa.rmj<UR-Nc8#&1J-glcY&]R(pIjL@Q$Wr1%<1mI9gg^o/_WG+6`us3>;q@Y^4bf_'nX#MfbReYIo`OrU+cKsQ;slA-5=ChCmP,[qVQV[DautJK#%S\I(bZOh)!)gV.ARA)U[UIm%Yg*d'@tr(N2@Rf>L+*<Z:\eB,)0DSjR)_17;4f.Y!m$aR2.Pc'#^=kC2s)ib^p:Vnb[Uk1l?)GojtZ'S9Qb3r@g6\TdlSN?=OsS(%aub@KG&_P]BZFL81[D!FN^8lT)J(9_=R%b6F3HWk9LENe*!;T2iII/4%/O+#G"Oa6($=Mk2hj]VRt5E-L.W=A+r`m-)&$j;f,/6Z%ajj=h`h<(2:j:,?L@><RQRgINl+Eh.:5Hp:arL"B1klc5k2o8mB"GR-`^F<MFYnk'd?oL.?7;n/BFG?e$9]^S_aH2i=F%oZ8W[MW%dYq$p;-K1'1Brq)\sOtl=K$f;8i*neF^OC=\5N\NN"dT`:0>N/ehXYBEJd%^'W0TX,mdGiR(*O970(Vuhb+mOQ;n8G\M$[F_XR?M%<so@N5e;L<X4G-529>O6SV6+qUZ\u"%6`A?_YY=l\^c1$MBIi9)oEM$faQn]atRF!-D>Q*<*taM`tF@d_\hoo7f6_]iLF9[Jh]U(%69\'K`h4aR4F/Kn(eUKT;Pt.d60AZ:`C;)(0d?W12+.2Yd%HaB,CVAr/!jOO(h8E*)>M0EAKdZ7MkRcD(MX@gbgi`qhe:PZ@bKt4%@Ec+4O30.'!52!!-:!KnX_liQ:ls)FWn'crB)#WJlRBZ;@CRj_q8Eae4$F/P@T8DV0/2N)_f\qT)o!4HINa!9r*kDroe'#8`LrmO%c>3>eL<(1V:&2a:KD]_^(ScEZ%B\$9!FF:^8_Ai*N+f>J??`4^1T^,-rBN#JOF<:_T@/Xk<@C<e]bjpD&)6<ed),#:KO,&o66$IK%*rSZEJh+O%+hCFoPD"D!d_K'cl,=&5;oVSs`LqZO8m%o+6]2OK.A[h*O=?1*0tiqT]2kq6PSajMirhGP(P<BRZ1,ac7S/D^U;eei%rIC.g'7)B#SDl^AoO8$$n4!F5$&=BRY>N`6OD6hQ_J8FHBG&UVat@:^'?VM^&\Ale8a_hc/k4BFYXFa^bRh#.9Zb9CQ'),Fai+D*%'Y^h,\JSL=H*64;`6lG"CZJr@l-pP`jC5!+0NW9L)!#dU20(Dim370PjC1qp`E-9c`Gdjmr`ZkO$jj=?Qu\+YeXJ6hM]#0>Uk)[m%&<kR<M8]mcMaK]?MkTSdGA/08_`%phq3Y9CXd$Pb=H"imO06E1C]RJlKNJZZE+Z[U,o/:]0Ja6[`+!Bp=K'@nAfRB-Bj_]4TQ[G<%>U:.AN!X0D)%14f,kdD`V9ED]`buEH)<C*0&lWK;-D'\I2Qju-kQ:(t-cBIjk_1F\&rRX2fE@19bRhFl@f0270j#[;N*<4"Y^qLY%E(hj<<aho,jC6d<ih*11@LsGEAiM+R6`X%:=)p%&Luha\`<aT/!6:I4$pBp3$Y:-l7g4h$5%YV+2<1Z9.D(t0(ebq%`UG9MEZ)-?%iSu6CXKma]&oo9tFtnW2%1U>i],2I`3,je4$dT72@MJj53k$'9(tLT2'9l[Z!:!7T*E.mT`*sKVUDBUHMmSM0>0J[e2;0Le(gti&%o8kK1(^=##m`*ac-<7(Oat8?0,mCDkMnu)VC=W^#(j`8'A4eJ/Wd8ZD<I-BNM76nc04qL6-T69*<n5+5C@ku^,((3^KO,)0#"^cn%]bikM65W_e`Q02fOL6gV(i'PI.95WOn,h:Y@sTkUjJ]RiH8/;+">'[b_%tp"2.B64"q=1\gFKrS]IY?!C%Pl9(ai8RQsL3OjYW&<%]bk!B0n=AMdYh6DH"q#ld>Pgc7-AN#(IL>B)$h.o(s)dk)",E9@V?L#ETIum7-2ir8#21Z&gaA.jVO[alY/a:^R/FpRA6H`LPET^%:rUHP@cE[tpmpu6&Xf78H-@p2?rRGr/&)p,FS*jXIPJ]6-d@gU&.NURM0#QbMkPh9/<+"1b.6bq)tAhhQ3#puQ!]Ie"&*)?o8Bkg%he7kA-l*XVp9jILER'uT5NWb,>smu-^b<\WCp''Y^DQ7.4<X)3^DIPtJlWKkp+q:3j>7hIM\4jdG5]307ariL,?B7JioJ208,Qga%f-bKH,oC.f#t_3K_\d\3KgTar0ZIk0h@9Zu=PeYn2^T@daTUe'&r]CTEWa,pn!'+M_&0Fd"Ir?r`X$6(Ce>q(0skQ`O=@p];Qb^T%Z1<gXkX>o`&\f/p5t#2D(DDsfg^j<l\-@:r68+'%mRWe[8h\1cnhObm6c-A"JhakSX/W&G<-C!*/5mXhoO?kbiqST1`JF%U[B9"X%d9kWFIVY2meuguTKO9Zr@V$_Cr6gn<RMjZ^`l)n.EJP6dOc2[88<dM@!;+J`*YXJE2PRMJ$GmAE8A-)n`e;F3G>jARi,>iOUf!'W%-W1kFN,;bh=*cId;ufBY.%60+Otjg3nQRNcR#E<aXHJN.oJu$+D>T0k0eqa?@uQp6<'`"S(o_"5SK*cNOeG%gb`lXsHmuU,H$%38%,$SMM1.L<5=!&>ZP[UNVH<697mB=1KOo0`#`dW=-QUcQ%inrP;IlVqSGN*h^n"7?Y48lU8`'sK^a,d'BJ,O0I`TRhn^4(pRAGOFJ%q<M*8l>o/bHN!_5J#rM7dmr6ZMt2?^rVl$R,I@7+jWc)mnNT8:;1AG8nrNf'9u!n0lDrHbr`?RTL<I>YoJe"kc2W"9Ic0ib:$>N_%i!7Qa9:O*V:WLe,qWJXL5p*gfKE;F!]bMJ#\fuu(OIqSCN=J4bE(tH$$g;=A?^ult)HT.OZ+C7h<Fn<4GO53dl[//ADdKWlHN!>g%Umt4.e&Tu#XlgoBUc2N(YK^:tc^K$dnbh+"l[P-J05G)RiAXpFk*gF#Y$;3bFt>!J43WT"PA)iCgk*g9Clh<DlKqAk5P>$-LBiq7%\2Wb6NVV(BG*4PWj[^8XV<8mWC7IB:!Y(cc24X;LqMAXf*9\b$s2s?MhgE*qoC]&&6O7187\?p#!r<$VC'8T)N;sMWneHL*1_0]"%d1;tUVlbEtB'BOOTRM8GT'[f^SU\r+;k#U=qpCicmmiW%]?Pe<Zh,JuOt\`9+E<&)?TlOI-B44<%*]ai8:uR6YNMUi53D*!ZOs,7%@kItcX3qNr0cGIqZp!+;BPG/t?N0Keo\a9YCrKHAlBRiTkY#Kul)kfe:t&8M1!&XRV>b6AiS,q6e6bH:T3_2gn]@IVa'5`1hL4_[%UDK!jK*(!QA3l>l>a^tLh!;EO&]\!fd?Pjk"A)>C]Ln[Z@W$Zdaoun8SkrW<:XolXc)5=Jp/;",O=!cR(0p_94f[d8>6b+KpLQ%H%h9gVGd1"PEhT!4dX6"3YacVlM,'AE6g["O\f!99EU'a'XB`5ij[!A$_\o,dfWC+kk;mRIcRnmnGqUAr.IN8=PZ>G),h9U36VsjZa%Dgso2/rt;M=o2jZB0Z:XX/B<s4^48&Ie'"g,OP8u-c`.HDiaGg+BY;6mf)Nj#KO%DkG%;AgZc]LNu*;YjPPhMI=C\+k"F;j]KZAW%p$qnNE;^8QrV>sW_\Yh`cd(-AqELGtq;_IFY@"t,^::%QT3RV!\E'+05C7>I)dQED`qe"8Y:nJ1E*<!(mI-Yp?QnmKrYr#1LNiYB%m>7V,G]e"JEVSOKULRPOp#hj:IF!i7nM-5f:VZ/douT.J(C.]\s%.ATh_OWhoM^3!Gd[P:q>,SIQW<[uF^NVbF^Z=5[*e8*?Zkn2%2l,&hZ]g_gYDt5I.D1[9YFC46cX*4cY5`ZonFFQGiB1`4k]ClK*M$NFnn0A$g"C*>cX*d#%kc/14'F;0Y'9dM6[u;m$Fa?'^E5VN%\4e*U@43&QTB7j>g>2"0rps=02O!"tF0k&]Mr^;ur/]*o^K;TVqVk[1Cd&6)p3/la4hL+i^A,10^Gp]<io"H*O7,>ps1H6?q!n"?%i`^Kdm$I`Y+("<+]fpjF0%rP%Cu`1gDjl'iPlgB[0A"NOT.^Dt@PI3IL?I_)71DH[qX!Fr@PZ3XAFf?eQ?tEUAo]LT(=Q_I/JcfE%0eF0i9R=ET9J\]n(Q3!^(=V.N?GCf/FE"g@r;'^3r2jZR>j:i^'AGRgbm_?o/t[_u(k/Y@Spe0Km7>\,+,"VgmIIB$nSb!`J$m".%c=XX6k-L6=\eiXOqH!s!=mUrWf;`aFfa#j3e@0)Bl>Lb.qJD5UmpE4.?QUA[5D@ZfHN29Oe8NZn:+r3q5f\7*dc9%-q`&[2"NUgZ%F?DJ;CjNj-Gl7$<]smUtrVt`h_>Z//>d'%Wq<%?]Qd+O>H?Jbun[0G9A!NXH&'p9^cN!S3(RKIphmlM&mVdL%lgs9EL[4C>&$Gr>%RAAD-]=dYoHA;C[T.eMcf;CQH<m9Wo[ed]7]:PO`^:H;6_0=/iZ\E@I9Q'f3M6mdq0&Id,0gf<g`tP-@TJlIqLt1<tCEFX(I!]gS%l!a-Zp@bR5e/Rc?KCbjr(FSO,\LafOrZ6R85H^Q>R:m]BfU@\I\;/LT\(1/pge'rhE$elb>@#![:hSC&F3CoVX7c:ln)>>AnQ,R8%Qm_+Q>gu9QNGq#LnXnF<ItQ-uds&I4'H'-%9S^6Va?6nPl2Me%e[+N;?.3=rZZt=L9kJnRg\U^B(C/:3I\0\e_8FGDq<I>EjbpJ*%ZX9n?qX<TH\TTjS`NQS4/+jK#_T\hQ].NiJR_d=1NXt7b1:bU35!O:8o_R:k40pl0lK[*ZgM+2/>Th9;'E&CBBdW`PcM;_Vkl)c\%4p3Ssj)i0(7F8,Xi`g#ZbbXQKPsI2DqFgB$YIAElC)5d@.uA2KB4iD>n$H_?ZKUbiBkK3p9E"R>>e`Fc1q%b3hk%reH'A*l099GQ%4?b`0T<(gA^,gL!a-5Q69emtI$ST9\D6bZLnchVA9Y17$*dog^q`AHLbiS3JOb!&L-SGs):Y3YEYE.:j2_b3FS&^k3GC(Q(G0A5.%@NM/Lh<eFD%j%@6Is"R?\h:]W<s)qZQJJ+-lqF5)SYb[H`r>B1`lV42Ig2bR]5XkZhQ?'m<a5S\PCLm<9C#[88lE?4KRiU9%o/0\%0)&\e<rr-pkkOq!.seo.hjN-Cdbj<E(A7OnX0ZU5^HOYA3aEiO,g1&go9S=I3&nZ:[!_fK_&o$2lZY!FV99h;oB_$1roiR#`=Fs,%CPCnEL0m#(rITZ7c]0W<I_0brS?HYjcf7ZQ:2bMR^$of\qs#iG!P6=`riBi.2pS8kZ]bWW">=':Ql9qE]tP[I47ZXJc=NE'qRdCF%\lLW^,g9fNZ`Eh,fRCNA1_Z:*-YmECf#F8_V4!;@S"hIX7%esqW(P\0iPV&ls$rF\0peTKEuIH<8,kfb1l0&[\F]0nBBQSan%<@I%1A4?Z`.sie0c0&CL&,S,Cj[Xf&2Q>Tn!FB#30u>Na*@C(AF/cT#Vh[pHV&lm&g?CS@a)eSFr)Sh'.J':.6E`u?P4Nbb^NY,+_Dpu%An"s!8Q<rFX5@&Zc"-1-.)^^][7baL^B%uQJ3Pr^X1<m:5IPR('md]ck:>>+`l$&O`QVSkU$`1;(1u"n45c"@#+"Rb`YEi@G':M_%UEncOJT!hJ]D$C;5p2#6HuM)%na,'C/E\TE4,Wt7P-auU9SR#-FBesu,,!YV`-HaK*!FbbL11`kMh$+`!OY*U]@>m4T]FQq["e<)%TDjGa>kFp_4>#Q,DW5@W3l;BEdnE6jTo,bYV`!6V1d.$BJQmi*hp0dicg&h4)4"ih]`0"8k-5W_[R4X^/.ZfWbS[5?B'G4cANmTZ%b(T?c]2e[Acca)HIt(f(YaWVT(bukFMaDO"4up4hct!>/7-Em&l[t*KYD83!3dnGcIWRUi,5P0WVdFOE>btLTJZL\hO889bPnn>5%p[TX)!_t#]g38lUni7j,I<<h"AhKS8-J1Km9=)A6Yg@dmB0U"N](o%;S*0Ol`"mZOr;J'V-SNeP?*5U$gu1Gh`H:9PQT>0)]UfEo%o:>3?B,U[#.Z(lRpuBfApE!fd+4%ruhmU%U%6fu%YW(@rZVj-X]Y>!&O"Ob/X=r][W\03Lro;^8RE;K*a4=5fj0Ec_flc+fFoAU2%d,=qk8_<oAf.S)mflc-+nk<8F;;^jgS]Q&EB;+1A6=JamrH!DbmIA"75L3ml5Q!jEm>nm7]fDa!GH3D23B-6p'!])>flscY,o6Vl%QF?[<7Z1`4;LWjfb(]fU/^;HOV-KaZDtTTc.-2)<Hme(1&uBsm?JG9L_\/dK8G;Z<Y@"E(!a_[M`aT#"Y2.;)qI=r$I.mI#^RhX\%Vk9<@^&G[ChFG>PIK&!Kg%"puoCMX]cd0lI:+pam/[j&9)_JMG@N3"ODcghNNL_8kguCc[IF$ul('A8e+?_!-`_B1-aG\N*V`+UA%HS5`N_>bRI]Y4DQ@\/Dq\+Or+d-K`?OdkRsE@0QtlL;D=0mb84rB*R/:7QmAYnleCn'5YTG+6.mqYa.0Lh79hSb.0EIXceF]VmD@%qO3hF)Gdt-rL=hk/0"<H4MGR:k8VQoCl9ZRV`ZjZaL^-korV2HmpE4.Me7(FG['UuD,K2JG[&\j6Dr#dD0_%HZ$9Ku(2qCUD-=M'%Mmm9f[_*ool@\]:>]6&Q?d\Q@DO<*&U(>RQoF^k%?E&K5S'n`<;@II%U+d[ZO.o`joD#,^*>EWJrT0Y)b@uG.&&hd#C9-7(^[&n2%Q^NZLm='OY<P,T$C`g0Crl@]TQ]h:@\[c>Zmr5c'I=-/,mD72HVohB[gTq7@/Z&4uWiWp%.K3S`rc+4_cQltElVdWcI[87E!-lt&%CaP)(cKEjH[-cs+RuqAf?tCD#=Z2VL0<d5#n-#<(<r4!^AM+Y<mlf%+5g$/D8==ghIBtTU?4*7\r>3+lU%:t=k8P*rJ+NU6X7\SR%76Z==r#&!H6KrmrCdrbupWe#,g!SNfB-q/$kibLfYN,AI:"TDICl,VS3TdpADI?Fk;"HBq#iC9Alb7jgnEfN9"Xis0IFEpJ\(F!)%*OOHbo-(bQm%=Tp(Zq`Yh:3"XoB?0Zm%Cn2IBeD?4(tmOAj$=d_%->?kh-EfYC-)BGmpEjGIgt]4ZsjU0U)KSSKHH)+7nao+.I\.%Z+`M(j<qslAb":LrqXj2J=2'<(/M^S4TRd[56'a;nbVn+gA6jADInAAH*=[-!^ZC-+@n-1Y0G8HRgBQa\iT6Va,<.PbJC7P?dI@(%o=@KlbETOtJWDoX5<HE)U!9CQ=?=&K4!,Dfb!Q5+GmeW%_q?Nq2dgNn9Bbl*DWJ?erGK*L]]\Q5G^b*\G]@^#p"@_tW[um<-_[6/%Mo->q*$&CY_KpP%4YNDIa%SNXrMJ&q-f:/^s6]YYRLA](\B!':\]H!Z^XI8!f,mq6i*6E:[btEk+5Y0gg_fP>/SHj-+'or2VOhbs%*e*J4_cs>7Rq[csjW!?e*:Bs_?<fE"MmiDP[DeQp;r!kJfIbh:qplPG,IeM;nUoF0DjGCjbp@%P[u?6Uo`"R[(3Aa9?*c+pZZ+bD%gL=!6J%c=>A?hO<Rq]-qk$^%t55+eV9f&cg]f3!+-Ju-H9f&/i`FrG6VKqF?Mp\mK:%-JCRYaOS0q)]f1sNaBrS"YCU[$VrUkI"$%1@=*S\=\U@nR33g?b</\Y3Pldf[TNG#n(.VXS28+"J#2;j0Q)XG5=noc]"6$\&HZ&;mkf[$(%4&IpC;dp`+'?Gk1k,QfE_9Isetn%VR)ToLIW/1r9J/]J,2/ION6hD?1NkAcqif1d-akr0r+/d'PI(JI'IbkTT@2@4-`cP$8:(2AM/Do?A]8HG'biA#^>FeFu++a0"fs5%YU&C#2Y^.<fs@-!h<22QhMa7<:>`=?1&Np<kVEfnpIBc5qhs-8O^(V3Y.N]59]>U<VQF1^9#LL3)=nUYlciD1H)u]g_tk3,XH,V4%R2qFQ--jHj>bAu*?%&m-`UoLH^-"J_hr%n7M%&)*p[7Kr?jb)#[m)#(osM)NG*;4p(XYkcmR)$i54Hhq!G,9UMqJ$SH[AebY([=6%7c`EM@"Y(EfA0KZ5@c\IRAd6sAqPTkBA'p-J<0UFS"6ju*+^ph9QrJ=k0ip`lR85qf5H##/L4SF3'cYr:3MuWJ%5)(0,<E9n8CH8%J<GtL)YVmAR"[T4@'.*9O'1tr[m0$X6)Zn049+T=>]a99fM#lHgdKe#7If9Xqd3V@[XTuopuJHo1]nW>/mL'1<h95&f=tM44?g*#%d]I]lli@V\*]7b_-J8G?0PfTsCI`l'/*a9aj-uGt/acems*,k0j";)AO(Y3VhRWjiJOdFdVAnB7.q9@!Oai`-6K4QR?ZVK)+)dn)%_cLL6[ls.hUX,acpWXFV1Dfo!2c+46%O,ukL\$/I=3ob+bhc]6T,rG?a8L8sf>beG069.+GBl+!]mmeZHc*!uiesB"q0&u7AL7:l%=\8(/-1.O/\!kF*][9p:?e3YP?VBN)MP\;M]1NV3WG!0!4Z]4WQOIWea5]=Mh^lF^H4m.UI(n\OMnEY&Re*e1&!hU[3sq:aD9)Or%B"P`qiadLXHp!I0\D]_tl`mr;iCK=DDoCH;7in/1o`+WL,P10s>tIOuZZt>WFQ>[3cCXu\IP@*eEFBhiIK&G+?i6DXIf@OTZc5+Z%VLXu)^HOaX[X8Z14!%&drqb6Ae+"M$IJm'9_*<AJa2ouIa(;^*cd.&I4^C:eq".FmqP*oF:VT,?c2VmdD]T@%6U1NHIf,i/O8gh,%^TU>?qJ,\qs4+6CiKipR4a,5?<JmL-$`as=[!C!:hU]-`ibeM['U.:0Y03T+hQ.2/[@aGI43%k'f#gAL(AWMc6E^o8(PL:V4@EE=%>O'P.)oG$H=,1^>nnA&i7l=dks$]dd55F^_X6\H=Clr@#l`sQ-;*5qEHX18FCKK>`$e^hIQbhGJ?0?PT7/?l[^HQ[]cY)_Ao5X`F%\*eCdqss$>pUj4?[=@c2H$T;dI[Q7H.8s+s9fDS`0)-FU&(BX%<d9%OI!tLXlSJOfa"H<md3]sZlDK8)_[(:KnEG?;PI-S3\Wa;a%HKXR3N80UeogdFl`](rj[8AISI%p5YLX\P741SLCl]_-So\/89kuR-AP=L*S1[sMq)6PR"o'@nZGb1,^`FSiAH[(sBSi@\T,*SM>%N/o;m^:D:,g!i6PeMFa=Ib+V;O3q`uS$cJ.cVMP&n?bmZ^\mlj8$9.iSiqt3:Hi(_oH2fsfTKT^>@K5]^"A`T*b!2aqWqcWZem8d%jCkF(loN$U/F0<G>IS6l2f?JJiN?i'a^^5'D8#qT9VGnhoq1$@<h<=kB(^<.GNhHR>GBTLPt(/D/<.$'YQ\OiGJ3NoFMF/(DSbR8%3ZJp7Xa_=m6U+_LLM`1IqDeDm9:V=\8JDckA&hlhCMQH?C"Y_JlOA%+itV2l._Esl\X^h^2`A+$HQeYkqm_#VE**4ilre8M>><c9%F/OAdoI*$sRBh6fj&SC84>K>6"CH>,0>2HEP[1baOYD@8)tKT*2QcZ`n,1c8S%c;SW%f.th8d36Q3H-FEp:V"Cu&D=T+W*$G/m26%='oqPPb$g]V3jVQ9X0r/N-S$M,2;S*&7(RKIH%]TSCsjA3(0pQ^3$G,+7`sR$-K0#Pdq+C(#B1Q'Ns^<$d-d_?(&N)YOP)J:@P.[%N.&1e(C;UI()h3E%=3HU(L:EYRB.79%s%WCEqg@-0&+2;^!8TncW%i2GmF(@gl$nr'9+WdEO7T"LR0Vq3JrEp.<3=Q3SVcL.0A%:%Xk7Y^\T3]mp85LSQ[_D-VRQo;a!R("S7J/=?HbS+O=LEJ?0$kp1L`]HAm`hTkMjckb<F[%S]>'[kZ4uoZ$1T]rXIa';V\V?&B'+\%+stH-*EMO!IP,Bj`C*Z%e'FS"IF+'VLN&XsKlQeN`PKajl@_?]5F8F.)YWbT6#EN7d[&D>=T2-g*m(_'16PE+7?3su>>l?\(\T%Y%"4po.j/h8eqO=Oi%!*:/=0I/</u-ABENaFL6pTVP[UWfM%]S(I;Qb/^;DOIK/@(;>Y^7/Vjm?lNno0el!kRqp:/kApAY$te617\a%4Xcf`Fhcj-S=WTsd.46Z(h*X77[oG(V7S$n\!XnMT#,@o4\ZuD>PSK<\QR'Vg0AeSKOe5LA_@h6dJ4tY+.(I'X.TfHM.9Gtbk:'c%/6g)&M+0&fZ7[q4RdD'!a[=sPBui`[`FLE/n+Op&S%USAEV+eeCH:%)Js.O5rMilrj.lT'!Dc"9$0]P8W)u!LXD'LRXUVPZdo0D&%Rm2e!4'X]>JYTtDAGhmo=.\F55<W!:Y+n+L:2RHiH?di+j/Rp"::.ms9k=[T"b-;,-SI%rG4j,W4)Rf!=j&rBr6]cX'MP,]/n\El%N-uZ`Y5A*'*$2gXq<mUDjjC#G])"+pT6IX[0<;6O1c`^hB$-q.+3!)f2,]a6LKPfa3S7XZ8T_D)V@&[]mqK*QFa?Cs2Lf6r\npr4%S<ZmjO+q+l5@==hL=*fdY-s3+11EOOq'rX$JhD.K/`Rpng$.q=R+5jHB4o7Id)*7^s'-Xq]0:_Y5.hHEs8P5AI<I_9eF)mp^RQLr%r/^Lmnt[rZU@-cgMi79(l$)H#O'Z+^o@nak0+(M0p=O\f4R6phO.M3kUV&^lI)c2TaG'6=GO'lkWV.ilS_W"MIs`LiXC]cYG(0)M%s40Bem61ONo_`1^%0rP`Zbas3*g.O-PHS<-3]^O$-&]BGEL2%amLj9QS*goqm4L,_mLh;tG=b;)A&Djjg2acWbJ_+fQUt*<"d\W=%c3o,ub9YleAWd:bamIusm4u65Xl;+Xc"1APdq'0Ke7Fed]1g."gi/\VGN:OL2g1VA)nSe\4)gTE%n,8t?KBb/(O9tfW:.Us47<lE%M/+/rR!3dKDZ%r]S%Vc@-I#h*(O*tYmLlkL?"+Rnal4q``a+2H]cmAD[&_ZNM!%U3oq]%C@q)HFU`A;q,l6Fh)(t6=fkbAhPjKL(%3ZbS.9=^"Tac$OJeWA&q59Q-4LKF4C0.g=[C`/Zoo.\;UFTgBFANAn!>qYG@ep\42Z.DX$n$?ap<"/TY*Sr<+7>hKscHB5sqLH)B%Yj>oiSWO/e]p+/Lb";>,l':SqO=8/'bGp,YSLrTaHUhU`Oc=d7!8;BcHT=,Lc>tL+:Q^UIHeD*C(+58[W*Xp"Lk3<*W\$1i]4?'N%1Herh;"B?qE[l?MlLa_sOs!(6:!0smUR)^2-gS<N&s#%Xl,kam;2,0;kd@S^\YY3Pd30pDUK8mH`YJ'LZuHWBB9`WtFooE'Q$k1s%>IIMJahtqIg.nibZ71$4bcmg0e\oE$?H1@G&?DoHXd;U1'5LRi>-#N<$uiEEQW>IAX#.jJ2Wf6?r;CA1ZSTUf@AeG_U=5@;h0/6)%be@FmcPMG9Y.23K5:d,./F)IM];;U@9<Kl3MD6`^kO3$/h7rs"fU?A1\rfg7'+^RYbDM]pAk;#TOLOl7T2dN93P3-)2I+^YZ!m3)%aH9fSXC=_%WDGXIGb#r;`8jE>$>)gp`JEoW--IpZEL=(=`=iN:[QKdY',MEMU1,6Q"R6YQ3(Dj#YX+V&ff@;*Nk1-SE1ri=WMdfe%X#1Z6F!\[Pjf%<H.N52Xb!A8SEp(^[0p%h@JRt$E@MCO@>:>7L;PX_d2bCG^0fJ=aBMMEnUE%'KF3Dn(B2g<H<PIh?0&)ME-oP8^%C1EYDAKu1o]1uNBi\hu73#6>ShBu<&9X8t_1#o;K_1<Bo>'OITD^nZ'WH^'?6Q=3V6rbD!DF4fMoi3fo,"B^g"rWe;E;<c#=OB1#%b1mu;(eIG\'HP66=AA'/:G&3qH)'PHq.<pg*a7u??(9,bD(_Tmg=ug\0DgW5f;_\#Y1EpAHG*E6T%DNPH!NP9++WMh)Y&RFFi3OV%)LG^jZgtQicb\B$ho+8ahM\l9''J?khUYs1T(-FLep`C`ou:q+^ZetAgPYr(DemYml#$*3l>;MB]reU82nc=e<."r-<d/%lX1>LE%e\=7cCTNQBI"gT:292URc.gCK6dM[B_VNB$-ZQWl_;0G7\*i/CXn9)K0uiHtFc4<5)NS[CbN%;.*nSBkHB#t1$E6mVA;BKY>Q$&N%77q8odqIY8_+Q7mf;QZG^S",<j(mWdQO.a7j3>r&o7.&6`l#s2SrR1UPTTV"]$s&:,99g)nu=J\V4e</dW;=f]<Q.E*'2Bd6.3&m%q_BOu$QG(E?Nnu[L?9](3mmrrSntL>?C^4kfYAY0QX[nuJ"h@30rUS\poa;s?A.Usoi_/gB%,5W.]5\=AtsA"Z(]j:,qjQV9ROq4%dTDffmHV6m0j%5o8Cm#RK!pG$Eme.L4fsaF10:V[mn8CkH+J.YPt?[@Dqa!aWN"!nSBc!7A(\tdHf`$,Z5R`dMsBP3;R^-ea0FNE%<DcbUA5;%?=o28a$UWTk\K>[aJ%<K"EJl'>UT">9./;G1QiTs0=gqFR!k8A'_ee/#kA#a*)lg@Y^,T$pDVnHLbk@g8S!]qG^jDpl%@liZUm[b;30OEa+((Ec\^_)RV/"FQF[/89\*Le[8d2ZHheGX0T.[/CYK\k;E4d'^WOHGr1!-4iqr4=EYLDF)pU$O,maAG9BR5GY4%#0aVP/Q&i;W__Ykbs_(LDSXWHj+i^&_@<elkp/g2o<XE$QRC8bB2rnN+_O6;SMldF?t'j)XgoFg?/btURO\,"Q)DtcWoV(.QUUK(%>*XJkVt_Tu;j2TJR$]A54O#&uika?.`bEJJArTQBO=Tm"Nf>7Y<7#QCPtF6^P"nGr=Yh=1e)MD>A:i!.7@u$d4J&g$V],L-,ojS-%J0f@M?"f7h.NH=(,M#rT!#*OTi=MGs.+Va&[TXMXj3a%e>?-3ml2-R5^>Bu^EqmA]^)ecj[c<_!=8RH)"jr#E%cFka!:IFt&%LK+%i<GUkVOl^*nH9Bk]ZqO&5@F&QDpKm!a%g'Xb:.8bVGgU:A]lk\bu=@U*dQ])n!cN#lFBe7EF<4qA2&?Jb_`fRFP4`HCe$,<iGE)>%EK+'Y^N&Z5o\6f;aMTr4grSmV_3Z]RVYZIr]bha3Bu?X72nh9_h`Q'6\')ejjYZN]O%+A51:'1Y-hG>:]29q'/be:HmWW=@<YsRO%gGb)GTLK>/E$OO)D0Vbd@0FWc2uM(@<?"\IoeoL7damc(8rN^ZE(Z2CCWusaD&^U4_kgibp%AmKE)[e.*7[D[E4=:rh;>963igTZ%>uI*'kqc)Z;]XA!9F'@LNbVoAe\:jYDu[uY)no4_e@p4-h:p$X:4B[=\jjQV?><OThT%Xm_=#STNm13[EiJjD^RO-FGk2lG\$4h;%$X9e!e6LP!`8IlC<ulI]#&=^he6/>D4,<-=(K9cpdLFH:Cpu3QGPdje1UsuqPI[]ZqRW#2AHlN$jH`^/_,HmGJu:ZtoMij?:N\aP%`pW,SQ8eM?2pGg\E?2M/f@]Q(;M?Ec\="iE(3U8%f92ISoj3Q[I`$N7!TYj$Fhbh@^!W]eI@oB^jOBHR9ZZO*a_C6NB6>LF0Rp(r%3`keCi4Qes)u":E7WDaigmm!Y:<r/u'8ABX;O=s#7!4ETEA!iQfV9O/g!qO:Sb&CT%2I?#b7*T87=-lD'ZO.^Q+0Q#5$2rq'f-!X%`T2o^cH;SU:YD#ZfY?bjn0o6"_M802`X9V.KK]n+_&mM"]!1_bD2h&P2TGo8A,Ipk,(qJdA+GTWbFYtK4E`3qDsAM,@&\q.7/?A[%r^b;;)`E/dA`Ao7_]o`<Boh25G#oJ=Iagl(IFdE3\W(A0Vc_?V,Q?HCbK9A8m,DhQm9;0AI7n>40_l5;[;WmS>;57V%(ZUpDS_u]%NfsX!DVJ*q@*gJSIeSr`GEW.o8P'RGZbmZWAg0"g!nDXFZ>$/d4Urn52$E)X?#D[WV#FO$Msk5bW>D!0:<AR!=-R,T45:KPONZgQ%`U:[!QQ-8(+n].X>?<Weg[js([/gBIqgR=P?0S`XZ"AU\=ghB.*T3/U<@O6aht<Q&m0Hm$^Xm$KbHB0M;Vp'_)I(d".[.jlnn,UG%)SN-EE(!4BPi)/9ndIVFg!cVuop)tW[s]'ubZO%04"'P)(X&.&NO'&&GN'jQ'#$>>c+Z&^an@0P<0su>(o[]+OO,6VoW1;po?+ie%DblN3jJsO>WABuhX#CL26OR8S@dS,13LNR>0@M@;Tm(U!>8aW3g=*XYBcfCXSn,]9b5K<^d+GhI=9lJi-UnX3g*o[W"lH)@XjJ)n%;J@$NjA;lLIAjZ9AJDJmULk)`3D(&dffl/"NuPFd=WK\p1m\O;i5V3J(&=ClNhE'N[BZ%%B2_g7H7`)Q\+.hr2L5>L3coLhjS5LY%#2jG;*?.HUr1p`Z(V$ol4kbCH"hju%Xss&`)bnXIN_M1KC\8Q7c7M.^mjT0Ck.GhUCeks*/A\7ihl&O8Io9S[MnbJ4f/')[$Z\,"%>IR3t:#4<ZB5u(/%W)a+K?_5WU7$G!!u1Ur>tf93=q&*58=A1qNq%$Pl3TA,lVm16F/2NdP></WNeV&n4;tf:H&>ecg\>6#F=n#D%1?qnI"]t$bW9SVpBDjt+_UH?2f(j,)N>oSt`nfD+kHkIqbK>`5V^U>b`FYT`:;,!P?B=]#EeR"(Ii$Z4I+:%H07*nf6mP5q15bC[%r'gqrAY>#B%?/)EeMR&1KNgH'UJVg\&*I80(R3Lt"KVspW%+VK:'lD7;3<4f4a"#d`EpN,eC0i)msK(9ZCs0Q\]$ScNpL6AM$p&7%I#GpSJP<!oYoVi0=gYQ.X/#Ut(drFG.%En2O^PPmPP$_\AkWpV7G`pZ:K5Z>#BW=V5^^`(HNH>Z__^tp^/Z1NURjUh>+j?VWOi@5%<pTFfVQl`GH3QC(?(jq9=4t^Xd$du5MP?]Kd25q22>(p&bV^E6X7mr(.*FGO,I[Ja3pl2?)_I&\U<k*aS(#@:9Pgo\,MXKl?>bD2%Z0c7I]1TE3Mm8ksDLC1$gpP.:R,\U!P@`2h_,V>[ClOuT=UYFk?o4*tq<HHXAsgb9rBp0dnTkpE?Nat[nti*Ne:LZhN1mf+1GtB<%;j!-24*B$&*n82e&s80TRGlj0q:ff`d+1+#s3NfKFa3!BUUCBb:e!n]HZVsmV*<osXY!,M],s[7Ju,fXhq2/H:):jGY?+[lh&7>-%RWVF:Xt8bG)c#YK#]JX?8e90d32LU])$N9k=44tr>ssB7lW10s60ib2gH\c*^<:]-3>hFRhAi38:[c/D[`PtUNW`#B$,eSLRTiRl%8\Bn^pJB_+kRYQYNZ,sU0f4rGY3_T@>MmF:.mq*UqCR!EODJ+@eKgR.Zi2#fh<A<(+8J[pc,Z!*I=1P)HV)2:UR(WkX/k/Zmk+#)%qM<s3c+AG2Lu$fX[%:>!mnH]Z5Gi\^gIR^g);_tT@=#TS2?J<=PGRFZmCNloO*js7cdc^$]3d[]94%HqnN<+Fh\,9[Jpg:rn+'lD%AJrna-eO2fKB+DLRmc-"&F<%Ins6Hbp8&\oF$iFhD;VjQZSuX#DtPF`d?gau)pPbXX&[!BX7+Ss_&W8*`plMk]Cl#"@%_*AWPELH%`mlp&M#X>Q+AQr,&[6J-bm+_V^qG/!J0*RXEDl:+:YWYTBp'P(a#F-=PQu"=V/oUgl0Cn7>ogo)%0h!NV;:ui_;i0qriXlN>r+"O%_"[/Io>;A;!q0kqi*?t?LWNm9GaAQi-%U9El'DP0`MR!YqSf==&pT`GhA_b@Rl4bf0:UT*bs6\#M-jhPG7l#LCX7gp6_j6U)i9-e%7P=0XRYDK(<f3>T$TC1/E#L0f"dtFId9%P0/h0KER(cI8Y`Y#a2%K)=O.oq@fIF)\?C(f5]NeiUK9QD&S0_p&\L$>0R[<&fQfNuM%FVGFar"bj,R0GX!NKA^UIsK;t/'lI;+mY)mS<V$XAK\hRe5XMkn\#E8&\EHV<\4"=G2!1Pis+aejhI#N("ogpis=Zjfr0&Q*A@Te%A_/t:T^^mqppp8\GV6_^gG'+09-jO;j^DeTs!AH!eEG%B)Gh6<FqY&4os&$S>"RF"$aXb#_8LpG)F_pe`R=L#HEAXNLhU.hS*67L%(f/E?k2BV[AgODcH&FS*0f[$VB8-=1?jMq<ptTH*@W4l=Y%]l3,Ya?I<JPKiQ,An"G,B\<*B2QfaZd['\J>5Lb.;[;Ki!bq=:A>p%ho'Ar#8E`09:F\+TfgL1P"Air9RKQhgRa&8Q97Y%WD7H2aG?[(j^_&[jL3ppe13$o#t?Klp.rFu)eF*mq9>e'Q>Sb&D_-3sF:G*t%[[!2K2S$MfGppkZFZ"5"<DB43A_j+250D4t86;3a-Yo!2Rqkd%dk6d[``;F^A!3_5!t[k<8"pL>E$VaKlXUlt5H*FSA!](hV`*+B%k[(?Cn[2EC5YZ:B24(UA@WXuCFKR3US-<XCH0ViT%ngQ_/K_q%0B:MQk&OVOWN1q-9"kbdL8O6GEV0D^VTih_C\f\cBQ#'(MW0_Z%q;W.s<8FKqbCNS%#tm.P(-*P)>j@FhC/Q8`]?+RWYC.r\6:c!_D`]sPhoN?tg2W4N%cKgFlZ&E5n.e5gO5&+H1ikl?\C@ha0J1g]%YK&5jLTAO?\K//m0SE#-4`6D^/n[6SIbOjo6A%c!mC4b=U[3l(qc8b^02-_5#.pH`"],nSY*jE\72emVI6>noQp]sclp<:h0hre0%Acbq)@m+Zl@#)'H.Q&BKc^\_TgVZ\9c0OYW_O`KIKFK-g6oS]%Hqf3i.iYu>3G!5W;eoS%Y1?&S$XGi7L24tpiM4`YUN[o9WC"SH%2WfoUhbl])RH&r&:/qNl7R424-':h[h=So?:ISToaHbQ+*!ilM3=,pP2b$[=gF'AJRKlq*ST\jXP.afN1/\n15uJ5a@N&i[%inkQ%-;e7u9Sj<3p!?Q0oj*b85''U:3`c%)C)'mT>$*HEO_XmZTn?:h`f71N``BuDCLqm-WeX>P1r7cW>n<L#VC185\"5Tk;(4FNcBh:Q%'`5=:l^;6N)3k$Ab,=3Raj!\@D7oQJ@bCOUD8u3;'p<lNQ8^NYPR63[;:V@YB9"Y.L_<o%X&BsQ?>gpUfsoU5qm>sXbq"eHbea96%Y-!\R]uK`D#0B.VSOL#8aRpP$1T)efAEoSHg6kl?A?Pa$mE@$XZ[G!DVUL#s4g0:?C+aQ;]`7cSgsSd/^GpSN+T!e4^8$e<K'^)l%q_#t($aT5Qm->Eth]]qG+T!e4^'h78K'`BN+T#JrlcY]reX(P=Wn8)jC+V0rp`Yu0m/cTPmp`@>:m9h9\KZB#?&o%*49i)cU0UHq%nDuQY1Ml-RmWcbNA^=0qgO%+C-$aq(.rKn8BV]pUd+c-k+*-%tSbf%QbPlkQm"-k%,c<9:W?4TMlH%HsP#DTaJ&B^lC#m&'jO@qk%:D-Vo>>BB5:poaI6+)u-g0<1![T(XI.RuE2<:c-Edi6&E4$iP&[u(ciWtE+?eD6T+J&_]BZo^QrAAeubWZ0W5D_47tAA@Rghfi8m%f-R@j#3me.n*ql#]$\&)H+@M#pK*dO/O*65Q1"Ls/b=Db9>u9s`k-X)`qt*W:*$G/;0&[>P#Jguod)WkDWnC7Y6n\%7B;=\'a!V_%2@jo;%fSR^jme>L2O7sQ=U/N3oV:P'UQ=-3P92ZO`n]RoAc+g2AS'@QDl,,>>Q#\.S/^m*MqR51dar@6W0b?3%p-3<ffo3dONa'=%h.dhR_UBqpCt\fe2hQG\%@QF?"/q[=Pa$0Gl/dP4(=;8",Ci`tX+[4eV>)nn2b$I;5"R7C=O8R#f!qP?B)Ho/>.*maG%FLpJ%.GB%-+"JghDo<gShiJNq%C-roX"\bW0sg]?>1!.9[eNTX]C"4>O$:,cSp9\_skar,ZV/m9jf#>NQYVTD77sWN1Z/jdO@H<nGK*WW^G[@%fU_u\I*;+CIs&s0?.1ePf$d3+0b_QJ-i#`cQIM=Z5HgQXbK1B\9[LA&g!VB)gb?K\Zb_UOn)Pp_GeG2G*W*+n&RY#)AkNuS6KTlm%Rk9*cS/_5O@HD-phhd837s_&O\Xuq5$:A/l_9tk,=X<r:?9+fHn<[Dg,rWB(T6[d+mU-!!Li3MMj_Y!lWd"Vm]<>1HTnu(rJG40f%6Go*AAqTi#jed4DV"#mtg*osObIakuFh-41r4%\"Cq'mV]TQJ]Zt/XT]l)c<(snJo@Tnq-,8Y]3?/UngolW^0nB"qgdWJbY)DPA6%hJp_`)P4D05j11!Z-W)ra^VRc%VFd%G8h!6KCot@@X*c>H<PhKMO16iSSsr:mtT/O4dYJK4$YN\>O$:pZZ2UF8lr"RgW<nppIS7o%43<t&Mkg$uk>]I1Y"@E[?;ipc@N3[?Wmii6CT#=bV*8O:G(Z>&4^7d4N@%:nPh;R,:R#ilI86&_WC_=nHFB=jH.8`H`h]tTUAX6.%MGJRjbOf)XS.+`GUp\i3H5l$8qE;48PJiGmBiok%/MUkm<[jXd^tO5oQX'6J(->]rPK1$Z)*PD,(d<;Pb1RuZL`]>ll8Mpp5IkQS%iP5<#KP2EK!pICk*PXd@YQ!FS?Pi'j,s8MeB0M:Db^pk@@#$;c+U`J7m6`Z;G0%]BSlr9bQLN,3@tuItNp:9s`iPMPY:W^+b.]2!%>\bK599IuH>uKh<>TW:Q25TKUj*9%kb9@PAdbaP3(Ajj3`jRba;KRe0;)IZH4IVpYl9h(JJR0(:.t5\mT<Wn!1U&#c5'Roo2:.n5%dj/P+2#N7qCUU*aNP-tq#o;h*ac.Pr_tZj/P(F<bZpruZB$H5T2Zn=J8l\3\27*?d0bo[5UM<4I28Yt\.mo6_bJ)P(>Okh(CpHOS%#*d;ghZ80kAM+l>-_5"skXcAA.bklrTSTCfC"H`uWRK[F8JF%_FK#*\#jE1=XHmY.l6sN'/adLi9]^f:jBDD)b)YO<\`%W(YCA0&%kZr4XA*J5$0EC#CMT/h6SJ'(l=_CqQX6OVW+4WoPWVjri;I9lc60U5_9cM-Z1iA=O$8#&U-2_'n7a_B9]l=5Z0EXJc*dE5;!GA5`%l:,CEYintRNUU+"K+^k3&okHXe$dBXWNFMl+[kCR[0dqQ1nf)83a29`Ftdj;*+NPugN(U(]]D0XamO;^El4.SlH7tqjO,5-MCu'2%h)B]Irq2>K_/4mRXpP&RK!?G@?*DG35?`<^2@,'F9'esYOMn6.0Gbc*8/ld'TNut5FaTXdrMuH19hp:@ZVdUm9hka08),)W*V,J?%.LGC_\.PNiY-+eU$p,]2\gX[W-9uDa"98QC6r$4mah$!F&kd9-%[!LHKc2QL4ocLZ'_RD1Q]8jH:E$,o)OgO18AqFkG9R_Lgf]h<%HD2W#</C_D6DtV_0Z$dgPf#$J&Y1O7cZ#O2p`eIj7Oqjq#.r8BlKbCZW;"""N=AWO7?C>roUq'K:humgI\DW+(_ik,L39q]MK1n,%Ke)Ae=GTe4VJXe"[FQI'E:V(XA-dJ^B\51G(r]q</FN!<^`EFHm.\I<^3IO3Dto+G%8Zq'Z,25CI,Y=%NsE<r-cX(4mbag*_)sPP%XEZNSG^mK0=I6\nXg2F32t_dCSR-8<r0q#37RQ$`(Ymj!$Z9kK"nur]$Qc?5qN?GYqP-ui(%A)G_7=_k/E!\0:p:C:+Srn^If$VB%hsdc?K):!^(iYBLr#.55\'#09/RIqc$iVJZE'O&JO-@4M'VsTZV+^(WGL[hc<5f1R4h7V=_>TA,i4Wpq"%=E"U"o#=*urr*FO5U+%ZT>oS^goC,YYfQ8_eU<uJ(Z(1",G;aG%AGj/aa8Jk#+S-m,S9\:M.bH3Pg-&C<+dNU,d$J/,?Zk1QEETIaqV@N]"I974cDlCAd"(%p<)Dj0Bs4aTCB;K_mIfM(O2RYHFk-J[;.IlTiabNE7`*Y;#+j!3P]**Z$8j>/fr558\d8Sklr3Ql^*45)Z>Ejd+4m,=/.*h(TA9>%q795%%=j"pah@4cpTK(LqCohAn6lZ*\b\"VeusBNPCT26/Y.VeZA\\.66E(TbgsDSU_Fu2I@+st$>==WfZkl;<9rk'LGZ%&n1cF[%B^_3,5*n^nX4F5joA`:h_EN?(Bn[p0n\U3+lrspt$%p^2U=n!1pdFT>^!QWkS]6]&R=4MRETpr=U[!.YEhZ2GNK\5hX[O/gZk^!V%o1;f!PO>-Hd99dp&(_O4nFPhHcVD5<5<?J+06mCsRd$Ias5DAW0CbA[J,/g5Fnu'pr:8`V]H2Ll`NumXeuSc@f<8M^^,e5:piV#!%qW@_/qY\gCs0e(T4ukSd4t;`djbom$^%-q6KV,C%lK-"Al8tr^T5@q>"R;aXVDj`^GL[__Mo4g++&QqNlg_g1[FbFtpA49tet;bo%="ijp3Y1,<Q@HQ7h#>jij,9ZfL[/$6ICe-rYq1Ml)9I5sO\7m7N;Rpnn.R%es-<U'%]&Nm^>A,)DWB!Er+GramOc+2n@b3'^,E%o%?e"[shptGEYF/HFABZY*pNGGClh0fADs6:97DsY)n]11reYCIin*/NoVu0C[m3c82St3"oNoK$dhk-`Hs#g4/5$`U1F]"3WK_k'4%UQ_%bl[#O4X*+C"5FW"s<W7JQ=NlHE^-*n#>CHKap">\tkN0H;]!Hm6E;0qjhj6o[EA?b&(Zg2BX``d4-YeP=p#rpPC#&RG7="Mt%/s+X[7==DIJ)5=spD8)3PrJ(P]K/(n^#n\Rg$>Dk9<Q9iI=#p^Z28Aski0V:Y$T!cr8Hd6`n0`9>d\cp<+P6+Z<#/VCE:euG-(Vl%B0RAA*945gcTV9ir;2EDZ[Zou`b0C]Qa;V=eq[o"[!5XNW2F/dmnS?q?N9o=q%8Zo*-@hOX_a*fb%1P<C:qkof6uCdj5%->I.`>>%n^!9ml.aQ!C<Mr6jm+n1J"DI]eS!u2b-o)#Y?i7lr#n;X62<oS>%L+:K9GSQPL)k+^esNUW`La]%LT=lf%btLGQ-X#06Zdlk_(!'%Rq6q?GD?bT>5#o"dHZomQTg\n'l=$0qrR\9qXiIADbde@o%gm)C=smtS:*Gi'?]oe[_3U::^:aue(Ph3J"7)?A=g8;2u3(..k[LF%G_^)dpAO%BY,f%P<GV([hEO\D[hnV[K[VXC_]peuo+g*5ST7a1Dn2olY=tF:O5#5-.a(&.pAdcT0cj$[ZHfa-lZ^B6/mk'@4SACU%F4[MMTA9>+q=@\R$g;F\[Ubs,%=brg^eJ]bP3pC(-RFgJFX`qGIs(:\bT$;qJ"L&[`,B!93&s/`\`)g[7/>(q\\2WQ5#k`<?2k3%%`^M`!$dfC?POID/BYFupKMD%BT8_N[Km8MT)-)srIjnT1gK@\'&a@?rh.RN"qkGl]IF(t:hN&acXoItHqXg7iced:?Ve,Gf3;M^c%C)K7c\IUV=M>L/mjuJLeX\[uh;mYB$F?]Qf0E59!^.'3In.iV8p#)1CZ_.9kr=%Kbn%]dMnOgI-$@c]\a4oEuFilpc)Vs>=qp3YJ%qQJGmgO#f@ml5B$_0Oq$B<MCF@Ll\G\)82onjEffX(RY[QN+e;H5F'GRst9*+E%2Gq"XO(dHL\%X/doQkOlY"V9\(jS>/N"n'9&1%q2PrW(eonQjP$r'`*H&>PXeRrQl\QfbDfgI(5$i$7D==+1*n$18n(.AXtE+FG/_Pk>gH*-^+@>XhXa)3!.Bn?jh-N?nRM/R/n0(q%43lYn@>nRkNZZ1"=/!&%@eVpfl@0imi-XF6Xb4RtM2Clng6XqJJT0H)N.#4)a:C`.qT!@Nq"8t+obtmJm!L&Ha<Yf_pBat?-N!?U%'p,[;6:`K\9.grX$+>,>2ME`Zd$.Zh3c"`>m@j81#!N4\:Y=T%W.s$t@L=GB/$'%*WnNB43lb($*<!1*E"@4>6?F)&,sW.4<V>/=%FYQ9o;WJ*c(MnTc&GV#C"L7\PP2:77TpSBj^ib>!!>kk&A&/CIej[/l#f9nmaFfTNBKHV(.Xj])"Hs*c;[/pO-q>i?m<4`D;+UF;%#5=gi^8$8&a[IPe"k*M)XfHe>+Y6Ta?Fjt0b+cFjkFe<X?1K\H423'jEUOQY__U9H1?2r]*l`lJebPeJ]`,)0$&apgR?@07V=id>%n\p"6[RfSngQ_YCihkT*M<9u$*Yogqjn.5&G'%Tgd^KJ%l\gZYHiNId\*39.s#D_*r3&oljZi_4UWrL&h]?YGbpWP]ioji'J%JE`%ZkP"?BC>H+F'e>g9tTJu^[85=><gSlGL9qBo6Ylo@-+EFL3i+Af>kos=l\&[7NaA7a,R;"g\H/DWg<mQ]3\H.)aKfn5H\>jjH"q>%D9ac3SiUHnG"A/A/r'&%(Y`K3-m@[(BnY/50)k.ofCeCIJR38(mL9E$BY$&!HCM3O/HRD8W8WLUkl6.thR,AIo1IKT+4,L&<@TGA%C&gK]_fY^,/9a0Jlu'klFALG7E'Ya#0d6o>6-ATjoi_$sep[W$+@pW%1X8t-#2Xb%hTpW\lZfU[W>6YHYL>9#08XEbq5_0ofl)@?%pXua"ebV"7WU.J!(9p<nnTgJd%cr<!D!P6C\X;0IaA$PP4LN[Q:K><p?e'."YISl>oCe8mim5f>W]Utk4cT#bkLl]hrbA>mcdTQR%j3+7*8UTq`;E7c^NkYM_aNA-Zqt*"10AD!DJa##,g6S0=83N:,)p]Sj%'/ZOPaRh8F.MuK;V/uHdU3$Smpg%5M^XeDCJi+RJ!(dH%Y3GtkI@/"68O[]$RC%:An630-@iuZc]#/[B0K$?F&'@S[(e\`gA<U!):O+"qB6I#&#C5kEO3+^'8bVK&+t`$m[g"bUl-t_jj1Db3%e$^BU/Q^`2[N?NZU\NX?o/^r2kNpg8RdE']USV+AEs=;G7B/7Qrec07Ch9X#.iuX5RV%!g1VZj?Mg\Q/>1mQ%A*K5?N^^3s61cO:%!LZ5t*[c!_?hNG)bYbAZN=o/6lf$>8lZ`1hhnB#Vg.n9,oBAQLGaV.WrgccU<.*72O\0gb1ZQ<UL(:/-lA)%dPOiHLGb+sV=gWc(%5<G'J7([\=o8TbiQ#[k=AY55I-Y86uAB[m!-GO$rh@;tRAbLQ<QuNenZT6a4;mMa)/(qg9D,\&Zo!5PWZA0Ao$Q:6/p>!Y(2BNbk%g/]b#b,@q=Q.nhKeb\OXa3Lk#_!mo@`g;o$?N8ZV]f4gSp(ubq[0gZg;KOfMg9"=Rn-IDRHU$akg7i7sa'uJO!tPOqn5[``AWb%\%a8/'h*!38>nf2:W*b%(;j%Pm9&`]pEM<pHZ^=_S.71FKsr\;8)rZqB<hu67*]MCj]dMf\B)ld\+A>2Ct\m0F7SNn:S+Zdb#KDS\#%m[:`KbmqN/ETg1*^u_T5O$RB'P5gf4./D5-,mlQRXF'j(D,\T+]T+R![f4\s-OmK:\;M#>RO_T0UiE^ej?pNGe)[NI-%`hJY9Gr0%'T'i"8a0f+Q.pbZ-P>#MP-LKH`'?iHP=HBC^!*fes/7!E]\ZXe3o[$6[&WHa<3\F[_]!l5e<sEB'rCI-od&=%9o9<hJ*><_3OY]T%Aod[ef-Soa%ipZ!Y).8=hFWs(U7JFA=Wg:WRt3a_.u3arT2:ke44DO*:6-DU2YLIEA0WFo\S0CK#qX,,LQ6CEorN0rFd.W,l*FC`%nu=J$ckI_2fS9[2LUIX4E`W@:J5.;mROs*A2pL=Eg/KZ9[$p9OGLg$a-h^O=E4*&EdG-+E_Nnl@#H"&&p8E/Mb'3%0"S=c!Y0rl/%h3nA:f4/!RaQ)'VDA0!abEfhtFQJ5X<0"6Gj'X/L_>[Er[3Bnp3-eO648M13\QO=#b'o^Pqs^Mm:\_uRk>u<R?CuXWAu5<6DWX.]%Udo@6IGu@*^GXX,5Fh]DgWS4+?[^p:pO93Ar#E6Bl*in7Q#LRe$$FZ1AY9BakXN[Q?Eb'dUorqCHj#Dsrt/.)Mc@(U-iL%\WuUA$%m2:_fP$O=E<BJ"DEr*PTO//_d%X^K/V\!S`EOM$[Qt`PZnpA/EV:^6Ul2De(eB)<h_)kGeBoD:N&'NDJqBLiM'hN?@E/&-"s1><C%oj8#cj,!Fl8jP#Xi]/FcJ_3V-^Ud`7L3<NWG]5qmiA9,9O/!p'gQ8bjKlcW=YC9Q4O44,W+PhDC:gkVllB!T[6^cW4SAUW<.1pOf%O*KT)%>;0]a/QLi(eDGYhgrEp5q"KC/G.Ek`R[Qh`@A];s#p:5eM\Vj]Y6eN8n?>@Xh!*)=RQ3/W7Zd8TH.8I+3&-#R2ARHD6P5)%+1a[im"bW@i=VdZS(?-hH`X7s=#Vt\ige!4o$B)hY_'nI&]:^cS1C%9Yai`PN##T-p9efPF,+j$l+\XH3&\c='OWrS''@HKO';FB%$\1;`U=Ki\[Sn4G?2rr(fiSV(g)kcl$C)SCOe9P[o",\sn*\2P*[^"k.qEnG]CJ71eUqfNDu'.3d<s"fYK-Q:?i8p,[r8JMEq[,G%5O5_,pu2(?$.3,XbDYObqYu'FroV0U?,(c:@oE+=hn6RMU]:/\nuqtlJi=d5e:6,dobZLj?+ta\_r';5fCE!mr"EOCIrkS4T(Vs9%D_BpQMQ,t;hiO(N&2U]nrJU^HqlAm5hS2,Kj40-K+ehg]^o.\bT:I%mc.0H#DnqUO]6\>*lORp;KGRZg03H<l/Ni^lIJ3Q=RifrT%G^3eFm_sZ%U35WVIRd*Sh!r_Zhn==8mM#?mnj!0RGQ2d`r5q7^IsrHV]//f'HhHs;rSUr\H$pUej8],-V'8J.?jCN?mQ\HJ;4mg8%f)3s/mDBOK\pASrga;pur;cE'DZE!.T_dKf.pJX8^P+uO%j/]=cWU&?gYY-jiPj"'Dm,1<HLIfgq4Sh%[kGHO3=tP*J,dU(rolZ(%>Ui@KA,P50@6aXQ4rgiq\bV:NI<)!qpg7Ccr5k8ik3kP*dlV%ls*^6mp)>&*#ljOB+8>.#c+E:CJ#f49_>jB,G5QRPJsY*8I_:"+%l$7T'rVGetDh="s5B7euhqBf,?2(=:qsMGhkP"B?Dt!SkI`;>R]AR<AQG7!&n<oL4iO@_Bq(Mcc1uOA'?2l6o`Qt)C88>?c^O::u%CS=)o-GSf_+ogZCEsh*%*i=4rj['R90RNgh[X/G^&[hAT0/C:?8Y,N5p-o#Tf[p&oP@&CFCGG;UDf'q%qUjEtE#"&$:Oge2>s[&V%YqJ-Bs7!A/]7+DTPFUrgIf$uEg/!1UM=]\EjO50!^u'sN2:_@!F&i+p:>bt.)Z60$_aeT."_?t,Id)ONE`0Zb\M:S]7)",:5!GP9%q%R@bUEIb7T<?JBJ%Bt'7KK-NVf-hRo#2QZrk,o?\$NPFhqMPuNd6D%rpCeF$+HH)FS5"Vp"QhA/mhr!IWimuJ)'Q:&G3TXfAF?X%r;Q!J&(baV^PU9$0=f?9l=_\crT`eCRkNZ*?%2JGmG$)HS`hAKqsrHIprBEompFqA,!;cjd'$e_>s84_jM\ggDU/jnp"Sdk+8n-h%^cVR`<S29eT]9h%\pXJ*jio_;rp+u@_DhMRR/V$-rpAOp5<OF(C\QiMMg'Y6^$j?;\:4HQeEgi:m&l,Y*-ZjWq>/p*Zce[g/oR*L%R.9aFDr+a6qs+%>p"SA2+)RJgaFXq_j#:$ms7a]\p1[ka]Cbc7DYVi(%drSJ^Unr<q,/9Mh;@)f_7/.#H>>(f3_f/eY28$J\Y<+s%N<K7!9)ZZB]t7S4O8i6rF8)RSY2$4CTQeuT(V*hIMf_I6rV5L+s7lTTb@;Fi`L_"s@fQ;snMjS3#(18]H94jt52r&Xa8bi3;G2H3%];qR,?9Wc'4T":>)kG<E1\-02s*Pg6a-Z(u"mi3IpNFNVbF9UP;B<eO]X`Fhr8,b;CdWS0jCd'tj,<(D\"CE\EH,1%0>B^Jo)62d%;bZkUN7Sl\H[GSbk09`nc=_Viqq`+Om,mrP?<UKUIXCnah07J;DkEMPZ#+be9Yrplb[5gC>0KeAoQsB0@P@I^qo=2UD[2@f34O`G%5'q9jD(BpDYJ7q)s3/N4pV:]lpp8:oe=Ef=a;BDSIJrM&gR7calU-onq<:(iF8<iLm`gYkmpBDX7`,13466V@]sltg,D'dWn&3q@%A+O7?p?%i'Qd9JkoRrE'qB.h;j8F`tHuo!C*?Mi9"P7]2MYH0&+(PE3Y2::SX1HLG!`*A/E]LISqf?,`9qQm`cdca=^H]p/lmo&:%I?L/#A#18-mLNt1FKBt;CIS0lc1eDj]QeSpp;`Zg5QCPrmD]Z\h1K'a-i']J^V@=bd3C8^m`Eh:hfST-l&f'Fhq-akI.uXVX%URB%&#S_M`rAs4Y`D!Ec-=5N/ApQ>h4<)Cn?[UkF7K5-GQ6YlnD1;Ji@Els`d,,))d9k#o<VL7Dr+h#q8LM^6%QY_HMdX-c%QC::Qtau%\(t:[D&eKZO+5ZO?ba3trpn=g5@:#kZ]G(Ok5BK_mlib5bL`r$n#OBf0B_(o+6kY2XZYZCbO`qAK!=T3J"t&t]`V.3peP`EYMVIS%r_VA)qnZ"*cbE"t*b.97WV:l>W*T7-mG1sXIeUb1gF#5Yp!reUbWN00/B;0Ygt[;T=PD\DFFX2nG=M;meR*h(`#?9t:7dt\+56VD%cTXP+p.dD3Y$SbiqF$b_o&1pFD#D#hDd/!GFDJNDdJ;epT<FmB(:ME1:3q,")W)/*pIFtqjn#O^=&0eeB&\\s=O039:-F"8oM\``%GF*54Z0M<7DG!)Qc/63r>'P(CHn`7+3m"joQH=JiE,Qg(dAM'apMRa**7U%jnlqma,9r:cK4f82\ir=8DiZ4?N90q5kWLPDT"k<D%%rOS=QZ%o<-d>nH;pPC8lFUC)oD%G9YK[TjqUbr)rcrdC2=OCcUJqc\FS"q^`H-MeNl)m:ol(\<RC'X%b;Chf0eaQ5)+i0#^AI6L%Dr-pBHi&rqkg%otS\%!FbP%\IYNuOE?mRr75RlL+kaONW5;%Y#:@M]L71c(;cC]@[-PffK]W8^f5;/q4SPK%qT7&X8q5ECd^PR)Z%636=P3)cGQ`4N4"oLU^nhN8$b?\-ic[k%>1PE$_khRI.kn]s>roSs7NM:qjCk53fohVGM6XT"b9`8faVn\+qg"81gPe!'A#lK6([%Y<TC(5'H4/8+s4\3g>2@kYLECB5aDL>ecPVEp(,3/F].lg'9;"I.ZIA;U<%%G5:^oihr]gKsuR3=hf7IF6t?)2N-aRlaQoeW@pMs%g.]6pZf3@N/ZS3%&+a:\B61(&rF62Pp45OnT3=<gm`ipfpH!BPs37&!Rhp92c]:9Sg$?Pus5[(+@T9^YHpVmhf:AYQh`6SmaZ9@9%:AXbFgEU'3^A7CJM;S8N-e:](<->TU*kskMN?!Da6%2]S?+t]3GhZ#a0)b^Mfd1QTY-.!qqW';JIXL\*VX=&;T-4d5rD,XO)ZTBa%P7j@?WF;bnqk*lHn[3Rir8A(a+4oCuD5R#tq7RFr.d8jsEOQbOK-,P`q9p(L7,PYiqXVH*h_qiil>`Fuf>hLi`TnUQhRp0dH[kf<%a2`W,qStB8>sEhr4DHV9=b$4k5Q8bbD?'.nodfpN^KePPn_:r"G^Sck7cHUnW/@=aIeO)../_PbN;$gKiclaMqqkZYjg>3c^6Y5c%o"44[T$UZ]>N8Fb^OGnI]fa(p>ebZ+aJI>*VdB5%h0YX4G\l5$RATb)PPON?"KXd7pAT:NkTc;e+9;2TXhVW"IJrL;)sl,BrVu&=%f?Z[0kE5E4dbL#S0&QWqnul,5T9)+SlM[WM.urc$GN<poo%OidHZ;!:o[KggX#W!KoBd(W?[_\Fo#8eAce0/MI=(eAce9353g(TB%hT6%N`k^pUO%o.C0D^<*Y.lofmXnitO59;)]'N@frmbjFjj)REl8'NkIImG"mIKSpn,=^S/_9I6?)k%#nItrP*k:%%O,ijH+VeN"%J,Q985Z!O?r\mn;mp<N?H[Er^47U'IRJV2;miUE^=ht'0&WF6/2soM9nDJ$,qBH(&o)o%Ph-#h1"TE`pm#Oq(QH.Fl)s'EA(]9m>%qiC49-TCCI8+urAI#_qU?Oul"f?[/[^A.;X_qKE?3I^b_q^:K<^%g'?H=t"MS^<EX%EB=#IJ`#h"Ok,7+t2s6^l(tpc]@J#Ns%p:%]2Ic-s$_'/`9OP`T%tRLq:q(^7pbX/^BJ7tqCD#G`h-3rp.>:1p"dBq\GAjG`OA(aEBc6rFS>-XX0_<`cg7$up?C`+00`^T5.eB'%8RHT8qFmOZGIm2:DHTqOQT+b"kM<VVS5QO,B;W*0>l3t![sdbu^L"Z>HXe\FREb/b[[k*!KCEN&07L2CYIX&ec;ah!1OJNRrms&&%aqi]PSm@o#G\;5j?(SaBjL2fQl[/HiNU9JJ_](IX\']['qDX'TDP-%Zos`VC]XJJ[s7pgp05f(l^]%*c9,AZdUrT`bp@cIp:W,C[%=QV\Ss,$@@c+D0NcVOA`O8Q:<KLf?sH938.If3e&rkjl4Gl<:7I#QP`S2Y@MkOjT]GhW(:PK%.df6<E#T:")k-h=VkEm\:KjE$sj%lVF=$NuskaE9GE9>1\fp6[*,,UKP4Ta-f)^`H]Ogs#H[d@F*gkUAs/,q5_[tNot_.#L[7o\:sJ'8L/c[%LM'?^k"G2Y9-#_mR*S[%H$q(6H3XWu1r2D3C\5kWfB>TGR""b*bhk)Bk>Y2@!Wd:'lJ%M$G8L%p:L%c7nm?bjIXQDdo)6T0Gk`c<g)od_[9J=,lg%c.U*Q6C%Td")M%u9(Mr,]mIkj3[lmAaLb<5Iku62gC<OQECt_>'UH7Jc4GJ,9goTFb<<QhfU+H#d=W=RQ&nFaB?sjM1\%a8,J];P/HM\b]WZ%qGTU7YP![3roT\_QS0F"oqRYH042Hkk"9:QOMu_L0YVU$c1bX\oDbQ-BH=fKp"R"A?fW?Q44l1J4qfdT,j&`F=+Bu#(Ven;BDM#A%IeW[Hd#mc<JQ`#NYCE>84oG"Lp0/&+V*EY:m@XCG(uV%#88$p)r6Klgir'\ngNsmUDh?U1qp/n%Chr0kh<N[=SIk>`ZWF`j/saTQ%c>-c'ibILtA*%9g>.pkK[50P[>dT`M?*!!0Q!2MJqEf#d,07lL2%:-loWpGW^$*'DrA%a(4EPc[=3I%UD2aCCk2PgY0&!64W7c73%3"olS7G_<opM#8]9i'QU8!f+COc"%J];jJPDJnKDVE&e*I6mIU(]2gQFn;i(kiS1"6K^!S(VOY`Y"fqg."6)+aZcQRlfRIj&Tc\s%M\trrlm_4gFnSLI*hjQf]"5kWTt>LaEDFtNLm_[i^BT7U?)nc<DeRr"oJD:L1<g1GD"6bXM.s?eN1TYnH?Nf89=*`I_nUM)oPRGh%YBemcUoh88/P+L*F4X)B^H7LN]5t^-U3bbcFYTb=-h_HT9C.S\@hP7A9:0="j>NdFCOU)Vd]u;dVHIE3WkR6MC6kiC=5,l2b>n+%%?b;s#]>6DSB90KLb.B&tVJ\"En85@8p'H"Z\Ve(>:Rc%02D<X!\n2=*7F.pEZTak:d%BN6Hf/3WpWlLi:]otEG$tL&95H997a:pI%H[+\8D2WI-/%aF_>1me#+N?%G-K_,+-]TbW+Q$gAMm.0dWnenS2;9Y!<a0469[-/Z'5_76S%;tM/+`0hX*qqE'5]Ma`HDrCq;LCB%M\\kpRm\3=p9e)q6>T/^2`lH,?dZG+<pc,.[5kVoL]V5SG<3.V%Q1Fq[VQq:Y)Tu60't3VgpG21e`Y<<W7kFfASQiV+*=bt-MeM7%_d4Cms0ju'cKhb@Nnea$p31!/BT>u[gt_6mB9'`TC(g'%XaiP]EsT)]=/7#5]5h=5eQSBVaLh<J[ZB7="LM=e[R7GTA(++ipb-:7%g>CT_MA6sEFj4FO6]?tI;3GL*cAKlr*kF80#hu`"X0'3ISVMXmBZJds@c"E"oS^q@gMtr,K5P`ha4/PlT'g&>@Xqq`dCgl&7V4L#%cAU?AD:D;(T?[*th`cs$b7\/`R_RNF!$bcSh6qh%?gA?@-EsHhj6QQoS.%Q$RH3n=inMpt9Z0mgh:.!hg*\es[Q(q.NU*mV-;eBq%gNFg2]8>`@`up;9Ko*$@Q<o;AGKG"'/Ag,:cdlP@(2ITM<R"[0X@A0>6u>%JIm`RKgtZ*obulNF<GH5D+8F!D;[Fs$X"V$=MVl+Q%9E29/S_>-W]pQ*^+</%r?0]\3X@gA=(C4OH(*,G!UTgni+74nnh`>"+ko^dLKIh\PQe5Xln,.)#j[+dWVaKL?GO&f%&?KTAU*iR2%<WAI91*<uRKDh1N>U98b99%f(QM#s<f]5Wc%9'aL,>>+t<q`#j_B\rDWglA%EQTnti@\[c9Ye(LH`,VSr+;GQ0tFi15;'Xg5'<dj%Ecm_e7+e8M@8$6NZ,c+Z99S5GR)m?OX(@a>:9]K/p%:N+G-WTUC<([jD"S6T<eT@H3nR3AQBa+jeUO"!'Sh[n<eKG+Fm1K<LWQsB%^,P/@,t;#&Z<2`Q,8!)d[S`7B.FOQW<FVrPM"!cAqT4D,b`D^rS"!.e2g:fJBjeX.e."@+m.?q'pZ87ab1(*=q5E\oEG]).8=4:]%qa2HZ:+fPrE\$I20T0Za9[&DH;qF]$$rgW>fp9_=`C!U_e%[2)G)<oPe4&t#[%jP2D,YXuC"Y@)O8?(.gnW[Qb_3FuM-3ReZ`9BX%S@32j@H,t'KqW^+)u@15#VMP!/W.C3GLsg-/t*+rC9ph)82+OB,bi1p[T1Y0/X$8`H^PtH")5D!UL[#FRuWe8b.=H1p,OpMdA2DC%Fgc_1Ul="u&lt1GH&K.*c]d&32*#i+`$0oT1\#f8-9p<k2$TPUDPG%o<V'uQO+q!\@ZEOrd\\gDW!O\1;d@keQ,L%0Z"%5ac?Zi#%.S`rKZ`hfdniJoEIWq)OXOH(U`B%cV@k,m5Z`Yl7J*CI#[)h5YQleM)p7BF8d"puDOr_!t"bTY?aiNC;Cb)^6mqaNCma=YPe.D!m%:Dm00.5)IoXG&3n93X=)p7F2o5'P_TAnFa6I'KV=k,2a>[T1KY!F..6RWcri8USh(N1&DOpN;j<S%m#9V+*%(]d(s`(rLC,>KkFm%bo4W;5.<m3_D$>>YN+c]5rJ%/crh\;lo;PAmkTH*P1i#lYuOT%WbL`ZQjB1X,4.OhWNcZoKUAX>nRdst1=#4oFndt#-5oQ!C5ap_%I0IiZZpEnng[Zll-F3aGc>N!CiRK7o[aCd>Z^W7$&mJ?-^=#bZbMtCU0q-dr-eaI@-$dq**0I6+Rb]KPXD@,tRC_)FJ6>4OfHs)c%j-o?bL1H9If;a"e?'E!<\n7\=[E2U?30AU=h'Vu6@o^eE8P-P+NuhK]oW8EEXaZUc8MYhh.;&JQ]2d_$>OhG5BdLB'VaOe$5%Am4%\D%LP^BL3&m[i_.Zf>e`B'b]P'o?=nFE::1emLEpdFWMAX./mmFY'd>Z^a->qY%q[IH2]Xl#X*;]3\rg`_KZWN7b[d\J]:cd,Z&6%9*B<@)q`]P)qNcriS?[smuc?RgIM^aqoF5gMeeCP33^3([+c`8m.&Ohd(Ego@U]^:YO._<!o#Ro7(ssnLSsnap6$rN6*DJgp#B'a%*R`GC2F<b&.]QOaAomEbgO$l9kuS8)bUg$9")WOD8qBW&<kM`'@U>VG]brV%6>MGWd)IK'/T\8/mTW/'Qb0^%A@q`CWY0bF0=IF5%O]c;me])L8(WuI]WLPt:955dM*gL^qp.Se`Rm+F,n/q!Fqc&a^RVg1Eanac3?!,o7'.S!^lohe&1iSY`WNuk7b+0nPIq+^SKb)+"%W4QmWS,'73DjgS[XE70)V/]4I]NqlBn&f=c>3rt.<G.>?U'6[a@Fsj]$bKR=9k=9I:$R^D-:nb,FI-fMSDl-BV,+2PESN;<<nLsV%P)Sk#AIfTLnh)5pr/jl$8Y9j/+.>c-4n6t4M9h_I>N@[=YjHWP2-OgY<g09A$Kpar^QVp.T?0dI*(Y`Or*G4T%GKr:k,CO?NbIEt%R@$6`+_0(hEAMGZ='6/UZXLI=BePL>M='-gn`7VG%^fPC\&h<'MU@U!Z'Ze!FLN->HFI0amVBoXgYCU-AE@$3ip/=/,.^0ea;>Ki%V:k6=Q<3[]Ng#lB&RhSMq;H5Afn!5[,A`r$T8%-`@U[EQhhn%n^6Xc6j-o6lH$>I@jd._>'W9?;Q\;%c=3MJs?9K19]t0K]i?g]h%*F[eO!\J^-B3=lg:u$uVUl<JHbAi:K2K`fX)J^&M7DH2ab^rK#8q18'2;=K0L1@W[7C2)$2MELqU0.OlD"mWj\6?f>>h-245BG(a%]2Lm9B?RHF!5sZXntqlDQ3:!2+Yg]6j,(;,[ScC9EN_q8e/$o_9`1t_Ja%ru]57f*1t\5%0@^)&j=X6;@r7^gbi@HFM.pjlI]:SN%fr6B*daU1eh#ii8Bt_,1C8tQmlIDM0[#]%U[Q@OT*[.JfVX9h/0Z&a$(Rjf3Ao&#eYYgY(aJUS7<o6BojE31t.0bi,R30/'GL+N3%l^(?2RdkLdGA.S1Og&Um?T<JNkB8XKheaE1p1Fja0Y:qK/)`JAM54d7>t`o1/:sF)"\-"++V,?Xe$ld#B5Cg_gAm_I;q#3M1(-0'%Z,:F('L^TfN(&]oG"mRsAcJ2mfVqHf7-&6tUXlGEh9N8QZuK<VK:2W_FGVbO-oUDbc1n^S0BhKL%]sci(X\'kWLj'D3M%U29#n6k%Q>&G$o1HO$<??rX`d1:D0[mGkThb!q.;MoA/<eu/-Z"Pt;Cmgq(c[Q.!DP:-;^]gSfk^p'S0bsN)\Qb@:!-I[eVC50IC70B4#(f$%r'`3Qr*"+A5'18nAe@^`TZ6&o\jtC1"^RuI)/L3DFcU]>*<[/bHLi+*![sr'RXWAe-L.hR%D@/E;g&X*OC[qW\@^l<LF]F\^+"K7%gdt`XKhDAHKkrek]B"(S^h7iNfn1DZP+P=s>V$\EMV]cPfa'+Z*q>9AC:q0ZYD'\\d@D-7&T]GeAC,I;LWJ-B;lafbBsf;bdroIH%OrdeA':9@51Yn]MO=2?:UeksO0l">>2mS9n/pGut32It^\C<YZ[G=c//>E1<1#'P.&_+7KUeN%KWm:sMQ,1JfB$)/^[S>HQ9Idec%b'/4)e?h9+;.`SrphhH_=ZI&jaNt>+ZY=<77-AhQD.3-^m&!d>%P(t\2<A#bXa/"Fe;`qbVD)4[SfF,4XO38cW<h'iqPc*-V%%Dt%`e-=2fe,$(a@cr1+.Y7mqX%g4Z]&e$0t'_&3\1MW'jb/]*8$kTBr!&>:WRQs8ai#cY),]t.`BfJ)!0SG=(91HBR<XX.L4An"XT==%X"oM<O\J6Vlg("sS&;>Y&t'q[)Ra)^,Yf&TS?`]a$uM''gCB_GG]T0_,lF2I>gir3?EBa@Z#MERW+8WJ6k"4hjNm%-\\;(<;.90m%L(*uX/W8ta;@$CEW"o5l\eXtL^"YoSMWQF9V0>Qr0bYf-.?R1FK27i2]$C.]al:Kk[K`lW7oQ4&'pa.r=i!Ch"5O^$Dot0'fOd^Y%dD25f)[.@Q2Nmn,<S(b_elXLj;pDDcUj`]qfhdSGY*t5J<2$!p#t$S()9GN$\DBA-W:esf!S<:.c(+1f8sCu.f,%`YMIGh>c*IgP%I7g)NYH9LSqY$6;$)+4]C)Ygt)U7'=[:p,?./bc.(_Jp7Ao*o[B&bUM?b$1(W@XZ2lF30)]-k0\k?uEICo+.7#AM+k-N,'+TW<b`%VX5#NXo:`M@-"?PCmfLC-Rr#Ygp\RkMJV@?[8iRNSkj-Z+5sP>[o]!HG./*AmWBWW'aM$Oas1*-cSb9l&Y2=ZfW1@o427Z,0H=li%2>NcB/><VU_)?&`Xf\Qq$:AlpZr'Ktq<=(A_CX;RV4QZlnJ4^(4h+Y*\E^V>F6LNE;WP/7X6UX>3FKRS&jl;(;uQooADNYF55e[-%*r80K&mr!n/+P_!@%/js6r[a_fI/fI8O4&SWB/[\\/))5?RS!*ijHlf8GH#!06WAQ:4bBmXM?[QZa"phJbLu`dbJ*T8SC#Gp.7GP%PMA)I>iRPYDQ8!X]=5u^F&Pk`9'mS>HKp#;\g;(=CjOI%As(gDg[mW:WA$><7*0i)80cl&MS((nTXF.pBj3^;SE$Yi`bd>%g*dr;%jdK2pD=_OT)c^839(l2Tgrf%4lKW0u;fX,-dF4%)3kb?c=b0L;RjR0nW`bNkCXU5:g'Z3lT(B*mQ=d.jUQol)OfR"NU3+aSaY(\L%/&"S$2=6+oS?b7;a]C,UU$$GsC\%dSmD>Q4qQ'IGbHr&)iOjes5ius$.f[HGH0qJ6Fs8/@7c"<.]oYcZ:'#QS6Sh$(9kBB/`A\!"%XrI_*Xg]:T4rM<QS#Ioh\pUbW)A7;]G[?C"f^pVeia8H/)M2')1ojFJR)f8sQ\#Xm'=VlpS4m7pjc'#2.8sC%(])eDb"J_r'#1N$%E%l.9rq;SY4i<LUKeD38*UA8c=(@,/`JY(pHEhrV5Dj7P,&ThH&5LUI<c^.YSL/H\7(Q!j8#"/'X6S14K,&be9T9bN^edjpZUkaD%0LJtM];C#klnJZI,'Y>PN@Adib93t@kD"(7d6=;@&k>Ch2pR92RrNdgO1l=!<8?9;DK?gUECLZP8!YA\bU^)&'2'-LKY,nB\nDFB%kuutR$>?"AGtl4R,`O.%;-dDk@1k&rCe6d$RQrnj!=DL)ld`\sA*OI;Q*nMO8\L_nB%iO6C/[*B6`i"@>kqY#R\K.5_C2C7LCI+=%lff^lAr/(n<SL5Y9(cpJ?@.[V*BI!U8]d`KV%2\X@;?$@q!3^!#+`Yc[<YDkbL"O!XLa.SaPAJ,oYX?@;0g>9q8N*)>2n[$?)B:J%#)m>-pMnn7`*.GoI-DsdbuC%?F/::KbLM,NS1DQ`;_!R'e]Dn`^V.]Uae"aEX^=[7q`33Nb*3o.o_0Ls[HbD:m4hm`RDd]1B4UL;%pp4")a>+6jB-'!9GomAc7ooNXg^HCd/65*8/XPn6cSte8epg\7\bXjE/ZWm7ohbh5F(K.Q(u]P)im<njQO6l)H[3_$[kW(%"?jC:%JcQO\NYY:*S[&KtD/XPejCZ@uLp[LX6&.?IoF"jlfemKV*9U5>Xfh$;[6cuM9cj$ESRf0(7k7B'=L5U;DSKa69>H+)(pXMla&J-1%KFM_)-J&qSgthGU$?=fXlq3VY>>N]0&a!LR7%e?n!g*IG=rY1VH15];WU+:=>,Q$IZ;9aRV;l=5q4#O@'ntlTH#Q-j:6hR+^=EAD%aZm7kge(TX2^c2FNdr\QrH'&>,UN5Q]_gY@[EeKNj%[<]L)Mt7TKe&g/)k9J.QZ_F':@L4G!`P8ZEkjQ$\gk'>Tb2@>8db\@KBEE%FG7IdPmH4t^J=O+LD_<uIk$JMKM%@]d)kCnVGe-)>A-;g*mOqrRVM0.r[*QGrjMc1r+*o*Zq6L\^%I=7n0PmT\(cAiVO0bsSI*nd%.VZ->a@#jHD.)J+OEaB/9/UYugp^;Ohq`C"a=RP^WkM@_d:ed9@aeFk7$h^.Zu_ImCWJq5:WVZm7=@;J,t#9UL75E/aMjVU;?J7O%Z4X%9U7>n#6gEB'a=fYr\]sK2jUD^m9;McY*#Zq7rC78G-0_*P#fI3IgMsfAMupsm[99eTbG)51<rnaZi6B2kgmN4>bLOmPSjIOP%TGJB1K%1;EJ7S5>3leNXbZ_6I;R4_MMr5^!=^4S3Bi3KH]?K)ppXi.j#t?$_9m]`,O'S4^*j$ZGN6<BSC6H3W^aO4p^'=qXSd<`_%[5B/j04a'SN(X2J5r,;edhQdM*,,T5LBK!V7ZOF\M7H?N>[uOjeMXi&)7P%1;F=HRM<1=`c&T_6C_U"r>?6LZZt:._SLDV$d^[OR%WN%?b$`HTfMSS;;0]?\YZ&$$Gb3[D^,<\^Gf1'H)f8/HB+pMm.`$>a17CF8bl7K65N6j!m8C/^3;G5$i\T"$na"cZ0irlP:01FmO%7#n^`hP8;X;SBNgk3Wj@\4MP6h"We"ahAZRYOiUW)&"Y>1]aorSB\jr\[7]kA3m(+H;'@;e)(?%#"/QdU+f4cQ_tsCMg+Jd'8.'u%d_#al\--O_DX`%aOK+<alT,fi$5/32"#L?1X4FL(bc:+Ye]VF&h^%-H/9HR3rZsW9JYL)bH*Z268e0)jgQ8)Wg5%=75=.*i\EYXZ%X()G%N)@$JHS$ZXD$h$$?o#'TG*rj.2!7PB/5edA3^A!676un;W*"U<!h3,nV@&,\pkBt+&\TuO9e-)D*(nD^b4aAK22/nH8-0X2%d$^(W4$&*!O*!_n$-T@'Z[iYpml>ZQ<`n_l=htN`C.b>E<s61i[0pi-":uU8g+p>Cp$Nmc+fU5Jcm#@2+EK>Mh@S`c6DYtEB=!6#%O:e;lE6O`eg%,)QSsgP<23#(STB\(RZmKHSSL$SuZ?jl3Zh`939q`,T?u@5=0Yiq\)NG8::0lR$V8["CBXn>p,TY1Y^pD2e-!_sj%DG&4[^61jncGAsanj1/@7EB>(A"VN39@90qP?&D:@Gjf039WW`SK7R.mCX1seL.m*^6I8a]N\7mlGj:B\AC>?#KXOU;Qb`A*kUDc%:]sT#e`i=d3$4=SCEli08]m:JRE@e'Vm&Yu7Q0Lj>T('=Xqn8&-,j3q2MLjY@dQf*2/1'OFfni;Ee1*LrN'lX7F"3,"pg[;_<q5M%,InOX"+/:[_@ORgF__?Z\F#]s[!S\*H(=>W4b`\ZJ0A*@.20?lW8(PSRjBRdEp5.,BE?f+nXj^-<6\@2i%D8s"Edlh"J6rF<Y$(g%^l`C8#WOu!)mUElWYh,l]%mM@cL#N.#gQ8Z^d:kS<nusp]jDb7TB.@!)c+2a_;)@k#[R5oQ857>!Pt][HgLD4?4&),\NX&PS$b!(%:^[M&;^NlKSKm;\!VT%!1I)SLY&Yhk2?4R'G']R.S?9Ut09C=&@Kq3X?(.0PB$-F0Ec?'1g1@`La9=I9\OU+,+&aPq\kIY@WS8_h%`C=\s.8qP$[4<^e,O.pdc>O?%R5!2;a#3h%k<(<jThpH[;dA'-biA((DPFb%*#lOK8*K6bjFrDSnei,kkW+J/Y'`AtE#DJ&\Tl@c%l1m6&3:d:ef!!.C0uqWQHY1Q@JNZ"K-CbHj]])B#S-sJYCe4%%BrBq=cs';1LW@eA"N(b:%&;l<X/3!2[L]R`,N_&R)6AhAk/EIH%b`j6d0dfE4^_PG9?(Z-ER3:$`TLu+UGNq=@83sm5U2rM7iM*PiA<ISSeOHTtm@8JJJ$aVn@]KdP&i![5q@l9NmM.>_EClB?Tu_#L%JpU1ZCO?!'m[?r?Q8$+(bfre0,TmecQ2=qk).&nu5lK]mKm0W!eX\&+Y9q\(8j'ZY=Ch3s7+qsRJfN3YLkY2)6-4I^p/l)dA)`?O%Eob`>S.4#Ve.1\@S]dI<T0_iTKdB[F<"sjZMGsW@=Fa,.!iQ-cdNI"Ph65u&eMO:Sa`//D6@FC=kJ0^eb*S/,+(-&LmG!c!<bVmB%*U[_gbb3:j<F7B=8gs$tH@#E/?/XnmYCOpZ8N0ZI0^uX/O-U$9`\HsSBO+\`nkpd<\^S#j64cf-'c[eB4u$rNVQOJrOn@$i<h.GI%V(;bYFc)=p_\`Be*iDBFaUpX-e^^8.83+O\]:`-!$C;hF/PJ6$7qqri=Z4tJ$e1$-WetA%7dM/<\bj',7J]2NniAie7Nm<t4@),j%k%9Z*cApa3MOZR8_/0@qj4/=6%]0Y3fe.GBGiY)PTNDQ0LBGZk3uNZ7CcQdN!(4&NZ4nPuY1/Q^Og.cJT-QrQnJ6;=*`sfl"SGMI%SLa384W(^VqbG]C:+g5PlIj*EO@IB!+&1r;Gqu?a&e]YEJCHu/1m`$lS/oSY'VH]rU_2;%f9W?:h_O)@Yr.6Z,TJbQYG":TRR/>L%gWjQe-l-Cq\7]9&b+TE0k8H6nO`-B[c.`,Mi,9jm&IN^n/Y+=e&TXk`RV%'\8b(1pBt!8A7:[K;<f4q$jXSbIMLt==-#1OgqPW`(%&7@`@kbO/F\8Ldf^YFi%EXs,i\PsM6\X;=9=i(M'Oo4?8)LVCsPMe"9%<[Pu/5mPhXT_oV1W2.tfC\#%h3-]8bIXXh,a<F$/jia-%1#4UKnC'*nUn1,/MalCekCW`'Y44*t^gh/o29jo-6k+Ea]r"UOZTtRqUr!.n4q;':!!6knig!qVX6'4_Xtmt3og#2Voh=Y.]9VlL%<Yr8d]#i`l(m@\@V%@XMWK>r-O(jbQjZ(dbVP%3pK6GNUFgYb>#5Nl4f0#F3Nf(\$I^cW?=U.M@a.u(2VfaMYWGJkZ.W45/$`d%1%i*%@E/2I,MM*;)bRVSK4jfR]?%aa9SYct*Qk*UJ$B6q$400*XtDOm4jbo6G`Tj0T6S+=8P=_g*Jm*`#'C\PG@b,>3NV9ZKAk=tbo%o(P4CEO.fXO(HYnauo$9TK5%APUfTEW=hYB1EY1.J+^dQ^IW"PE<X9eVG](jW-e1@d=j!9;Y.Q\$><jbOO'c=9G=lK:ajbET$gHO%WpQqT31aF9I+ue?;@?S./"eufO8@IjgMN'#2+n:qK8*7jD'Esk7+[u#OM!iqVICbkR?FPt*WISGTFtg53)YG_??PHYNPZIK^Y-'3%G'u?L<30%RbJ0Oamp:Z)$h\Xe`"-KSZe6=g7P9/59JeX'l3h(M0#WF:.VfG')co<dalNW<E+DOEeU]=[BLTMbNf#M/6?u5u&4nKV%[<8H(ip<od1Eb4lO2t!#<G-[IQ,cO%*Q,(H9r(hH,/S\9<!!.8nfhTD$IohZ\@Pk0V^E1j-aILUZ#d20M(P>_p1b\4a#(AsI]@aA%jj3;]#>$+S[gDengPhItV8p8*$rJ<e4N]>(89'j$#TO.m9@qtfPRX-SGW^5W%k-Ihe8S9MfRN#@SVb$28*CY)+$0m$C-9UQ-aHiV%X<Rml8"aK]Gbc_'Td1paH+?72.";kl&I20,__X0MCj%aE71FNh-IFZhFuL8n,"^Jm?tnV6lq$?>`n(:tWk&8t-r<0'EG\:D5PE@,%?a^pY$re6-;d5]K6BULMU%CL`(G(tT5*p:Q$1&$n7pK-`;BHr'B?f_#W**E-D504d\PkH6AsK;;Y,=0cO0h.grapKK86,:'`?4O)%<+ujsPta1/LlcBY3Wq-dDJlLS?iqc-_fNP.QBFDm.=FVRTFqV)\Q",<PHHq\4:f-:K$'JqjK*Y#fTa?=htg\*L:0V$?hof'nh_Z.%[-\`4l<O*1R!mmiZ+Rpi8,PYu_;7=U,io3J;/t^9'._h?Siuf8e+1qKc!sJFk89E2,&KgQ$4&`hR(RDhA8Vh]bu1J*]6,,U:2+iH%?ZKNp+'[MYp(-_qcbig?,`26Sdp.QQXlpgWqCi*.7<^Wr]=*-3P_;6Sj>2P&WkF."U!VgDPFteS]ngI_3`4g*dJAJ31EP=f.KFTH%L6gqdgS)5uc4r316in'$nISe-X==ZdP\B+=66d9'LGGM!S8m(pcXgF#O8Q&;%hn`sX*mMg7O+"s8X+MAOC\7h[#j:nV4G8Ha"&X`%6a-]D*+2i6"mqPE_I*Xhn7BPN'_=s-TUa-iC:Q6nR\@p@EoIH%[`/%N"<YbgCK-S5__98&h!s@=IE`RNkJ]0D=g%V%Li<B^BF2NX%/3&>'_(ePj[TWPtR<mRZ[A!aH1rgXZ6Pg2t>u;R(Cetib`!MeXTS>G94%sN45mipC%BLt,X^uO27F`b,rK6\>$&$[KAlP&5NG]Tr%eZ7^TlB**\WhdC6c&'k`ViYUR%*oDf8KqAO5.?E#gn`6Ud_^L#Gsq^'F=<tUHtsDI*_nZA.B1n<BG>lah0f=VAs']ik>Ap5/P_2-%h6X^2Og<__":(gA8Sr8o@NOU:KOaClY?V%*:5=Zu?b3j5P;KP-_,COh?G4CqP`qRd;N7p;S.>1].PK;g.YnN\:FOWLdBThm[c6Mq%3Q>dI7g4lUK]U";Q(:U6VZsjMeUVe_d9r20"E0/adY$7ZAZ&%NQ:>*9!K+bPXu_/c,jjh3r5!J?#R<JsXEE:V5n1.DI*o@W96a0p%XLUHI]HS+@+E2$LnksHl"m8/22oRI*%i=HVh&WT-lRd`\,@K+;9*T7:&GUABVi:as$$hnhX\mnZp7$bA89)4PeMZGL3`?5:nDJi-%G;Pp8K)j]p"1P@>OH-D7qT,3cfKOKMZq6sg;\7RC%Z03ZE]>>`JN1dY0-%M,.F.MN74.l,3NmZ6O1a2cU*T7/YH+D,N98LA];fk\%W+;8[FCo]r!g(dK-l/$&%EtJ8gQ<0&)n-4TSYN-s35T<t<1Z4"ZO]UjI0[Nf*`6P..ut..l5>$tADTBcORVh$g$UA",2FmYF*Hh'%H2+Iq*)AgoH:tFIK$D6@ZcCoBb#P%Z$n!k>o^p:S,_sn5WgQaN-ainDOn%j*oL'.,,7(u80$-N5k#CQ"NA.CBUd@l[&mT25Yuc_I%0:je:%(h+t31E5=V:[W*j(-9fU`,_nh/LAe6SCWkq%P.'eZjKHBpr(!>U>>Wr,:btH2)8!',G["DP,]C$V-Y/]-po*4QFA=E]ER,%i&o"AZ\K$fS'oSR78?Zm#8>50&,H8ef^MY_1%KjW-=YH'Od]2uGu>7$`=2mJPg#`c^D)QcpkHF:O#o2[Q>D6#HlMLlCK/U1]BAZg%J1H?04FSqa",BJZYHeN21g'=W!dI*Q48UlMgllXm$kThamnW4Z.:Q8&E?aJ;I8p:NJfBJ(7hnX`Q@bXY'f90ZaAdB1q#CGiW@a<Y%M-(4oklEbsFq\&`*%=2Aeh;^b!`G\Eig.2oG7,$`[qDHZ-aRT?:ODG!2Vf_E9pssl2GN_]!hc0s0*2Hs3(#O"'$&KAaf'X9(UL^`%m&+*>]%Id*-=k<`g32.&=KSGWP5VG,PY#Qu?i^61:mk&AZJL#m\O$j2,G7\->JpP!\HNHFV>hdcZ=Qe>!&!=p6Qb[TX7^;^A6ai)%7>Meag*&"E'-plp:Igpc_$enl,3CUW`i5*ZM8uKu&$d81"!HI.9b[;D$'tgHNGbmD&rfeMd!ee/=u\CT$W4'a#N=K3\3NYuHVF-A%`:05MGiq><I.I^!QV^Kt,*hS(OTNNs`N))&5`=j-;"^P\TB\L\3aU3gUNA0=E"B_;Kn$tje1dBi`l)\TNQm[f26pr6c)IiIG+MO=%?^$U)pI76XpN"pM'8E^qpBrJ*L1D4&Hc8EP-.-5+p&u(W'D8<ZY9^Lk#Sn^SW;M4<@ag]NjA8]2gH>_*1\34QDUc4I&##Y!=.O"m%\[>'!>t:_BR*6Vc4%-3N`A8eGP+-kA@k'7<=A[X<)PA+S@$kCci9Y*e1))sOA:;H@:aeZn>`iAiCZP1d*@c0p6@?$m#B48)=R:[:%9H+*E$'b^*''!d>S,q0e,JAnf:>^)\j-%Gk9%ql5IqH]XPphgDpSs;8a%G?j[-hi=NZ/F@$8BE.#N[W"f,]0EQ(#T9HT5TA]L@Y\%I1S\u4:g&3qSRA?pRi#sUt!K$G%hhkP/+XU8=I#7WUduTcVY'Jap?qQLAFN\$@l/'Z8P.D4\'W,i^>6q\pTkOIO9o3+g.Y_@1*GQ%jhjs9f-ho2QfeL_r0pb?UFOXG%`ek,)`^,J^%Th@d]lY$U$RS7I)LW;,1oaudXfE%[.W.;5+Ok"YrDQ9P^EMC#3o>Aoud*d<[eWH%S<-Ytgu[H$U05d\-hETGWS!mGoWAmFEQjDoEfJ^p,$Vf+1QR\4ZXDjr,nY3[YIFjr^h^ep((lo9b*@2e$:ho/3nNrDkO.d,CY3.K%J5N6t=`5&V$o-2IM9sMtX8@_CN$r+9mPS(_0ge8n;)hQDFEl`>>ri9E%AnJK:g(6Jl\M:],I)::_1`6J\%m]4fVolJBaM;76dGiu%.-r;c&o[uahKHBN`X,9G1/W(20ifI,ci%5,4_>#:W=D`s^0!-58G./R.Y*R11ZZlToPaN\MQp$(/0ZYNCb(SQG^qVUj`FMd?Du#G%%MLh/X5cU2cn(PYat6JVUZAH!N\e0^.mQJe@/9m>Ku#>Rgeus&5eBFi7$pp2k`>(,hmj@h3tKq^=X\`PXOmYZ=>(^De0mUPSN"$_%O0dmK9X]0a!JiRb<\a2eO^tNsPX<`#ph:WmEW3l]muB-=Bf/8m.Q[ROKuO2c-STU5=RP1/,E+/W[>'a@\Q^Bh6jZXW0jffloK-0I%SBhjl1HhqDj*U4-3E4Cb)Oi']T'8#&V0^df,VZG_V4K#k)!7t8e><>.;;fYKfJY,LT@qc$\Sg/OC&=33no!-"&)ZbaW`%rCIBT<#%#u;gF?)1jK=:-aHM9RKUI,Y?F4]]RWOj02(5?;Y[Al&5C=(d\F6qcU*mRB*0[(d:pWX?.o(3aP[UGTA(<'h0X>/%=Wr<mfk+-&Fs%7hscHZG^^_lG?WjDlrF^$cP-1be`.FR1$\0.UtLJ&k+T=8BQbN;=[]ZXqGiT:<;L>HdC!/j[h)#9a_.>fi2LY<&I;;7o!h#oS-0U%JCUiKWEfOmm)X<H"-Bp+@`h8j*2FK1AuNTVW8J/YH$QPM=Qs>s2UG1@d1+dVJGgFpc-#IZ?(,`ceRPXQ"o(j5UrXL4:fe6>?2UJ]%2q?u-]arg<!]d>L$639r#I0PAK#J;o=_W5JGB.Ln_nLp4/CZ1FPg`MEKFtO7mAkip6k4s5i:%ooAPn1DPc4laM3,c7qI2a,J<%%O%K3]F3;[&mimb#P._eX6@-kip>S4?$#Z=8-KYmT&$FrXj?<I!H0Lde5<)0]Sh*E#7p.R?d]I+[BFTW>'.pT!*SX.:;r.48o6e6!U-%-WBck</=s/pjD,fJ[O\!\kuH5:+G3hYNl`RfCt;1cO,Shn2jU%3c@:R3U78<e@$_VcK6!h7N;Ts_0)mK*p(&XJ[og74*b(./,AWp%$oQ:Zf:4Wfe.ruZ9Hf5P?5]i8+3GFDOrYEefRI$dVJZ0=/],U<E:omG&LfR3NHuEsqWJEB%R)VW=!79(*pM34![\A"L2f38eb9_.%c"=@]XAYSZCV$QVX&ag&!A6T:??tH0E4i:&!T^peGtU'jra%\C]S:(O[?jU79WqlrE8':BHh"3t,l&'Q(4ek'QkBPjRh@>[B!O8$%4/c*pjtQj&*.S&k7Oh_MR^PjEeK8sZQt:Gcan[ne-*S=\G.UA';p*IDSHS,Y1`T&)0c]=M;9&aY=1ho]Sfg_*m+7n'*F[F52=!nP%VG.V`:8j_q#\4aiU<5)H'U@IT(%ehiF@@$80JIaA:K8Ep$M]48\F_Mn4jt#@hZ@+95^a)Lh&]=!RQO1LMZFTSU/ncU"BJQ"F=MK1%(e%mc3Tk/Y_N`lU.!#)+)f<iJ/nGGYN(Tkh*kiilJI83CUCj$2'?a"p'33'QCF]TaS_8$/@jW-HX"@7>6Zq2DA+XS=.%Q4eohsX=%^e:\3pOokSZ2]4$`\)LD46d/?:H#)>?eW(3D]CNH*UBlD8G-HV/C^L%b_1#6TH64C%g1U&'sV'lQnJ3a39;2u,IoDG`s.NRK)'b?%W__9f#)3VNF1a*T_eoJ#&GBY?,nDjr('#:aHbpbWb#_qH$jTqBP^[`]/tC?e-WlV(6%2nUC#`X32aNj7!V.eM(b/%FUXH.,&\i)g%,-^<^B<=H1)DO\386X-XbgHV\'0/1ECKjn!7\'X`TkJ13\4MBho;c#![/<h=k):4;$+9Y_Dt]T\(J^3"TAAQsBeC+A=?R5\PmS=!%Z((i"fG4^d%CoRcNB9H$7k(!\3P_")s->3e]WF07]Z=^:NdTpD4sn7lCCZ=gKK7JJjJJfjNffo')?V\f(pY?5be'f\n\c/$XWs47%<2g5_6alBHUhge>FgiN9ppK!MqJ;t9i28ZX#D?H!SoqqSKssa&Jp^4d6G*Nof^uY/G;9^O'%a8\^`@0qMhg33*f\F5V1??jZE8Qm%GES/bHh)PQrTZ\lW,Gr^Sb@$JHnH-;E%=Rb:HMKrW="\C,D2OXe*E>@(hj^D/OY.:Kfb+L$K0+VKlSb[nYQE;AYs6a:I4<5.!+cV%AN.^4k>L$=f*=#OW4RR6ogEM/op"?A'rCrCs+SUl,0edE[V'S.DFY/Xl<3N_80OtVNh]j#M\2De=-&!>WE"_QVRkL=^.#O9-U0YW%dO2f?L<1hK*h4IoV:)=G3se!k""NNGL::(`_GHts8fHA3%Pc!==DeRE1HuR4O#3%Y=,4[^8`8k[hdhH+OY:lN=,EMCd@Vt):MFT=%*O2T#kf\VKg=\hr*Oj&o;FjnC$AgW0-V&n<d(?Ie@9S9s;NRigA"-:bWmpKHrF@8<Pg:E*A*c>nXErV-mn_jq)?nqX@0A(B!I]0A%:C23XM'b5ZAME3,3"JoVaXI]';1u'`;sq4-^;&aqZV!Eu.`fumlP+J4C2j&![gog@U5CIi<f!n!>#<=%k5ZcKi1UsHdc5ENJZe@N%N?WQE;L&NL8W!TdB,Xb5\U#k7PBJuYVD,?8>UIY`L'$$aR#fL\cR+?l:f,;!XTSh25jm.ZBLk^/+=F%`<gVG,P[08$OFqZ6aAFul%P82mm88W][<(YQ8^hMaBP\g,X"^7W9XL*#)]Uo3M\U$o$G`QW$r&[NY1$NgpKoOcZO+VThdM-7I2*Z8t4778@iep%R#ILk4rKuGF%7oq'd-=iB=nE,H=59pWsN32h%bi_j/4PD-\cI9IVXtD*?UblJ4bl`afT\b"kV2^,m4_C2bO/jZF]&$CM>SP).R1qXhONC"!c&cI7%VW%IXU@.*-dotL$kN\)U;oS[Go@:uUV'"+cU;T#Kfdk^!2dr'3]UoM+C+#*HK&MoVFC"Hp.6(hh$3kTLrc$"jSS``jPstRV<VjS1%=QG5[TS:!lY5TTL-B(l\.Zg1EHTAjVGnDj9\"J!@e\4:h<LfX96$e/T,''B14"]mXQ<A?Ka.nCs5KRWrYY+6CM?--@Z/VJk4t2Wg%Au@cJPUAgF/E7J2GO86WBaXQ-&EkXRH+HO+;JVJ?$,5I-rL\Nt0K+h#$o<!k8F.I(e<`,!h=--G$Uho\i0bY^C>U!,L#9$qD^I=F%D0]aQ+i]'\hXM(AAZV_J#A+Xk&U!_`DDBRjTg<#,'$s<?=L2=D2@:3E73^!uRcPX&HUrPpS?N'M&11?/;#t:,iDad*&'#]_;nNPQ%Rj/6Jqs(ZuST3n#DnuO5'D;c@8l;[i6C]fVgbtN3oE82.Sg_HCq?/(A'Gcc^O[XNijqptgap]OT`)Ek0+i%pi)->ckeXJl\/"X8D%#b_"s;JG)LEo\S.349S"X:%c=*J*'P<%Ij;i`NSI@Tc6[UNo.cmSP[b2F"btk[F^jJg3UX=5N_FcncpPUHRs*h3DCP%BL2HmBT88%!\F(B+Fk$S'*3;u2mKRN*30q#[$k+4[l)5n1%?KP(6VA&L[J*p-RImfqi?Z@M.h>]PWl7FHI&Eo@h5$3a#1ga+s%nC+5BGQ(o/G4%Y@/*dQ4[@16AS=P=(F+kO2c>HklL/a7<uDbkWN'+Nboc1B:<`;a=oRt$Bi"tOUeBBLcm.3N"md<VRLPsF4!jg_KSERTgHLEMI=B1%7@$JE>M7bZM65$lN=a$b-a%c!L^d98"./]@+UTuu%e&OiPT$8<8qg0]%sX4=f"H22rO&5`3fKgS'sE<kX;5WIG\Q;tp-V/C%FD5o%jV1+P*.dLU;fG\,m#e,.af@Rc#"p9/'X'hJ3\T.ld#URDWFj!(@?[NBM,sh<h5dr*qOUEeKO9&;OrQ'WcG^SX]C45Smrj\bq4Q@n%JWi@]-rQW+_'j@L'<A':Ke$Vo.@Josk"X"[i7<c!Y%Zgp#LcX@(.^fQ6ifT>(2A%tRj\Ab?sG,m7/d]6F^[:m=#HKqNjqs\Y"s\Q%6%irQm&N^B1l1H%g^I#CFn1=91>B"3U"YBMcWu1:6ih:4B)4sCTl0p=4%9).N=H;YWNHtf4s(pe4%l@pHGld^7LmlSr(;!ecY.+T%*gHZ3"U&/>[pJdn[7.p8;?.K2VNdT!9tRtJSeTeZl%V9*T0,=f0fhraZ,p=HXM;(8]4aCO'\k2\lt69<Qjk>X4X#-:?mkRh"1<gT%b/l"Y4I^u-"\r/RZAUMK6HcIWmssd//tI8)]%mtt<EKV^)q-T%^g)k3]+me2L4`^*5n#%eA<Xc@3.;KO>rfJk0q0YB&$pU7V[=r7%3ohSMH%iiRM.f8<PlQjXL]ugr@Zud$2@'fRU3Lk_8C`D(a:Wl%^'FP"aI[&,("ul;*_#jA0^0M"W59$hRR'Y,I9!Z"KE@g*nD&7"%A<Gduabfj.bT%2e$>>YdTKT!-PE.>Q>Z5H-Ydk@#U[C*MEQ"f0S"YLV5RFpT1Dm@DEFb,")4LVgZI_\u5BD=O&VOgC]kDnj)EDGi%'eG*"6'.-KYbD5t7BE+Qj9*KgGX!5.6_,8,gK1Qca6iZAkkQ?6F0#@8Y&Uh7fX+t97i&ta:)_dt<R!8,Ys3(KF.aSfh1TNU#`jSN%+t`7pWIPRH\X.]tT6.Y@YcK'.'X!_7!tpRlGt>QQLk!f6aJ5=6s*FQ'L#MFP)PeX[\/<?/6U+:,#3K-@Se?_<b!lhd7VL>Bq,?V,%3T['fPXZe1[7Spt6e,'[iT-Q(ifonToY4fl=a`a$-e.%5hQsrEH.GNgP[J7Q?QDt6:'PhE^`],UI$4)(Gr'Q'<7NI_T4'\KKNO)@%Fn<\MF*Lc9+DeFJaplYUZ$JjHS2s8Fs-/=ub-IefbB$<dH;Mf^.;5/^*,.j(*)jl?;i@A.)l#HA=2tH9/uPY[,f\?Ir)K/j;+YB@%eu/,*n6?.A.-uBf91Z*%E1+s$<Rr<gAmh,DV+9Fb!goR6=%u&#XtAu3Z;SXTlcEY_$);3BBiNEI3RsbGUIN+#K!gaiVA3A>:8#nN%?IPV$S7-t%]%_?t+&DSc0Hj^H/Blq-G5r[a!u1OX'O"ZkR*#t]E6>.A"pRu"Q*NKgFPOY@fLL\N]0[(,0X93]!G&NsAg]GQ.cj+"%lHKD^$SOpHY9le_-a[_\XNKf%$PB9*=bj?\o@Y):UCKX##*.<RLJ5f!le2`Rk2G>Pr-B+P5nA[]CoS`WHg$lNa(l&Agr/%1#\]$H%K"s#K@nUq8"5?S,f:J)[]NH;[S<5u^!2(/inQZ+i-(If@3I1#%:(Z2s&6l<9$0isnZ5--gM^>6%kqeMLi9X>QKG51n^@!bU[bJlW%p\`P/m"OPe&$S4]-?OjJklZht@RE/5Z5rDmV$W\h=EAjYh^!%TD9<E21(#`W(XX%1.]"q&1hEF`%9QA*,gcTYGH1^J:XlOV><RAA%%r"J6R\pWIh^cH&#uh18OV<;`eKT/a1D]t3QGW$M%NA(_`r^)dJ)*9(`9ZhtaO3Y-/?G"imu@Y_j<FGHReCXS4K`.55ibX8)8G<i%'m7aY#Y`mY%d<*d91`5daNsP&YmG-gkbAO]3>KPp]_ZeBjnS3S.cZf[AWr=R?tn7*)\M'8U]BdT39C)=>HTAjU/.*H<Qh)31dZu4%;/RsSd&GrPjOFkAQ5_:e7;5PgNE<8=VmD?GP^(gppRL'<+;!C0-`4V0=ChXs=)ueX]7XjF6B\@fU=Xu1i@46knC?rrM4t3[FIZp!%#PhscL[G`_.:aX@d[,`qO%;5V]&,!IO):a^m0r_o`M8#I@#6a-KljBgdj8AM?('rkj>eQ53Im@Rh>rKa:,3*Je9DdME,Ys_MA'9:%'Ko8r#B&#UFpNE_\AuV!B=%nDBSG$i>jFXhM5[<0c%LOV`4/I;Z_`c6MjY]f7u'X=)QE.-Q0;YVN&G'>9b3c*"9oJU@ZpYrNZ#3Q%a/;iS5.pKWNgi*N!jfo\bpEfH7RuB[3b[LNWFY/<L(^K/l%9[g'GM.)igq2br@[@o3Holb[eDS=ToO*MRU8L+&X=7;NtG15XYH@d%B,qb<W:7*6Oc-tgEuaCq1>G1''9@pS]qte\U9kFu'>&3(e4OUYb1m.NTSSrt$T\?a42ZG1<'lQuVG;&(7#rd+J1A<loOJ/,Ur0T8%Mout=NJ864rG$mI=P$HN#Cep+.YG`X=p+QkF1A@CP\=2'H=>7f(?cZeNQGP\UV@0`<R%i%^^haZ/PeDJK6BZRTRZA@5pL'n17*'a%4hn!9\[l?0*tU<KX:6_Xff-6]7>29p=%ZX\XeRmfGK"Oh40op#-I9mL-?)LJEDGom5rQDE-g9nS3D=^MHV,fOanBqIa:+,B'n!lA%csn+?]A_*aAMaDg[H=:K?;sD8UBq$&q3dU1bADbI73ot"RNG"nQ.g'tb(W!H.kj4g>f"b#Lc)"%+\1Q1q\0#Wg#[Hn*)'pj0h5>]%eXJ\m&;=i9&g70AOA%f:S?$"NWAl_<QpEU/iY&pE;$PPZ_.G>fXJ"lI&4D`t.?k,eojDdu"QpeEaKB3s36j4;KQXbZ7oV##`6!$a%ZSrb8?I]lN;kJNu66sqT*0K0,o/e]ecIFR1hXUqd-d.K7T`bNegK[T'%`:GHUt+h]Z1Uut\W'N4dSuVil;)bK")U#FdTs9ILgNpX%Uels!UE?hHPYbG(Eh_$l'`2E#GtC(Ziap;%l]I4X=r7"]c7+LgmM!CY<1$7tfje2=@b$(=K0U-/_f/_a<0kG%40DS?7,[e4(sRX,%S1`*OpRX?r710l]*]K.4J[h=[HdbV:;K@B:F3S&D\#dLOP_nP6<H%(q9rP,@\_6ch`uU:Dm7LK$O[[s<#GMskHn#cF()KnJL/+k8%,@n#$E"3a`g0TR))@De]i":1Xpum#tnkSffhs;SV2"Wl>^_F9.L_b@]fjuhLD)?A8`$uX'[ZafD<.o]9d)P1HW_F6??Z:6/))MB8%L*j+\Xo74JA'KA=I[lqZWFVg%477X%No?-1gpDk.4;qG0QWe`=9<b7>aHSZRb5N3mn%'b"#\sjJ;XJ'7"V>=aCl,Z6Dba$+ClMXp%.A1%:QL(6=GcNV>CSmUnNXr&DS/<!7)So\CFI*PiaJ9c5jF?J#&`ebN-5_(H3tmYsh6!Pm*j-20**19RVC\TBMXr_33ic&QRf,3a%,^n(Gk8kW7"!XAQiGeXh(1W5^J\'PT+/`6`Sg84.fis/A/Wk+dpLYLEK"nYg8FpfG,dqDNU8+j#@+BEq6'!g"$ctI'&Qn]=9#Tq4%JkCa42W<3neOB3UX^7aTED#JO-b"M=PoO@<:duEs2!#BTO*AS!a`3G<\MV4^!ZD*<;"ZstUaSt=KeL=ghPYC`8uqYa&go\(Z@!9g%Q>,'Af0$$[DBE`$mnHqYV7:CQpn:*SH_&T\c+.BiW(Z-tK;'f[.cMC_ZnhpnDjZ#PnBCujZ:mCh^:e)fJ0A\2'^iXn`Zr7A$)CS(%deqle93#I>$O%b1@[;*/.u(XJo=Kr[W(1t^)JeW)_Z>aCAgP&ZJBePDA0L">I,''mpid@84h`^2LQV9sf@P"Y[h7F+p_J#br*ok%%Rs.G$:+Jk'je\FhN!Oid-l^h9Y"'DGnN7?>rQIPoWfZs=B<#r)LX54h'.Q'tJ13E'Q41:'6m0T?#I[lp,_Vo2h2O8-,j7fPmr20Y%H^&,p&ou&mKBt[gAe1>:\h/]flOY9O:*ZS5B"D1J[,0Xq3F6!ce6#R:@ZL!i-IqO9cn#]Ehu@AF5#)sI4<,oVdt.)_H4]?5'hDQW%?pn!R*/tE]DfD5`Q:3NYIY]@BLC?-N)JI1NQOk_Zh\t]1_8`B#99VHo6s;_nQ_X0WE1Gr:[:`b$..ir1IT:,>]4b"`%1c,j8$0=I%9*fSARiuY&S>e/3%K)@<Jl,GtC<^g'npMCLVDrk1mX'SHID:AP9L24+O[/TU0k;)c5PA?4oEn8bX8An/!I(o^#[_1/1M*Z68HN1#%PC]Bki*(e^iLqL_qr$!:r/jL3Ju#C,6h%"X%kA(/V&d>_?E_ek!6Gpt"<8J=ma5g$^`[n;I=0(u</`G*g5o@V$E&Y&c%I:IXT5>5%G\-MAqRrpm=op>1O7k.l4S7m:%XejD6lYTC.V*3fGu\&ka/Q?5DP_rmED=BU'th2jOrUUdkl=2f,C5WjUIa^U>m#42iC?b$B+FC:%.YBL<oplSb^-%s`Nrt0o;4ou'dnQ&]*@j5l;YHBbjQJF\U#'\Rn8*;&5:ENsTQKfNbp1seHHjX[V)b3aXcOl"Z(+ak/2qns>AMh%%I79V1"gYad8kMI,[[0`;2"hA?:(@JY&s\c8l]])M]Tm;5aht]L*%Zk3"O@qKO[UCfipd(C;LVb[ab7ZTZlW-EI;^5\X#VGp]BQQ]%gL&k3fZ:tG)PYdki!X2hQ!:J04#>L^bUp[1@+#[tIN<P\hRc0H$4-._i<gC[oGZ_UK1q(8!&W094&lnJqrm@]mfE\HMkk[/58U5f%7Z6[hig8?1\<&LY(Fb'&l3VXb*''4JmH356cWGsI$J1Q7/1&5:$5V,dLCm"?](_##n<J&`;3Co98E`&eEtm\P"EZrNEB$"m%Ijoe%W&m_Alf*4MCEOn]/F)Wtma;,bM.ijILhkS)2qICLMNK0lqVCb;YN*mk"!Fl!6W[JDeYZ^.PotbbMlnQaApG\hhcp9#8naA:1CL&S%@!^X;[g1Ct]Q3(G.GAlq>!XoF#eT1X<s?<g0(9XtY`!_*=iXQG)2R=KQG1B"3bVfl89h$\6QaUIX4Y'(1('-Yr*sRY0DU4\%_.X1%.X@UK[`&?QZQ0pD:`[F.]lJb+3>*Aidic+UO%^9p%^C)tpKM<khBSYi5W41CiL2Z!R_46=m5L]p"V>ZU99hQ(LiWjg#k+"6%Jt=U%:^Tg:@B'YH?Z-ieVrP3nWqsjg]K0Z,oMu(;fE())K1koVO/G2>DANI[eP>c<:_l"1'r/rkE,ZO::;?ErODsYSFi3YjX/Ti0PlbMf%R4G!sTdcu\78qRHs0Y0uKil=3G@PBF]V3b%=1a4L8(>h.Y;ZM"=>im.S@ce'>#Yp/+t@m:!qg1i+tBf%).BKEDd0%l4o(]7Qqsa+%7B"Dc1b<a^7m21hH3#%0O@Z`R!HsbWSQ5X^_f5pf`Y-D;+^gPZf(TmLhV1iaFCGIEkRWH__[=bBh9On'+*L'4+u'CS1"3$:1;FQP%&/S/""qtX$arSrn'j`n&rHM3MnWlaoCQu2[X"\e^MKT=YPgt_4mq@DBf[9qO%dljf3>Ls;OhNnONaljKb[hKp@kM.[.[*EQM4Q]K%0mEp'5VCre(/dCb#ZRDkh(uGepTD#&8kfB?YG:om5jctY%HLuhN`&[fdFNL:.A_NaK[,O^$^J6oL^4bBQ5oj)q`G:KiXg6iZQ*9(%PbObP%m%YA&j$sTF,CU)2FInlZ/<E139"#)^%D9r]RC>MlrNp<Ej76@F9^89lj<3.6%Z-CMdjh\fIFeJ!_Jg<F;O;PmirSM?Yp5X%Is!TL$Bfr!MH_4JLk_914raS49B90*YB<n<6@i_@83^"pmM>4#B:gT`p/<+;++QTe&Ek<D\$lk\:mVM"K$-FP`JKuoNBj]-QuJ/2%%W7n0)gML=a_`>m]$T[A-u>#i&FC38RZ>r32m41\HK'\3>j'e6Se\9'iLo8EK6TlY$4o'%A%e3r8r(<3+B;dUW$*HP9WNE5DDqic%qumJ%;@H?%@la9!<@QV[Lp[D8=LgeA\0LN7:XndG5mA@-/`(J@<O%k%f-sW"^AOq9^q<hl5mp]-*@E>d,B?joVW&+[Nm\5H_bC_<%&kE9GY6=0bR37gs$2PdqUTT1D5QD&NL2:OipOYlO+X.=)F""f(&JB\^D.=%_KHlhT6OhOe]9MOnGp8o3qg8`+"0A.nf'ts3FThFu%5p'?En0F!%WrgJT;$FUc]&fUkG4d3f&3B!Kj!1K6H#"-e[I)KlQ/4l=!b125Ns@*Tf=aXBG3/(^-R+Yu':\`s?pcNOW5\X1f!EER%*1?FAoL:OmotBpsH[5u3>nE@CI:7VL"45N@lBLZ49MlY1C;NK9G#VO5,r\=BP$P'm[N->XpKi9R&UM9ZUAEVq,4s%ZY9m&[:@smS%Ol;dR0./5YV;5N/+][U,3Eesd^lto&KFlrShlg0Y@<((LDs1+s8F<ARWljp*T.2PZi^T`E'8gFr"Pi:)--A\B!Ne'-'q3Sm'X&R@%QgW*n%4p[*k&MOPN=Xoo8k2jarnI(;GA+Rh)JTRXhGBb?;jt2XkQ/LPj\;.(K]3ERINCGl]`(:p4`DG]Xb@*NANb:$G4AbCmPqP?%@L)@9T[(0PNs'^qT2(>HA^m2-+u3Y33oJWqpQDm?TOC_"dg]#R$R6C,n#N(k_^taQ+cd`U9"AXoAFn6+:u.63TW2XY(IP4CTAqZa%23-Z.FbLucR_3=+XrEej&O[l&6*"<E4@WbiGBM#cHQR54,Wkk/-c3;kQZGl4'm0Wbjkcrr5f-Jm\XR;ki=pa8J%u]E"2J/_WVA1]%^>.hW0SKGPGqo[HFQ-:V>.o%%04(F]OX`!--H_8n!q!Dec3aD@>b.o$Jdk6Ip61k,Ff";rf3o&Lf+*Uc;U2\\WE%_a;0pli25rYL%+J7)KM]9@*Y!]O@?Tck4Al_`NG`\+*C`l554IE@?8>09le=l7M[>96Vj5hsLi(I"n+.uAoGjXIh-3YITFHRe3$B6EtR90DSRC$7Y%75pN3K@]LRGFu0a?.FYl=cRB]h@Z*Pa$<tY\.+FuAA8#H8OYT<:r:WRd,aQrYT>4=oGOW7<$]lo&^K(Sap5L(Ua&g=h`M!>MLF!1%#7(b(NcgI^`Ec5\NK1TNMV@*I2$A?)P7i(p91haJH9W2P_]>QuDRa:V4FmfiM1o\U@*F/fJ.=?Jic`.a+P;JQbI\fp3c<qL3Th[r%\44-,6X6H0Agm3lR;[;mLU&K1Ei$(TH\A-3;"3+9of[+meO#F>e.\/.W?nb;s#'G;!bs4ZP)_"1HjN'>@'1qB1..t8!9g5nAiZ<G%E4>N`[Zj=7qZu[Xo862>iZ.%o`0K-6C0_'\U3]n57&q,UPG3J-;&hSSq4!/s*V2".![q8PZm[&GUNdgi_]=7XTVtT[TE+*`d,Eh6%6.8[l.mt>X:KY173;t&jmm_X=R$$ohK!70>"h!CQmAUO(VJTWi,#LHd*SV#L%O!br?n*>&dB/qO]8*PR#R$!X4d6_9]Q@@"h4L&7%\`d3]5h8ScmO0V-cAL[WHYZaX*a\H$T&LegO,12/<&=D)<ARJshH`;870LCV>QriXW`&s\ePg."d=J;W'Tl66e><lLjT&VN5.4+a%R3)I";3JL\]jn'i[`EUf]%%AG!E)2Nb)li78A1b7/?3[BNoYco+.57L:F2u]oQ&QnbleDBrR*T4cI=>$]-W>+_<G03&,3/#_;8)r%]:Vu2'mq)F]iNVtV1,q%8Y'\5YU4%1MR#bXe4=L)hH),h5O_"o"o%Sj7uqNU;_G+f/0RU4B`4Vue"CD_nQZVC.I@.j<.YpKWU'b$%$QU4^6<c5_7H5MJQKRoRW!@Ue)5N)O/SFFM0hTZd\5R.dHLoQ1&Zr(B.[H$=(%(@mO[m'(7[[S6mkTT)le\_$3=38%Ksujl8GO#K%n61roQ@77Qa;+c!P[7;<O?f@pQ4EotSNDK'le\[*HV&(;Dh[9FrCUEL$9"o6!+ZdCE-YY_"U4J@5p%u_DUhE,B;lNtHWMaTn-D^O%6:#D,h8:J$.YVnM?^`@(od)VB+*+-%RNNu]^88&YHejl(*&GQ;WlQACP*?(LH?Mm43gMCV7T3tMJEVK8-ic@jU81IKJK3X$eDP`e%XFo(R3ddJlq'0tCEsZO4qnYkf`q!#OL7PL0S<2[mK.*JQK>q<J'P_rpIo3B*!a#Ui\[[.sV?NuZC?sh&,ht7WN]":r([s'W+?F45%)5=kg)cS#dXb\Ke6>lYY^a$8C4f1TrXqbk2!T.UcNeEQtJ*MR.$@e^AQpWgBSS:?tCMC%?4`Cd_-8E:O1dU!j/id8M3SffpKu.^t%_6GfS[8;.O7j4I4?d"CPBr"^Y(X!3+3a2a-GE>2Xc#0AqoKtO@P-C<Nau'KHA15<I'!Z]g!<LS!a;=2nR>*@OX@ac'(&92>=+SBX%@&f[PX-)"5W^Tn[Q>"*&bS[ma-digm>lD.sFpC]+LK$BN]->(mWj'c].o$.7"=-?H3(.&!5"ImAoC?_2@U;g-V<jA#EWJW6-fXcQ%%pIIR7l8#I:.6kLXWhCj\-4@sPD2hnC_R\1U68.j.2=f7#jb0@_B$2(b<_m1$fcKQSY-iM!b/`UhZPS+O^OULqbUOu\WK7uBoX`I%X[e6#]m$*g7*cl9hr;l=&nD.U<IMZS:3igF3M\a9`]H.#PI&X\U4]gnQ0?=W'%DgJ2nVE]p;+p50FH8@:7e^DAXVuQ5$W/4+_=[J%.*#YrnN@tS4*6A*$lW,R@j1''@_o/Dr*Y=U(GIq<JV9W4l@[FQ6o5Q%;@'2+(-6ig8>BuZKQLD(NA'kDX$^^mpbSrFMg1sB224;4%7a[c*&i>"9*b^0/#@nKOV)cDfH[7q5XM5dP+ZPt*^'WDtJ[=SLXQc7\pL!;4;D#%A&4I-aNr`7AU_]AuS,tj$H*C,8Urj($34OS+%k1*>V$@CfnkSA^H7_,U%dOEp=,$lg>WOk*LbNNu7-n!se8s="46IV>c\R)s\jMPDQ,<Oj=V^EcYg$=Dc#`/[G-jRh)N53*FUDQU=%bN[F;m#DHElh2(k]^kV)UI.j&W^A)U8=D("SKUaigr]/$0hP;Ya;FqL_Cl4Td.NBSIlSt\"tr,$/Bm'1(JrgPV]hU8Tutf'C/2ep%PgetDWj;pZ!(")GPXRIL,sIdW"GpM0Z;V(oOq\FW3\422,)q\i"'\30=1t,ef%qFY4di-!27hh'U!XgNW`:p4JEG1JXDa==fddK!%V@HCel8kS3$4L!>TcXgN&Fs1V!J;Jr>RC7O-DnUZNVT:':=$0qLsZEO?j0X!:sLqmXi3/Lns5;nO\mlq60.Wb""iuerKS$VpN.&J%bc\P"4/keOMNH*G?'i1(P9/,";.b,5'rAp+$`NK@qIhWaF'<u70.@UP)"Y[A7rL3'm5,"9!B-!*$/!J9'huGY>F!"J.)rFZ'h4L1%'pf^,aunphA-j/ZAV"WP(2_0-M.ulf8taC/7;[04P^tJ[cHrWK`?iK9n*2]([XONPjB`grO3Z1h6Cb\R).i"";foPDIJ@214-i4#%/Frhn\W06XKGs#.diGrCN4Wn]Lc*iVW.--;PRpIK5]j,lm?'s7S:N=dJd\kW78VTa=!W?C\Rb">6?3i&Zu/i=F'VkF8$Cjup+I*u%%)+!5<)G4k(m/GRBr)QgI/./hdS?2rs!M=gSS8g`E-MHk=p]mQ`0ng8MNpY>Z8><sj&:''5&EX3;Y-XeT<;=M2q4hU%Ot?"Xh#a$%Q5TlI0$;9sFJ$YpLr(-8nW?nF=>%:2YYIrMh?*3+e'j&Ph'jqt3r,TU4G#BOJ@SQ?kjk"r>iIH'-qQ[-q6VZc/iWg8<sOR2_+)Kh%8[2o0"u8OGQDS?ja0I?7,obH;SQ7-*[u7FeMl'7\9(EZ/8uEP>.sOZuWj!+f;!4DPO/Ajed#^Spa7^]sm:<2Rq&OSEj6X$ZLMd4(%(0SI&$kT&;^#b"_,_=@=c)Y?-]FKa5.>!ND4'<P!/&cic(l&d'MFGJb5r=_"[4Y-)lrSn7MIYuF_RWa4a$Y'MR"i[s__=K%5;I-V%*m(-9]9!&<dok3K^a_!^BEkmoR0F5NEAHAT\u]R!Y4L8GP@r8FZg>I[O;[^D`?+!9UPgDA,O^Yacb^?(]7@fh%]%'J_T##QfP'b:%BP11V9<M\QSX/N5Um51@L6QD<bqE()<MGE?FJicDFqGej+h$qOd>UEOK7mf@F;>u/h?#u9@%C?FNnY/YhMZ5a+C"t7W*K41i9HQS%K>FR\`'Li^&:1=cBI*hN%]nTa2f<d/jFI3)_77J<mk#S!c,O$O%[nf,@p@B/\2l>ba/&KR;%hM;p&aD&[iR"!%,W^*,Y\aIKlkIn%;hrKi;[X-c;uBX;2QnZj4Q=TGd!c4a(gP4"Bj*6QgD<2T[eONE9NLX09WSIB[OSDPFHi>Y$@XeoMianO`,GLh7Z\OaD<En+7+f*T%We-&?qf%n@m__YghE<$CjT;JJ)3k(+442Y`a9.C09#Ct-,;DsjVP7GFECMlp%S<f(@2Xi24$eZ&$qNW$[-m"k[,R/LUtn/cI[?/e%>g#l_91i#Q5t&($B\'TI*I:/H:M=?_:K"`-_jPL^kGk`NIMO;nCN[m\d\uHU]p</j<SbaMFSn&MDN:W?AB'!DM<@2BOVN#;hFrAf%QR*5#GM<%2Gpj/'%u[8/)*>oHSXf),IFZ4(f$16==aGq#6uu&bn7L=,A;XJm=r\lGfC!09)7li8EkT[]OZJ1d`Z:fRaI%9h>*#8k%[ToBM6UoYrB+@c9E#+)Pe=doPbBo^W*tW-hBQ-pe8@NY$BODXT<e/!?,;5&XaV#Km$QmXB0%*g2o_<Tk0sY3FWH'I#5P2</@$$en%&)X?5g=PT<.m5_3i"i/kC7n4X`Q)<Pg7FV2"Gi@7F1f:U7qOfgPMib52`ft[kDA3p$<pPu<HUnsU(kb!JZ1(n5*]]u@6S5jKi5_k%/nY9a"VkT1.iKS[*L.917Z_PufGN-\W2601]>@QW)`X1JPCnAun0]gT_uSY)eMZTKm"@.RhHJcsk.t,k(+=G5?A7la%nATmWTgXK%-jPm5WfYBe#VB`K+kUZHjN,6"2@!Urd81;C\IfckY_TW5>eE1HF\&uo+A\TNdE)hN^J[eU4Nk`AX.;9S'elY8Kh]4lpBt!UX:is`%;Xei^[ep=F7`P$F!$'R*(a[p4)I89<I$#ka7uXcd5EitKQ=(;7lg_ne=I.5e/I[Vf1isp1a)51\p:hg##3oB#Q?506NI-G&;[eRI%ZrHdnO&ih-Xf&sD;GdU@LUWVuo-3W;`CA,H9+_d?m8)J?5'ek]eALN_)<=c[lJ48GO!hPnUR7M]I>8>7TpXl-$N6hGO]H1/aBY\,%BkU5WmCZ-@qdIe/An:Gg^G%&-0J*\*l_5Q'fjhO<k,*D:Gmi`g&_0\Z39Ae-U$_rc2B$m&L_(0b"/cbNFY=:^a\:E=d[#n:WWj-V%Ys?CZ^HJM&e>]Vch^e->.Sbf'lk4rD\bt1Ga`s/3hRl]SOG`lH=X+O]TtW%("a$cR)/K7JCZhuRflF4V-`D5k*D:piXLQ<,-56[k%aV$Eiija]NMCjHKfuQ&ohOaY[Imi_lb4KDqNKl#(k+".N`oXu!X[38Go@A:SFjnDpp!StL9$jMh=R!?Hni9jD$s3?<:%`4p7jsH,%<tg]Q\ETAW,4sFZ7q1r!;612hEQ:iB5p2c1`L5+O;@U\O#rU]8qU)(KrlNFf+UthJW(?d8'@[V2f'lGd'1XhJi`l'[B2PdCoXMI2%f0cheaZjP>6]&]'jAeDk<rQ^1:>%X/l5eF@8T>G^Q0OR?j4'u\Q^BO85:MgoO:bBkXgN+)8l_.1ZOV>;.L5cApLJ5bE3nm*-B]Ve%I22YFl=P[+@ZH[0/7s,^1F`-`5=r()7KaV@l:OHVB1O`u.r"D2RZNH2M!#4<m*2^ppQZOk>;&:hj(b`K?sWTSiXfEdfEoB_Er.Rc%;iV+4(j#t+<'_eYT7ntq>V%EY]V:.UQp3W$\s+sCVIh&(`j\Wqci7nAH'B9>@[2j&6GS]Z+2,j]].G`qs,77p&lC`_43=F/ZUI3J%RU<.$&)?2Xd_bk_mSHE/G0u]O]s=7bEW0L,^];iQ3fTYd%oc]?ACk]ZI-.-XY3*dj%\!3p&<"IA(jR!\WdGR@:i(u'Yd:?M6:4=.%"f66aOBSo.6&SrjQ_G%XWO=gTVtQ<,1Fgn\k"X/</SW=%7_^C>9EPug@38>!^I<UXGS]jJ_&(7d%D+<RjmaZa-;InB3L'#Y&>6Q*%C),(mqO@(_<4?pW(cQ#*hu,1\L/8,\K4*L80*0V7Q4j>e:aetg36K07Cl@BqY"05.H=;aiEil;/rUFc?T6ojP+a9U6EQZAP?D9uh%a9go/ip?W2N\4#5jtLrMWs]$-n*h^:f\dei^?n8H$'P7!DVle^AN&XJb/6s%<^q-=1^ORlFh/.Z!Y9:,bh;NJ+Am"r=_oKc[JB"F%eimT!)OrEc)Bl<UjrI(bMKRU,!LsFt@sf^Gf-1dN!7Kp%7+,TQ5m5rLb6d11`=020\ai`P/Rh$;Knld*SM<R$")A4aci\b%=%O@l%.Vn+EF32[,=.Mk1TF?0SR:GDo^X=h:qR'[eMWtfNQcbj=mD>:SSWMb>:JeKniQtj6l>;4i_.QTfD&bY1pg$!%,&cmO51c&8N-:8*%j,p_++uUW5<*$6]5?9<\/)iC'WT&YA<F$KD+E<9F&n6YrK(OtAV+MV5;[Ic<42^OQL4RUM\RJ0\.9,h821##"N0mJG2R10PWl(&W%)(3C9D9CRc_N_p/V]/]RUo$\70f;6.8[6[$j#.Y?EG!\:d%)ERg9bC4jbr!-[RE+b-dB-U(6pD%R$k=#\JOOd;,e-hcAH"_psXE;%l@GLKU[Mf?]/<ODP%/X:$kXuaM:XiO)[T=1ZrH?hs7j3)&UIHeY'!QR$:Ye51-h"fK79]r(m)AhDAs5baPeU"6tK!JB@"8Dk1Ree%H$qiuF'(^87TR\fW[]!)eiGSLE:dFj<Q8(VI2+pNYnhq+O``4kBb8:g70/m`,(H][6t,\*OZF0XllosP:#qN*&>Xt>SsUfI=`8F,%AT[]E'@<FthM7L%?[[ZPQkden7+72DiegDE+Bs.KLR/&3T9Z+P:m[K9;J+emaUtsO:L:.,4<KCN/.&K^j;>qsD?r:,"^:Y><7e+M%U7$72Zi'?BkPM)=&Krab=6hO.r0\>[dMp=i=#h4Ne-3dTK,Na]Y#;CrQ:2_Vdk6jcot#5H>^:SpM86+<Q(-C)EuU91o+gY-UZ@.n%I!YC70Fq0*s4]j#K1?0'$V]XN.aUWnCVa"1.\p78Y$C9pa#sH[KZ-#+JVE"e&bfknX#?g6.[t!9nDc'7Lc`lbEc]^>5W)H[o3TX+%"EMl(b%Jo/d(ojOP-SN-/p=pAkF$34L+07&asL2SkbA,,\h$g22n(;i)&3.QjXK#aX=S)1pR3!t$XtP=,.&1u'+:G"4QG(E>S7l`%hj$5]`o9>7*j/e3pZRI,j6q<NldYaU.g+0h/S2Gap!#Mg$Qa5/7ec8dT-Bscp[P)97:/cI:&R'/V!t@<7bdX&+`.tj6O4M=lG%)@%>/G1934EdVF*Os+gel^Pl!mE1eNNK,l>7g1.YqsTC$c*FgqoWI-@eI:aoi8[Mn7-R%FkWmKjSoH4lG15Ms;lj=.REl]h+hYU_/eB%F^L-REOXeh?<%4O^O"`/mMdF-l#@_NBPI+R/CT(9Ic]i0Ee`HD@<VKJ8G8Yu"`YeUj9T`$\4,$MeKD.?)WQ98=KIZ1>FXI:j_<mD%[,;aokF"6iGj*gY6dNm)q$$*!H4eE=N]^6Qi_q,CPtJ>E*?R#9<Ohk%c#VM]@X0]6dKU7)d?$tmcSEk?FXL5s#i6P2';[=l$-^MG%ro8.uf;RY+nX&b&rK[`kK"C'\KXYK_Xf\"P#IGPK>-%_VeC`oi@QEosjH)YjUgjamh5\WpD@pc')`9M?HHRAJQG/#hGZ>f[bd,Z:%ku2u"k*j!Qpae;)TPZA1Mf#iNrp0n4GJ)V2qKEQDa6R9P95Q)Vl,_ni,,k!gA*/q\T[4KI26f:<!-i=<TF;R_6LWcXHcB+?OLRL^%fg2;]nLI.VU.QBfQ;gKgKIJ=qp?s6Di*8^#e;]#gaHk@\k8:ZiN[b_"=>1?:*eH>p-NNm0]i(pB<X%^^"L70SmZ+%ZmtM+<!A\%K%3:W3:m3)dq<r:$q?`=6g'h!sgZaq>R%;TF'>^[t\4U"9Qa&\&79l]=H^=0&u@f\ib30ALtO6u073c;7)H@Y[i=$gr+WcNc>_JaC'%ktoJd);!L%LP7N*\OKsEbcd>8B&6dDC&H9bX[#<!9i:"2(\:BuE'25&Bc9k1%^O7.=fB($^8Y*R]Lh_3`G_1qKd>8ejg@5g'<J:t%f\-h;Q1)-Jk+EXM4`@iG/V#@=S"BuHK[gA*;$;u09:."g6RA7CQ9,[Ine-6,1H5BN+E/_ent3!l,/W79.R\E'6ua[Qe4q*JGC)sM%28Y`Udk:5_XZ>`b_ca7]U;OEfN_OL"\PXR6QHrfa'HR(QWbuC/XG[Rf(AgrGDTXP@qE_d<SFDpM7Ee4^H<p#r%DTq&GH7#.U_7FJ%.uXoHe><?^s!d([*jGBrRf.Q^49lX*EK]R0L+-MC29D^hUo>RiUT3d!CeL7jRkn&U.nZL>.!pV9G\>-*-,1$RcZ:6>+V1?-2r.E\%\"bH%@,C)R!&P)d;K?79K[o(Xh'*&t\3iL.o!@%f$uJnRO(^/CXLIGkJ*o=3EsJ9RD]&3R).kb_Qe*.7]UAL&#mK_adNh:?*@kNQ%?p`(5@i=5N:<+^&Tmce>P/i1!W!`"*J3%,CKUqhm#!`Fi!-5,FT#Rp0lV4c%Xj#l\T@=<##N&X*2d)6>`YtPN-6VAE*6*8l##ar\%5F&"6gFZ-dQ.ZQkjo"S-*sO/C)E'Q7_Zs6DA/P4Vb!-aWc63dEGVE@'(Boe8)s&.-I79\-q>kOS>gpSJdlTb5l8QU56?P),>r;$r%<'\<T[5&U(imVHa^-HgO:)5k(#I$WS?)]QYHM7-uh*"YdkNk'K)J,Xl1mi&X/-mHL>$MaGE86&eY/^(Qb8OjaG(Ek23HP6-J>=l,%(toHiNQ!XX5bU7L)%):7HAtQ^*9/Q#FqD0Z;ed3'Ta[b:^:AMk84:[/YgmMmM6^cQ5MY#YWH$X/-EQrC';I`pPHuCa$7/riYU%Qu%@$W"kAefk.'I"I;j,M6Y+-o1NPfu'%O=\dR7r.8t7@8]'+uu6t]@C/\Ms=I<29rQ]8!9TP"jQ'NUY[:f8s/k;=WSR>T3H/j@9XnC%CXr@Dm'sApZPb?S9nCtRX-9^`oGC!!&pJ)R1-G^34Qp<07bPso8XJOic*71/T'5&e9Y8./h<h#irB"R&CYEuc39/`uc,;R-BQ1IW%Jo?qiR7$F:!(Y)+%>!B/Q^]NL!Sb-!l@#7iAjsU`\-ln=f\L=18X<8V"%.KS;i[-]aRVAj[1#=`<`C/+1sp1$PbGLS`m6+p=6ll@%.bi.>hFEa&s-C.'S^_=b/ab6WLM8sq&L:DV$G\P><^6Z:CoaI,G4=X[V$fr0YDk#@eL^rEQYlPkD`DG4Gh`ILN2cQ/4I]f*+Ha7M%&Lg6T&?Ts(eOYDfZ/KYJ)X@jGR6&kL7/Q"P&`?G(e9BC9/!"nHOq:V]0BF\#-)$o\U`FDo<l+dSe%%bh$qZ,>f</atoin-TkkJqV%KhA/4cl+FBXPq@@<An0_GDPSIVt?a=`LpVcU2(/Nf4lN;N!6M8%)P&rWIP'PIA:#):uglF[MkR6P">!(NJqU0C7X<>/:!2/W22XL%7iAij=6,/1Ph+MZe3d#/V@<o^qaH-t-[hGF$72a&TJ,nK@Qto&5b#g&RSg]SXn^9U^YPp(L#q!<-6DU\@#5IA)*gd$Z:B4Y>MXoJ%j/=k;/^CU5O45!>D$Q?$NZ=*MM#5]QesGE733QK`MIsOE`d$7#Uc@G_CkC(iq=XuW$eou!i%:n9lV8AB\_RS@h%21W;<*[4"#$:#%LZ\+">Na^@SCqqZicXZ)Dg8s,<g&U"$E*g!Xk^$(UW3T]&-['t9WTnm"-Qn"-:Z]&L\8EIV<1XPD_ct]"Z5kD1e.9Wl#_0+E]#E/%k,>naSL['r@b_D5]:F'E[unQq'M6+J]O'#3<"%@$C^!<fJj5rp[+Y#(MYf5K]:s2)6-1KPZ'oGN2+*E,m%f)0EU?%HLS%8X3\4MD%WQ?41c^VSTkg&\-`88@J7F=@6L$ILMp/;f!qk#Fp$-iG)@W/EK/t<,1L>T?m*OFDJ'1"Vm-IK$CJh4M)$Z""ETn\$+%VSor:9jH0%OHTN,$&d5,<kgJ;-Dcq5<VQ8kQ_9q.ORgNNo=2$`)D>OU2dNo@(*]tTj0&:%.>'-KCG:VXXoc-Y[?9:X=Xdh4`&HsOP_EpS7n$Ef%&fad<roT7::9$DnmQSDuZ-o9d.3BUM57nWp22?fF_/MJfLk;(UmeTjR&<q'OCkq/Ikc"3kMl"I1pK7(%L>)A1WHt,=-dZ/#6A3AJ%NKh4?@C^9:1a]cI8[>17[(DO1+d`:>U@Z$tYI]=d``*"rDEd6B>EGW=o&iL>K=e0b:L;sIY@'Ysipje?0&OZko/p%#O*41P7\)!$%M:Aaai'Ne0a?K:!MA-YkdqRr:%&Q#?9ofalUh>bHa8pE3WYl']@*5PVAo,98[rp5b'>@JO50Qs)PqIRW1gBD354a[%3?0*ig2uXQ%iJOa61c'rj*EO=TfA2Mggl]2+N9tAaW(,sW?#RaH@WFYA*ZSaum381:GBRQR*uc`&K?0'T]AP6?Bbn4;j_]\cm*5M&F+?e?NYB#>%Xp+.E0!Ap(P<66?[Qo(r!!$S!JgR82MJKmm`=5,P%EMsDF?P1;B[o*0GSe&]RS/Niff)>jYY/5`3.SfP/ZjgGkeXXaputI;o,C,:%/lPOi(C!;3DNPM#PpM+!ZWiN+..-E,#mhR2Q(8kK9#9rA.Xd`?:.YR2PpB(r/hP+&fBo3ZE1tdJ.Ve0bV$66(D_J+m._=#%MW+uU%8oi'>"".X%(ICkB=<g4h+bd0WO`"gigW/HWfTZ^mZfF]R>$:iK_6$lG/U_jipdE[5iZni^E&uL;.=b-851W[ug1j\fqiu.meB%B(%H]qghC+eDfjnDfl??MNE_q(Ie)8d<qc`F:=edd4*;%s)Y.oI*.7UEW96!+:GOGq=0eV<%b:jE_\FiD=C"4Po%()dKNg:Q.C!i=b<%J65VA;F!a8b@n\33<Q[_=VND@J*1oORqcqe,tJ[E'Fm$lDk;,)l:<CZmV`Pi\3,V@kpRn2igC*R(=tjL,K1:i@CdPXcY]F*1cjt:%-b'>acTjdc?S8Mpe_/j)m;!@2YB'u)<$P(>dTq00\AQ_;P+a>6aj0=!oMN_.3\n?OB<#\8ZKV3rAZfKYiF<>_#u\q"4frW]C*0hA%V9@b;)o[DCA<^!t\rtcBh"h;!!"1Gp(0%g7Pm3-cO14n\M<^!eBZ2,)0IsR;@'t;K];<<?_Df)=D-13tCR%lOY*XNhcjJ?qB59,"%lr1V8<=V?kJO6nbqDKVUId;I!<=s8YVsMh;N_gI5k5-`R$mPqtB9jHJ^Mf]DmOl-mTRbNbpMLkY`Gg]m2i+!0(3&#qD^r:cLF(<i%D!h>ri`&`Q"Uu@fbRc8/KGJS]MB?g-%dL3e>.(njU-#&0)0mKBT'.iH!%O.nMoU1-0:pjadcp4?:I=a*GFj*i1@j;cr,^K$<A6g\%jnWqqD[3)L`*2@a9*[q!-[S3J()U[%8-WM7_T7I$7.(N%cna_6E(tGh!\\Y<T,OWuS%J'cTMF[C2ErAGq!D,I:9pP8`)5]Z*Gi/s%Rfd-@7e)+Cb&sE&OCD'8ZjDn>A7Z66TBd%nNsI,g(YB#WH9'15JE'\bf$7DVK`o4[kB%uV;r5=@FLBuU>R<5Am$),_qcY;$'TeDo%OnQnN!#rdI27I74LG[J5MP2B0onm8C`GL6VU7c.kIG5en_qB)U$9T[B!!BoM6feI3lAR1KdX>dC*7ipV.p\3-!i_PDYdC9?VtI77%i%]Bg%Fq-62Md-\K;4?dljLsG8C4ioS#IWX`-U"3#m)AOK`CEIHX&j2>;G[gLo\hh;[glM';)rT+`q3<S(4I)Hek9Z0I=P=X)uke%fdBK6[3iLQVHKafZ1!13_h"Acs'%c-k\<e_WqYJ=<VjseLt$G;k,:TPR423U6W?a<KM(USUH$JY[?p?ZGh9`&d=sC-`+Mh>K#CX$%^aGJRRK<p)-N@uOgt+r*:.W#!d,u,]niaSAa(FNQA;K><F/6;Ul9\eo$Ik'f8(?<ag9IK[;5YfG]M+d7Uem&Z#hEL#^).8gLiNNn%OfE*$Fba%K0]FSC*U/e=Zcj4Z%7epm-;n0`H99qRC5N?qaaW-kSD0$>6p<;JL61pga(BKO3\W,(P:]sY1TDZ+A"dt/-e4Dl2=(bZ%4c=Y17)J3._rpF?at()To0!UZNE3r@GEQZs712s60OLRIQ]$;^a(O-H<:U]Oc9aPocr[O2=K@XoG!Gq_h(7GS@iL;Yl6tP;,8udc%(&D?fEBW&e9u9$5`]q]6lWKRd!c;Q'(G#W1f^?@0`"76B&uhUQZCRH3iu#+gNQ8,Ob-J;qnH<%8hOs7q6Asp66G<?<=?;-*c@e'4%6\Q\Z;hU]c2_MH\<)9V=>KrNHW1]T-,lEJA7KNIZ#*qkdPC7e`Z+uH!<C!DH2a9B*RQ=AgRp3>g8f9r#P7U<GVT;a10t'ui(<!8g%e?5cBZ5M3C%Xi@AFeP(8Jj<!i&FehD"#]M.8m+<6(*hKYiN-q,6eJmB2;p;a^JVG^J*TZKqOpY_CnI]\'s5/`%BdFY/(s\'?4>+e%@?,YY9iLr1^hB-#)V`8:]XD<X)2>h<^<+W-%@-*PAhG9`E'Dc`6$Qji1HB)&W`[Q'.E6h272[\pbN$j5`Nl^q<uh(h9>gW;\MZg.%T`-j3k/kK8g*3pNfU=1_p_ig%SE6e%22\`>1#)OT9ea@Gp3`&E`_n=J]=0^YK?EN*,iWXMYWJH*P;0d?q`IR'c#\SEUq<S8a+6-c%B_?UG*uP+D*J1&[N`>OE*$VF(;nNTXT8I(`+AA-8M24^=4@8!P1#"\Yk;*PNme1h\lR8'+h/4QjAaf9?HJIZAHY.Y_qVrjaF>;/+%d@KZQrj'/rHANjTpamOE9\n1"NT^'S"MRXKPK5IImSk[l_Zj)=A)Qlkp-ZK:1*H#cXU"\AnVi"V0gLS4ppk1jDPB,sb2,C`d#`@q%&N-]:A)MT[CXWlgR9ajlL+4BM"P<7N.6*8Gb:,!b![m__XE9To#Xpp,e]1SKM`ADU^qjn\PA!=>n+N^YReuM.8RDW=1831GPoB`-%OEha+"4ik-C6GegO>A\B&a`qN`!:5f?2M\Z<h4`cQ6pOpGh+fX[GX=?_p-XD*g1V)U]nXV!a@#RD6\],"%P.\nWd[<<kfJh14Tk/%;[LF+f1QqF<Z4H4nF<DA2[e6:J7-EM<>cHJ?/Xo[WG583r5B]BgkgpPJaQ9PieHo^CP`Y=s#ee4L7oRZ=FN$.ZF[u6PYP-E6d?n8%DbEZ[X21)]:TBR06ni,+qMN]8\4.l8_2/VhF$Xt=fIL_T#Jb+-*`tdWYZc."E*b?8X>(eq-^#-IfYj;/ae'`X.3O0UAKn&!MQd$Z%Ke_L_6ARBOo;'-X7LS3$!1Gh)VP$./;Z;n=;t4@GR9E\aYQ"&"#M@]%ZK%s%:Z%-1cD/k\?]@rk@;P["LAD<gm*T!2M1PA.Ih"qs%Y-8.*a@XWda=-i\"Qo[VjmRZhOe0e[2kH)fkEQQ*+2clC`]Bq'``c^B%mQ.;o"VogO+42f-H?FjS5S.I"/TIik(j4gG$\qEq>jHN%&EIq./aM)Q,)9fBhLK2V!B-lk^F2Pi%aVY[Ccq!dZap&rkG4'F?&)Gna%HkFK]3c3.b:1$Klt)E]/D1q5A(Ze8+_.Q8ega)9)Sr^%e_g:Bh3Po@;;d!PVI6'<p#eJ@fHc:t#!n))%p_S\&eM_*UJ\(Jm!ARfG;&>Ab?V28)gci8lCI!>(u2.F_jdY(7d7:\/r-fOeIXqV%E`^Ua]Fl]p6%i=EW)YH`(UFpaEcF#S)7Qlt%X8N_[o=Z:&Yj3&h$PHM=F&m::@fcSm1\Q)c*&DSmOimSZnT0W>4_],ie6Z2aD#Ca%p2n@4/!3W#O?n1@$LL-<L*B)t#Rt[Eq3DPIOV'k5L-Ks*>.rdt]+:j3LmQh.ph3>#2m'<HUMJo@/a+<Nh>j:\_A3l`QDbpVf.B_`%7l8!RfTbeTMZ)HPjU:bGcrmSI\bn9P9GI?'&pIR-<:G#<-]gW:!pH(/[c,-("3pp<@q(D8"8#PRVP&a&al_"::fW's`Xs&=3!u\m%Bi:^)^Uc9F'Tu+q#9#'%$3ro:;n+JqN),C8oo7uKs!E7_+Gck=Wf66L<sGf(6b==/LrtA&[>XpFoJ/9?WhE/glET$HAO$Kr!CB.>%8;;'o?#'7N@4AEn_H!jE+TBhikho:=0TfWVBEaYh-2p/p&jp*7oG1-MSb<sSoGFYd05pn%`_Ytnf4Y@HLV34BWPXhcdA-e&5b'q+%qKlL\M'S8jKD&u4.RaCeheg!kr#t9\Tk19p!dps[Ah0C0rRc/OUk59UI/sJH`A3N/""#>4pnq$E$JeuLU?d9@DCN8NK.J[##Y%U;%,HL',:O[>Yq?:`"igZ[A1=ONI]:Inu$DWsl8$(g76ZOg#rsG(e23%_^26AV(W=jguP*JX<!N#QIn1[j$7r_N7hq<2<mL+cJ"?-N)%a#"_@D.K9]ZPW6k?s'f23<`$DGA%5UP7[W.RT5eF1uXW-'-P/FRHLj;Gj0!Q!>-#V1Eu28*BVVCM9p&?^05"B6]qco7.X!_$4&rf%N+*4DQ0ri]fpYIX!?b<@TjN]g\siKO$CCpHDm>M%Ie9T`8.?NTX*)\PPNC.^B)hoc3cQ6Gk\k1.k]&1R_"89V3j]l3aRf\%E^Q>(%HigUMcNO-Z.Nd[p=faEm8Hu<P5]58C'K`Wn=Zi3Koi26@O:-aJ[_VbAm6cjI>B>5#f1Nj*;h_JTN14pt)Ink452NtU^CGCPK9>Q/%Ka[kRoHhMsJ5.1+)mBorG>tTD@DfjF_E-1;=%W.TDJUCnmUDeE3Ml4))X&k:nN"G7`@?]Ap1rPBWmtsa_4'4fcA/8[?N!mspN]!"%r4(4I;(I\069d_^!q&1l25s-sNh)"PS]A#M7;KO$X".HIB(R@Dh1$K!XU8g?O"_SZU\U&2=ea*jT7)m$9N6SqM/lClWdhJ>&Z.t[%+N6T_5!?1$5%M3\2F3O-!3FIc-&k"aD.MDN@6<b`m$8uR>(O>G.\\.+YdA'u*Y'^$JD&BmbWZ$60WbBmd\D(/;t?)kT4YgLV"\np%djX$e;3#FIWTXjZST_cmMGPmZDAJ^Fi32sf`h$V83/n,'CEl243IU<27K[suO7_n:o9'oq`+Ujo&BlB.LpigFI^PXedF+q-A:\<q%Y+^tjo,:<H2db`s`^=d/LV_-$U:(oifHTb543Bo+ZBItSU-;K96@'Vrq140AH@<t1]s58FQ,SAR`sV_FWuX&+)gI[];J6_NmFC$k%p8BUl!).rO3d]pb1"kPcogYU8hcWk/?0mft4p.[;HRBUY`(fm]Z#/>K8ejQe6F[o%/t5%)#BGSPMu8ngk##:n%^A,S3IYKm@A]&S%2b:+Po^5MT6Hre';&*^sCcrtdaK]%4ikO_sC31\F#+S,c(cu_Q^)*fa:2eeWd(fF&<I"T?T5hKjCJLYq;o(/DGHam8hc+'6*7"9'%dp@Cl9PO2,<>5Lr/\nBgqN9('ESp>Pm[s.tj]A4tmnfh]Y^H#,Vho_rJ?1K$e@sX]XK'k:mi9UO?/)%a8aH^EC\?NT0Wa4?n3[/+%^dgI$/6=si>J<iqG^pO3@lV>>WVWI=mB[h0qO.ete&eJ9hq?&GX>*gRC@[?@*n.rU#o;2HH3-D^mHGq"7hj^!(Y5O,J%E>N(I9l:%=)_ib%71?[T@Jju[OkG:#(?T]^*QLBFCMMDKf^eM\P"`cMlGn3b'SE=;dWCgIX:Ed.?-En.e9(1apC0I7ClgdE`RaWUY[ag./nKU%fdK/d2t3Vqeq("DdCB,.0HQ=^&9h$C\^Grs$.o^PR&pBH1GTVIBI2oo2Fg#H>@D_+p"Ys:Fc``KiLct)"2.:&h]c)6-3KW>-bI0j%"rS4FdK,S46:QV($NWZgmN-WuCb;SBC!Vsl+^?Kg%sM&p,m2fXhCCaB4Yn?taKE?242i3G<>_&?$b\N_JTq=9=Wb#n0;>GNo0DQJ%,h%\,8[IW,g@@,hja.25,/:>?>sW;U,GjoF9p*5i2p(kLOT2kbe&4l=brU,2?PJ_SGnN_&[=3oQSI>kANe"`.f^KoUHCLu[>:/Qj%4jL3@'r`%iI8ae@SE)I@&>0t-U;cK.3pNq!Wo`jJmq^r5gdp\RXgGlPMVc#)`@J5PDiU>>g3nuRL:lOc]T,DiP%<8bK"dIqT?,o:%)^m/D^4\!(R64>u)5&[o&IPK[5;Uk^CTnIFc^TXY=FRPL-uSCF]LogQ,HYe;X9u?$CU294_@1O^mqjuk3,C,SX3SA)>%p)'efnJ^%U2KTL1dQ>Y#n:uK%IcX'N=l=:Q5k_co;GZ416ZP)BMOlT^`QXKYEb5'dd0ein4.ZG&3#_NI2ifD+KJ"]+R95r,BQBkeLh`o`sJ[?%gHI^hPl_Z'Bf`N@7,\'YGD)\X12XGr[iCSI^=d?.Hnpa1$9j0D]6NL>^e7Bn(I!sodF]k8`X2`NG"0ab*m0-?l7q[,Ac'5dn_(N+%e<W&<;K[kG-_W=)/%Qo*9<uCQ6B$'`pa!T6^F-N8S`U<U-J4W4;tn2W.p,//5$WM<GR\"soO`+F/&1(d7W@ZK`3R\(OBPb-)$FiM%I0NR@mOc=-\@j*`mnG@9/W[?/`iA?9*S$n.hP&oc@hF@r]lT8Z$IT9-)/g;Te)"c.P=r3;4J]rSd^"Kn'a/A%,`7aL.=);d9Bm"u%ih7L.VJc_=@,*`@ob;k$`Uu)iFRuI[E;mMbE[JS[XsPh\ASDO`ZGr!\j=OM:[>L'4Mc*Eon>"@c(m+mO6>>j(#:^:A\4@$!4YH*[%2O9A@BWd%BHjdo@^$QXMF4Vs2.Jt6*"QOfWD0<A1G/PFKAc\/Q>jVVM4$;X`TC0YNa[/r]k@@$^=pS^a@Re<3k!l=/>iFB><nI"Y%2`=qg:r8/eKtK)/$mM_:5!ikk=sDAmXT#0"7t.^6"IJ;BpqpjJp;i^dk]RTuc$"$W"LP"l!JO9rp6MK:Q>OH^CFm#Jc$AHLS%^co%6op-aOhr+P;+Uti9+09s2&W:mjP$<R2F\e.SkjWnS^WnmPtF4JC(o>gietH4_iK;@8%Q$ue<%\s5I]c0d@`O22#L#44^!ri(<[t'%IjGG1Wiai=h+CdP>H_B60PAoo)@I)I0hOpd`HBN"XBUOa%D)Sa4\PST-"]_PRd6D)'tYI%I687@)>-U`&Jh3_=AbeEW.],H,=s^i%Q`:9Oj_feQ@cr9;,J:`VX$bTD(efD\TMKG+$DW9K,1(sI5rKJaUuK4X(7(:c0k<oH=cDZ3_V/P[M(hS;q-'Y"d#6C]H25_L"=$=9%kE`LBb,B\p\t@,i8Au#8Z74Lc$8sPA^<kkkmWUfh%W\UYrpCaS>H,gQ/OEr[pbG_(DN9A$8c?,XYN9cRgRu=(;d^A^X4`&%g#\UY%*o3ZVDcZS1#TSYG:sP%U;:"/d1pbcLp@)i#KZ_M6^RG;<lAn!niG\/c_+gbRU6%>./4j94Y'>c-9#;A[NSoKd#"eZm%Yk:gAfO,%%8X1UKm.Tlrfspflr3,;(_Zj>p9o5M9\*ZmShG'QLgFMr#X%J,H$@[1/g?@KrGp+AFU$=D:F4E'8$'M;Q=Q-9\>UM$BdLoF<:a*@(%S8Zc`Y<o2k<L279I>Ga3AR*AT/J$58s8VTkWpV;sQ4p;O"fdX^=6;lp2.C;$<OXKT?(lhM0`5&gp/HuS(H1OWTJJEigAB6t;M?3]%4,`[M/LX)NeTD1(T3K0pbjB;`o"5TCEA!;)0&D7]S7[&oig5QAZ@:WF2u;Y1=tN_X%QGZ-UooiuobL\72:/')2iNjTJ-D^<cLR!9%<I4j8)S;#]g.8"l7B27qMkZ5$!S7%$A"k&D&)2m#mF)#,b0d)S7p'dPamqlk!Tp?%P:o,V?$7uNp!WRgZ[$K4Di%MRQ7F^E@eQ5D%=qJJ(/WdrT/_>)dm>IsJ&+p3p4C/kg^NJ7H,R>/`\GP=Bge[mc9&RRE.KEgJp,9j2oubNb;l7)jU="-Gd>*j_Cq]c6QF$o+!+AEt%WHbYoQ%!mo:@]6[PQLbkjoi7*HP1b0K*\h=.M<mkn-#^2N;?d#7"d'=%339r(X?Q1E76.fG_1sZ%VcJ;!#`#X<P'=)Al5f$<`0Ub%X$!YKQBtqQ>+$V0kal\k!EAjam^b2'VoP=(%*1)iPge#)L$jl_:'.c/#rW,Q=BFb;3,Y:eD4]m%nh2DWbW$AiZ/]9'gTZS#au[/o%p#]R3-/qV_bOY2.&6%Y1n-(1dhe:cZ\aWRTcu-\6U"i*H&6'iWEi^bFCIqA.CZeaR0$/]3St>:N.e1gn)q?&4Ki,g*7<<mO,ng%2%E`^(;IR>Q_U<g6=S^+"+/2ngE*N2elq5_g?R61(%4bq0O.s`'AGlL`hIrI\DH^rn_>gQqIpm9n9<;^V"Q`L9t*`A,B;^qc^5`=58%<D[Z<*ns`6<Gc@pM7f`IS;JsHE,K%t$3OheMV\MG#/qe)d^+M1'9N/D$WTUO>rabR-V5o$B;gR`ZA@0!FaM0Z>qg[u8q^ZCIJ;ql%03^iZ7f(]Cn"WLL!#4;;A&fUH)&2l)-=Ck6L&\<TVTK:&>6glJ$TlVN(VWT1pW*')mO5XdMspYFkU7p994]T[%9dL=[6#:$c<)Lt%WU.b'=/3b%3&Pk=")q%AfqGb.^mg1oND$SpWZ:B_FMZWq$X7Mebns^X94n;8$:IM-qi,D_BZc`Z0U[\n';HmYXEbokINA5N=5Y.'%F!l&1:H0Afe!7'(?JL>B4[sX!THS-r(0;_diZ5tUp/(CF%;EdZ3[^s.$eQFJ3ZuFeHr@2+Gs:*/m$jf$&mUeLJR[;d(Yf5+3nbg'%#8XUiMk`a>?-QMIG;'AIgXqPW>En;/lC/%in=gIs/#b"BCk8O*h!$;u/uDNJh+0'[%F>n,m"bXoUE'$jU(cR`e]bWU@"^sDgqDnL%6]r#QZGQ:jP"%PHmNcu-9YtbX4p%?uGEbl=TVdlB6<%nuGCeYqS,oA8XmW_"Z@4#4Ub,Id4md->ET&O;>@ZSa6'YOjV?TT0gd>(j%;a#n)i#9q[?s?!,jT"Pa^)XPn7;Dj=6@nHK^Uo@\;0m!Za`</:]*nIrN?Sb<43CNKD4=qG4"gl1?cCBo+co&#$uq$):TAlG@-c(m%WLKP9(iPI-ZT\-\#^iDEK">(]GS1"c1did'.RNE$([ANl(gSCQoRR4+&7VrmJl:f1J0Z.1KA6#ZE=ul:brsA?*^@lIDa>?fA#_Zm%+%flYEGmEqG'uaD#QbdC@P]=Kq#PN3%rV&GTWnKc+it5X6ne.X>G]lJ+5R!O3\"9389E>Bf*\Pi)H"Pu>I$O+E)^j"S5F.];X8A:%Yt<]Bm&K>I26ZAq9f:#WYofnCAs_lOqQQ(cb@["hVGjPlKI(]fVquT#Jke-]&/MFtiNYo[9UiH"J#WPj%B!3(j9IA.H3h8ZSTYIB%2knnlOa#BS=(T.0Cdr_0V0nR9^tVl4[397V95@ftMkD%M]``JKGXE6QP\j"fp$lq^Vb0e#9rF9m""7$#9:*\8`j(#m9%UH9)D(DH%e-IInlk*7e;'Me$KM6qt33j<gk"qn#Sb]6&[etLS(MfX*1J("VUckqY-sD*^-E?=67bER7U`)])a!dKTV3SQ#UoH']qiLpQ7s+h=%?_>WTlWJobOdLs.QOKO/:*1Cnr:dJ;>Uip+ds"EeLLO,UX#Y%:;&sO)j(,cM1O!"KMYX4k;:aHB\Zb<r?6YA,W:uZsM8iT`3G+f_%`bme2T3UcDZBOG'\_l'-f\auFf-Jm,/ATm,_=?>"j+kQOp?][DANC"u!l[dF=\)hP8iBs8+.a1E<Y$:u-N/"nTq7u7aMLQ^O1fgF%Vp<;KWrK`"Z#)/ah8PK9W\?aK<"L=]`ZD*T%Qdi=^=./JQ0.qF7Q8nJ&M$#Z-VfdSs#U3g^/"XoT=H5T:/LRke6#8QRdH+QX>sme%Zns&b[ouu3i::(.%]fP^Q"X3.BYaT&96-M,LTp-]VKi1bni;Q,Sq>;W80ZJl9ZHV0g$i7s9Q_Osi4GfbG'/W+r^uRjh+3p/S6<D"%f=@NC^`8S\<$NnF;aPlR]5(1#$kE+H&W)UI@jW=!]fH+6ci0?jPiNfa!70VOZ<7%ZA+#8g:7VRTI]Xq@fj*e)\V_]E`;eMi(JO"O%1.#biWlt.Ce^W%"4'bS%EW*EK;d?YFTgT1SAjq"BFlnWR[N-ZF+s6+]D\-p.=tcS]OWY:JR4(Lk98g_>\m51)YS0H+Ik2(B"2Ikr%fU_(E2A6F%0/Mci;l0HRP2/$SS-DZ*^IF3l9kR\K?*T*S)r39Rk^&"VMEOl4*'(S<@[$XTpY&;N"=!^&b^$]!CEIH;KIn"ef\>h>%WG*'48t-L$!;:#\Q1T*DVBpB]38<L!7&V40(0\-Bmm=^Tk0M8F^R[>U]g;f59d.Y#8Kcnl5ZP%4erU54EY@s\aGusSFgnBBIUoVI%i#!INOH08c]\J4PU3^DHh_0'628+D'GE35u6PpOPeRP-C*clT8`6TGSh8oq28*'N6EUrCM3tH^ZT>0uUnsY%&f"@j`nXjaM<p$Z9%-TXDG/GHp49F]nPB_uB5rPeg9:;<H4nCcfo8Bn^-C7:F@@:<0jCG@_\h1D:$eArT]I$W1646@!.O(9`!d/;-U"GuTEp)O0a9ArVD%?l,t'fLT"#ljs'0[!s&a</R@INeN6\g,`tf_>DsMqm#@hWImQ8+j#5HR5ZchSahj8f:'RZMMYWP%92>QH'[83&WP`h7bhiL@ms7]%E@QC3"jKD<^,.eE64cPDRD\k^FTM^NH>062:,<L4s"Am]4!dCWAsJCa^M>5R`enZcp-4mPEZ9<7W&.s!%+%m^$]kD<$j.#hSCn42%,&[8164h:*M"F&7=!3QU@0:VITj;(KWJGL?^^uVPWWfDedq#e$,B%R,kM!(0+hL8k>@g-]>/;8!;LtM&s&EO_;?0/M2aPFa14["=%HK?LXIZ_WJ<]4G7'4P(p#4NMX!(LS/jQaLfeG8E+cDUtJl"9\\&@RIp7l\Sf")]hD"P*!XFb!6g)C"OIREXFRBEP.h`6p_nLsQ4A%Sd(.raVrrm#mG"r,5WW&_A&=WAjTQkitM%'O]K`:d-G2+&7qANb'CFgMULuiqPFYSM`Nl^B?@mi^JqAJDdU[M54Js10^llXA5EHY%.L-bB@hI5<1P!qdK+!M6rj\"0R'1,!8'*->4-MMh=f"ABgNm28T>,WdpTf.DH7*AM&i*RjTYdQmaVM4MZ+Z=MdBQsAkql^u+"6`i%gAOTE5MeNfm##ro2gcg".iHCr#.P`"pC3M!,bc-\kKaS`T;%p74"(]WkR*Xj`L$)S<e[_jUO]\t,$"UEDdbK^(3,WkMA+MjK=bW;%!ZE]I&GKckYlh]h$qILOX=Pu.'?^dhQ>;`5^bI+E;+*Y\fBE4c+8ouD$A'h=\-`IGX<9FKc/4g'B_Z'^'s9q46Y^RlWl62@+:APr%!?o$@*WQ<Y:m2IT=A'-]-$4A>T%5\^Ftl\m$pqL+EbGK'JaOm;:mDAZB+ZD@F"LmkAV,eg`^K)[P5'S1"%Ya$''eU$[3HRT(,T]j%'*Zsq;18JODtljG=.1!6<f*O*l`GJr/LIqgL8SD-A0532'p4o`7L;1-9XJK`WY>tg):TL=#f#58Ir?Ms]R8VfFKMe$6L%M%daEfG%GVf$S>&\^gdQr/S)?BSP=[Ui@DF@h(ghON'^r=aoEd=qFJSoR:$)=Md@7*-Yq#[""F4mZoM)j+a%GPdq)i%?/n5WRH?j1?N%.uX/%%>..[jji/A-&H<5IA>pWrVlOXDL5bB4i9T)B]X3I9c_`UL'4!"V\O$WA"am34+qQXQ_tmLf^!<&M2I<77#nfs4o:[/0b=g"0##nT%=L`cshoK8dR5M''`1p:UT+aWs,EqW(RISMa11/tqo?(t:8]dMn_CV(M&+SVLeleV@0"k>@L%So99`Sk%hQAJ#H&8A]$Ch'B;f,JL%]56POZ<I5gF-c))N?Pim85:rl:9l5N2-*u/k&WLr,^YOummLIT*W_=e(,n%`)h(B1Bfo@C0>Uf_$X[Mk_!CN\M;-O.>UKQ@K<n@U%leOS?Ks6uPR)N+AUhJI5-F`Z1cn)l-!P!4Rf&N]CTTtWaa7Umj(lh=LEHXN`m9elln6fhD(Y30>FkRr'j3:S:a[h]/RNY7]$reJp%NZNrG3p3^f9oe6g0Q^Ps>7P<d5C`>jF'sER0p'F=ep*eh@:libYs58!iOB=eKsOs97=*pIkX(Nu))R>qg3pMFs-Al6EM"_VSSB_W%p!pZ^1S8p,ND#f_d#[9AG,E;\W\\'0Fr@D\X0[(KbtdJtOp//ZZ?Y25?f+QUXQr,/;\f:6O^?4L&l*.B4&M1RgRI(sjmt0J&Xl)V%8U8J#O@\IOU0kUCHgkht[L+TsJ;GO.r,H==-'F^e#T8Q0\XdE&WC4S!X.9;G9>qF;E^d@*?G>t7T[8\YRjB&u,dt'2C?aZ<%nai!%UOKdqU4r\27(W#:o8"$%E8G%<P%."_7Mjb1m/+i8$hk1#=oekNZXX2sIZPNfHV^o."6p_CFfPX<npj8X6"@n_PTR^F+ac"B]&ReH%_e`1d$BRASeI^B"RBr).rGI935iB380sTTCKA&-,VpSt5DQ-Ra96dnb0W5(<F8DZeUIn1KB;']E>tFCk3[aBnp.ZI`_\&:tIMnek%6Lq*)VoUlWX_*M+WEM8+kZONA;R6n=4l%IDb:RubI.4pKU7JZn!+CiQig[KN,`T'Ql>3!N=qs+0Kq)]7APUZ$1;u4h[!Z#CgU[`e%=sc7m>-k,W4F0:FC2DQqZ'E7O]pUtN'CJ/3Xg9:9;5;'='@IJg?sqg66P'KN4$b!FpJ@dBe/CJ(V"Dc,bro+aK%Qf@IN2#<9`<-\%TkHRY7I/8M+rF]a*Ut,U/E=9SB>tKB@4\Ct)R\[rXk)nfH+c=0)PJmcc\tSN\NGb?[mj5i9Tf+kZ$lXtSi`1f0+?\Z3D;<mJ&e*_%A=VQSPH0Xh45092Nr&pR`H1DFF-`DH]G8a7R#6[^3m>7l>IRH5/"oGi7ktu:h@jggP<`DY)%G6*NS]WlaG]G!V+.1=U;Ms`X3B&[%f(UV3m3pTam'3rIR?T6/)KB\mFtI%@MZQul\pL5k1OAsK?YT@OY<*=9QF6tMpC_6j*C#@8$cn"=cSleu:6EaaA\\+E_YkC;1<X/t%len;3b,b<=mq^V!<t,1aGgCtEX,IXm^Eke&iE<@NSVnD%HbNGtrGJ1JW8\pJ-<o<^+CT'KKA8$q1AXdWZ3M4$-M0lTQ!5l.1[MYL%,KFA<o6<YQj9U)g[4CF"lAF_ijfdus(m%V!d:58:O),1[2p]cniX7$"(15F/U.7dp;nGkUfU`o=-^'WH:%9&!34&(989ot?)pT^#%W>?UEnh6Uj'Wqi#KqP4=EgRt2m=%+5j'&NGC\_ZBe!-.g0cW(g%9$8(rBf#chT_S"-rPDI!4s/FU@<76DR/af)t:A/2HU$^FhrOe%WWU()7A&NqM9[bRC^jFPAC[iMG_.BWJdM'eC6rLsf!:S2^6B<q'6YCm.=Jd2<>kmp2SD:X6-'aH5;b!K;i%.A/[_sb]'DFf""D(.%_U!7ip@)s;h^8$P>U,F(`O37Dp,ka6c@3s+'AVT#.N7a`]14h``N<$Q$3W]++"lCj2D;nQ)Pmr#DlY+r9`==p'Fo7/[SOFS%i+RQ%&p&:r<=<+&^-]E8N&7A'U/7,,S,8b-D\E^qV56p9?]NV\ET*ju]UAT[#>f-ZMFueo%8+m<p8EX$XHt>DZCXjtj!+fJCTq`W!0ACp%l<-"@#[PqY.uq.b;#SK[B`78@Gs-KQI&FjZP3TBP9Lj>M(/(=b\!<n[3Ll6^q?N9XNV2&(;ReNRO33#lVAB+3L=%/;ER/"T:13nF%3XmJ(W*jAd(IfHVXHJ@M'\NfslO'*-]srnkA%n&?XmIh-X1tpWH<(4/*%ZFOqA6%>\q=sP?>!"dDnnE_WhumYeeW2Dm^LV]jZJ6(%6[C%IB2msYcYJM.ll92t?`Srg;s;nCZ-ofrel.8Grpamglr!5@8tGeMPgQbbRRa3S%^JIb(oin%)FCo0%6(WKduDr#.tT:m'fBQ&%HudRN6-$LpJc7]Q4uQh`SdOE7:;.cR,Q1XlAK@k*Z!sQj+GD`'F>VR+"_NZm_\:E[8IhR]KHZAIgP""S;H&ZF^7"i.,Jb`TJ3VM.%0k`I<I`nNfHkP/llQC9s,n:<p/]=KqFk"tUbSQ:O)6F@pP5l3DMTJ4<NQY9.XB@^\Fg43*,Ob/WJ-+L9)B;3$ajdL1T%j8<+b1PV%*!>"b8D&Gg@<AZ<in%_5#WA="(8-U3a+WnP4K1"Qbpu2$+F8=hVW]F&GBasCVLIOW&'ddf+9kiHa5/6BAiploP^At#D9`a-H!`&o%]A^"/9i50(i-]YF$M'cp,O%f=S(2"%;s3JHmc8C<[>(0^g'L81A11*-itlS7"C"8Dk0ff2S`=%)=a.J[kJ^K<,)>[0l\)Z#,CZ'T%S);bAUN3V)"Ht'b7I!f%:*/cqI-8Ho/)SjoQ\3r2HE.grXOT%+GNT\99/phFs,EA"LappbgFk@\,F-injXeql9gD9H+KqchfQXpB%*"Y#!Dc6Vjr/\PH`?oudMHK1!0U>@e+SR.Y9s!X#]:#94=bZHB!5M\S4Q&Cu[]*-C0#,TW@Q+c3WK?uJ-gqn3eMlBRB3mA_R+fUJ%q2<.*O_S;uS%h2n:!FbelI-(HC89>Xb1#&ib:Z\g91'e<.D3PL.?=(fWKXh;O_Z_bepKl]IoTTC<J_(Z#P]GSO/^6f;YBl.7'P%K%he<]I->fd?F3dd!)Jl6r]3ql":&V*tJoTW(4:j5RGE.ijH&V73@gIAO3+dS&33SIra8,-H]pnncCKgV\UdfH4df]]lW!sfQ%6lkf%UGRDem%3*<H?p2q%=\0h_(I\`:>=EAlnig62g8`;<RdaM--;:&q&uSlHfdR,PT<oGGP?$?J/On03sX@o.jSE(-@nYV;A3Vb=<^pB%"6)oNF61f_:7]\1Un$6`oTk^ONJ@BjV1Psg.!dbX2S=J^jj_$^YW'?dSQ(dsaT\-9SIu6*IF?hM!3L(HqDrge,goB`;oJ'Om.k%K%G]!'^<I&7n.dE^EgdF92G)Ol^\j(t,oN.7U%gf5LF'*0GWk!kSCU&S?1G<f^^s\E/0;YMN?&0/iH6MgXZL'C2-rP2?;VI6"+#%Jg%<U-+,/i4)E1O:.Q.ih'sN_YIib[M%t`hWq\Y2Y`7+!de)1u.J;L"@PIg(iF=;*+HE7(uuP*lVBq-E8Nen_M$"7A"bN$$!?&CtN-*%aT[H*/XYW$/@b_+,Hs9f7J@nKBD.#+[P#efh:,TBJ\<nrZs;F+-DbrcIT1Fh[QLK1A+diAC/=uidFbhS\k%n*m;E`..M,po/a"<-%4O_08p+n_i!j?ZX3_qbZ\t-4!'Ja??h3L&"*93;mbg`X;WP+j4kr=`ZY&2]Xn+=X)5\3-F2S38S[lIoC*IhA0?al-JAQmI\T([QE%\`RO9,(Y("O;?RX!D5k@?8[T\rdsN.H=O8$-7t5%IdYjWGsu3%gX156A\dU`l3Pa[2#cB+r7n$!M@aN`o6H9R0GH:?.r\KH=\hU)%;b&DD8Z7>ggI?h'h]4bLI&C.b1I5NB:Pu7%5MjVS.=aZ!k#sXO<![W./$3DkKrp:;a[AF^>1;W-R9]ft9$GrXZid]=QU^;\hDk:i%e,Kkdo$,[08Z8rFr6h&-[MnfJdARNP5]=V_p?AiI2NW$?dYU>EFiEj/p6*1'_#r(%jGe@^k9V,NU?!`4[bE)(E3L!kF<]h(]..JD%4ukW*R4.JtW\jlFl,0TmhK2%7f51f9NLT01ppX0La[l?"7bpU8<P'\1<<mlm-qu*X,ZZ,t5iBQF=t,)4"I'4[Ak>);O9/.i]P._f%N:;8!1]MMtUsXU^UIq0:$%_=3=M&&L0N4Ni-D+IU`?!e03W/B+jaQ7eCT<4dl<'hMl"cI+biCBjSaZK2NEa"Yfqu;^U):@$;<n0P%d\&`V'V#Z).'AWs[L[/O]hJCJD5&iFD`&NSUQf!]UZU<8np>ja+?^7l:X/(s[3T5[0Sb983LJ18L/1al5uu'U-mCR[^_dVf;#O9[%Tef+8@Ql_JI:r[hAdJO4DgnTDat7IQ;t/p(VIE)l2=1oqqZI&0XaNKo^ukL)#KLnM6r-);@N/s"?moi5N1$0UdXCHMIB`0%Uiu(m%o7LXs1J4-)A)NM4F1Yqj;:[;A%(J6k^\e$gg=Q9pg.OP=+)a>FlGoCkp?\A'6pnqU.lu+m]DpRF>lI;'KrHM+*PsElO@,L>OpD=.%labOr[16C[;W5bZ,Z8;M]A'6n?G48EJ"8X$bg^aM:PaP`[Mb+,ea'ZuE7*O.^dbn;-tmb`[RHCJg0s8e,:Nns%A_:dntJc%aGi.s%0D4scrF'U,!!3e]?P*#IV6TKLiX=V8)JpEr.@&Z_<XFK`>\K+jZA\(s=Vds#F[?Z88;rbZ(;qtf7#qK]$SPF+0!n`mPo".i0d2^,%4bG*e?u.Ft/-gU+LAEiq6mE)^gD9SM.a<jXXh!-s:Wals14U;k?d>#\n##f`[tci4WW.p@-aAc?mJ/L\Q)-N4"pYL2E(*$'Sq'0K%Sf0*Q\@42;@qF#rBmrWqe6lugYOpKD@:h1]P"_[tL2nDt%<k&]+:*>=Z>l:=^lH%tEpBO;Nl+_-4V=;6(O)QAXV0eb`EQ4KdB&Z-%j2AZ!@p:>uI!NlWb"\VA"p0)_EsoBrm8AS513p5VM`,>b8Ghq-#n/(19<9\?:-29k"uVa0p^PkH0/GfrNd=P&de^1\q"K/i_>,t\%>&$Y5&^Y<-'`'!eRpa^#,nFhYQ2V3::e9qakX8&KZmIehkMGaH`4DUkr,P"#`P;?GVuQ\VGQ6gKDuTFETE"!prqKiMpXB0@q9P\*%?[hU9s7k%bIf<,mroq2tO.ZIMjUZk:l$ra2n^AT[pntn+o[f`8kMn3;J,&W]J,/E&rquB.?iJfPrf9Mis)L@'S)=.]J,"4prZA+bl8e~>%AI9_PrivateDataEnd